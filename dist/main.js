/*! For license information please see main.js.LICENSE.txt */
(()=>{var e,t,n,r,a={2220:(e,t,n)=>{"use strict";n.a(e,(async(e,t)=>{try{var r=n(9425);n(7664);const e=r.o.MediaPipeHands,a={runtime:"mediapipe",solutionPath:"https://cdn.jsdelivr.net/npm/@mediapipe/hands",modelType:"full"},s=await r.c(e,a),o=document.createElement("video");o.autoplay=!0,o.style="position: fixed; left: 0; top: 0; width: 20%;";const i=document.createElement("div");document.body.appendChild(i),document.body.appendChild(o);const u=document.createElementNS("http://www.w3.org/2000/svg","svg");u.id="vision-mouse",u.style=`position: absolute; left: 0; top: 0; width: 20px; height: 20px; z-index: ${Math.pow(10,10)}; pointer-events: none;`,u.setAttribute("viewBox","0 0 100 100");const l=document.createElementNS("http://www.w3.org/2000/svg","path");l.setAttribute("fill","#0A0"),l.setAttribute("stroke","#020"),l.setAttribute("stroke-width","10"),l.setAttribute("d","M0 0L50 100L70 70L100 50Z"),u.appendChild(l),document.body.appendChild(u);const c=document.createElementNS("http://www.w3.org/2000/svg","svg");c.setAttribute("viewBox","0 0 100 100");const d=document.createElementNS("http://www.w3.org/2000/svg","circle");d.setAttribute("cx","50"),d.setAttribute("cy","50"),d.setAttribute("r","40"),d.setAttribute("stroke","none"),d.setAttribute("fill","#F00"),c.style="position: fixed; left: 0; top: 0; width: 10px; height: 10px; z-index: 10; pointer-events: none;",c.appendChild(d),document.body.appendChild(c);const p=document.createElementNS("http://www.w3.org/2000/svg","svg");p.setAttribute("viewBox","0 0 100 100");const h=document.createElementNS("http://www.w3.org/2000/svg","circle");h.setAttribute("cx","50"),h.setAttribute("cy","50"),h.setAttribute("r","40"),h.setAttribute("stroke","none"),h.setAttribute("fill","#00F"),p.style="position: fixed; left: 0; top: 0; width: 10px; height: 10px; z-index: 10; pointer-events: none;",p.appendChild(h),document.body.appendChild(p);let f,m=!1,g=!1;const y=500,x=50;let b=!1;navigator.mediaDevices.getUserMedia({video:!0}).then((e=>{o.srcObject=e;const t=async()=>{if(b)return;b=!0;const e=await s.estimateHands(o);if(b=!1,e&&e.length>0){const t=[...e[0].keypoints].filter((e=>"thumb_tip"===e.name))[0];if(c.style.transform=`translate(${t.x/630*295}px, ${t.y/430*200-10}px)`,1===e.length){const n=t.x/630*screen.width,r=t.y/630*screen.height;u.style.transform=`translate(${screen.width-n}px, ${document.documentElement.scrollTop+r}px)`;const a=[...e[0].keypoints].filter((e=>"index_finger_tip"===e.name))[0];p.style.transform=`translate(${a.x/630*295}px, ${a.y/430*200-10}px)`,p.style.display="block";const s=Math.pow(a.x-t.x,2)+Math.pow(a.y-t.y,2)<y;s!==g&&(clearTimeout(f),g=s,g!==m&&(f=setTimeout((()=>{m=g,m&&(console.log("click"),document.elementFromPoint(screen.width-n,r).click())}),x)))}else p.style.display="none";if(2===e.length){const n=[...e[0].keypoints].filter((e=>"thumb_ip"===e.name))[0],r=Math.abs(n.y-t.y)>20,a=n.y>t.y;if(r){const e=document.documentElement.scrollTop||document.body.scrollTop;document.documentElement.scrollTop=document.body.scrollTop=e+(a?-10:10)}}const n=[...document.querySelectorAll("*")].filter((e=>"vision-mouse"!==e.id));let r=parseInt(u.style.zIndex)-1;for(let e of n){const t=parseInt(e.style.zIndex)||1;t>r&&(r=t)}u.style.zIndex=r+1}requestAnimationFrame(t)};setTimeout((()=>{requestAnimationFrame(t)}),2e3)})),t()}catch(e){t(e)}}),1)},7523:function(e,t,n){(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var r="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e},a=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var r=e[t];if(r&&r.Math==Math)return r}throw Error("Cannot find global object")}(this);function s(e,t){if(t)e:{var n=a;e=e.split(".");for(var s=0;s<e.length-1;s++){var o=e[s];if(!(o in n))break e;n=n[o]}(t=t(s=n[e=e[e.length-1]]))!=s&&null!=t&&r(n,e,{configurable:!0,writable:!0,value:t})}}function o(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function i(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function u(e){if(!(e instanceof Array)){e=i(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}s("Symbol",(function(e){function t(e,t){this.h=e,r(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.h};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",a=0;return function e(r){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(r||"")+"_"+a++,r)}})),s("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),s=0;s<n.length;s++){var i=a[n[s]];"function"==typeof i&&"function"!=typeof i.prototype[e]&&r(i.prototype,e,{configurable:!0,writable:!0,value:function(){return o(t(this))}})}return e}));var l="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var r=arguments[n];if(r)for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e};s("Object.assign",(function(e){return e||l}));var c,d="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)c=Object.setPrototypeOf;else{var p;e:{var h={};try{h.__proto__={a:!0},p=h.a;break e}catch(e){}p=!1}c=p?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var f=c;function m(e,t){if(e.prototype=d(t.prototype),e.prototype.constructor=e,f)f(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(t,n);r&&Object.defineProperty(e,n,r)}else e[n]=t[n];e.ya=t.prototype}function g(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function y(e){if(e.m)throw new TypeError("Generator is already running");e.m=!0}function x(e,t){e.l={ma:t,na:!0},e.h=e.s||e.v}function b(e,t,n){return e.h=n,{value:t}}function v(e){this.h=new g,this.i=e}function w(e,t,n,r){try{var a=t.call(e.h.j,n);if(!(a instanceof Object))throw new TypeError("Iterator result "+a+" is not an object");if(!a.done)return e.h.m=!1,a;var s=a.value}catch(t){return e.h.j=null,x(e.h,t),S(e)}return e.h.j=null,r.call(e.h,s),S(e)}function S(e){for(;e.h.h;)try{var t=e.i(e.h);if(t)return e.h.m=!1,{value:t.value,done:!1}}catch(t){e.h.i=void 0,x(e.h,t)}if(e.h.m=!1,e.h.l){if(t=e.h.l,e.h.l=null,t.na)throw t.ma;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function k(e){this.next=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.next,t,e.h.u):(e.h.u(t),t=S(e)),t},this.throw=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.throw,t,e.h.u):(x(e.h,t),t=S(e)),t},this.return=function(t){return function(e,t){y(e.h);var n=e.h.j;return n?w(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.h.return):(e.h.return(t),S(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function T(e){return function(e){function t(t){return e.next(t)}function n(t){return e.throw(t)}return new Promise((function(r,a){!function e(s){s.done?r(s.value):Promise.resolve(s.value).then(t,n).then(e,a)}(e.next())}))}(new k(new v(e)))}function I(e){return e||Array.prototype.fill}g.prototype.u=function(e){this.i=e},g.prototype.return=function(e){this.l={return:e},this.h=this.v},s("Promise",(function(e){function t(e){this.i=0,this.j=void 0,this.h=[],this.u=!1;var t=this.l();try{e(t.resolve,t.reject)}catch(e){t.reject(e)}}function n(){this.h=null}function r(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.i=function(e){if(null==this.h){this.h=[];var t=this;this.j((function(){t.m()}))}this.h.push(e)};var s=a.setTimeout;n.prototype.j=function(e){s(e,0)},n.prototype.m=function(){for(;this.h&&this.h.length;){var e=this.h;this.h=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(e){this.l(e)}}}this.h=null},n.prototype.l=function(e){this.j((function(){throw e}))},t.prototype.l=function(){function e(e){return function(r){n||(n=!0,e.call(t,r))}}var t=this,n=!1;return{resolve:e(this.I),reject:e(this.m)}},t.prototype.I=function(e){if(e===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.L(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.F(e):this.s(e)}},t.prototype.F=function(e){var t=void 0;try{t=e.then}catch(e){return void this.m(e)}"function"==typeof t?this.M(t,e):this.s(e)},t.prototype.m=function(e){this.v(2,e)},t.prototype.s=function(e){this.v(1,e)},t.prototype.v=function(e,t){if(0!=this.i)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.i);this.i=e,this.j=t,2===this.i&&this.K(),this.H()},t.prototype.K=function(){var e=this;s((function(){if(e.D()){var t=a.console;void 0!==t&&t.error(e.j)}}),1)},t.prototype.D=function(){if(this.u)return!1;var e=a.CustomEvent,t=a.Event,n=a.dispatchEvent;return void 0===n||("function"==typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"==typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=a.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.j,n(e))},t.prototype.H=function(){if(null!=this.h){for(var e=0;e<this.h.length;++e)o.i(this.h[e]);this.h=null}};var o=new n;return t.prototype.L=function(e){var t=this.l();e.T(t.resolve,t.reject)},t.prototype.M=function(e,t){var n=this.l();try{e.call(t,n.resolve,n.reject)}catch(e){n.reject(e)}},t.prototype.then=function(e,n){function r(e,t){return"function"==typeof e?function(t){try{a(e(t))}catch(e){s(e)}}:t}var a,s,o=new t((function(e,t){a=e,s=t}));return this.T(r(e,a),r(n,s)),o},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.T=function(e,t){function n(){switch(r.i){case 1:e(r.j);break;case 2:t(r.j);break;default:throw Error("Unexpected state: "+r.i)}}var r=this;null==this.h?o.i(n):this.h.push(n),this.u=!0},t.resolve=r,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var a=i(e),s=a.next();!s.done;s=a.next())r(s.value).T(t,n)}))},t.all=function(e){var n=i(e),a=n.next();return a.done?r([]):new t((function(e,t){function s(t){return function(n){o[t]=n,0==--i&&e(o)}}var o=[],i=0;do{o.push(void 0),i++,r(a.value).T(s(o.length-1),t),a=n.next()}while(!a.done)}))},t})),s("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,r=!1,a={next:function(){if(!r&&n<e.length){var a=n++;return{value:t(a,e[a]),done:!1}}return r=!0,{done:!0,value:void 0}}};return a[Symbol.iterator]=function(){return a},a}(this,(function(e){return e}))}})),s("Array.prototype.fill",(function(e){return e||function(e,t,n){var r=this.length||0;for(0>t&&(t=Math.max(0,r+t)),(null==n||n>r)&&(n=r),0>(n=Number(n))&&(n=Math.max(0,r+n)),t=Number(t||0);t<n;t++)this[t]=e;return this}})),s("Int8Array.prototype.fill",I),s("Uint8Array.prototype.fill",I),s("Uint8ClampedArray.prototype.fill",I),s("Int16Array.prototype.fill",I),s("Uint16Array.prototype.fill",I),s("Int32Array.prototype.fill",I),s("Uint32Array.prototype.fill",I),s("Float32Array.prototype.fill",I),s("Float64Array.prototype.fill",I),s("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}})),s("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var r=n.length;for(0>(t=t||0)&&(t=Math.max(t+r,0));t<r;t++){var a=n[t];if(a===e||Object.is(a,e))return!0}return!1}})),s("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}}));var C=this||self;function N(e,t){e=e.split(".");var n,r=C;e[0]in r||void 0===r.execScript||r.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?r=r[n]&&r[n]!==Object.prototype[n]?r[n]:r[n]={}:r[n]=t}function $(e){var t;return(t=C.navigator)&&(t=t.userAgent)||(t=""),-1!=t.indexOf(e)}var E=Array.prototype.map?function(e,t){return Array.prototype.map.call(e,t,void 0)}:function(e,t){for(var n=e.length,r=Array(n),a="string"==typeof e?e.split(""):e,s=0;s<n;s++)s in a&&(r[s]=t.call(void 0,a[s],s,e));return r},_={},R=null;function A(){if(!R){R={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var r=e.concat(t[n].split(""));_[n]=r;for(var a=0;a<r.length;a++){var s=r[a];void 0===R[s]&&(R[s]=a)}}}}var O="undefined"!=typeof Uint8Array,D=!($("Trident")||$("MSIE"))&&"function"==typeof C.btoa;function F(e){if(!D){var t;void 0===t&&(t=0),A(),t=_[t];for(var n=Array(Math.floor(e.length/3)),r=t[64]||"",a=0,s=0;a<e.length-2;a+=3){var o=e[a],i=e[a+1],u=e[a+2],l=t[o>>2];o=t[(3&o)<<4|i>>4],i=t[(15&i)<<2|u>>6],u=t[63&u],n[s++]=l+o+i+u}switch(l=0,u=r,e.length-a){case 2:u=t[(15&(l=e[a+1]))<<2]||r;case 1:e=e[a],n[s]=t[e>>2]+t[(3&e)<<4|l>>4]+u+r}return n.join("")}for(t="";10240<e.length;)t+=String.fromCharCode.apply(null,e.subarray(0,10240)),e=e.subarray(10240);return t+=String.fromCharCode.apply(null,e),btoa(t)}var B,M=RegExp("[-_.]","g");function P(e){switch(e){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function L(e){if(!D)return function(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var r=new Uint8Array(n),a=0;return function(e,t){function n(t){for(;r<e.length;){var n=e.charAt(r++),a=R[n];if(null!=a)return a;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}A();for(var r=0;;){var a=n(-1),s=n(0),o=n(64),i=n(64);if(64===i&&-1===a)break;t(a<<2|s>>4),64!=o&&(t(s<<4&240|o>>2),64!=i&&t(o<<6&192|i))}}(e,(function(e){r[a++]=e})),a!==n?r.subarray(0,a):r}(e);M.test(e)&&(e=e.replace(M,P)),e=atob(e);for(var t=new Uint8Array(e.length),n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}function V(){return B||(B=new Uint8Array(0))}var U={},z="function"==typeof Uint8Array.prototype.slice,W=0,G=0;function j(e){var t=0>e,n=(e=Math.abs(e))>>>0;e=Math.floor((e-n)/4294967296),t&&(t=(n=i(q(n,e))).next().value,e=n.next().value,n=t),W=n>>>0,G=e>>>0}var H,X="function"==typeof BigInt;function q(e,t){return t=~t,e?e=1+~e:t+=1,[e,t]}function K(e,t){this.i=e>>>0,this.h=t>>>0}function Y(e){if(!e)return H||(H=new K(0,0));if(!/^-?\d+$/.test(e))return null;if(16>e.length)j(Number(e));else if(X)e=BigInt(e),W=Number(e&BigInt(4294967295))>>>0,G=Number(e>>BigInt(32)&BigInt(4294967295));else{var t=+("-"===e[0]);G=W=0;for(var n=e.length,r=t,a=(n-t)%6+t;a<=n;r=a,a+=6)r=Number(e.slice(r,a)),G*=1e6,4294967296<=(W=1e6*W+r)&&(G+=W/4294967296|0,W%=4294967296);t&&(e=(t=i(q(W,G))).next().value,t=t.next().value,W=e,G=t)}return new K(W,G)}function Q(e,t){return Error("Invalid wire type: "+e+" (at position "+t+")")}function Z(){return Error("Failed to read varint, encoding is invalid.")}function J(e,t){return Error("Tried to read past the end of the data "+t+" > "+e)}function ee(){throw Error("Invalid UTF8")}function te(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var ne,re,ae,se=void 0,oe="undefined"!=typeof TextDecoder,ie="undefined"!=typeof TextEncoder;function ue(e){if(e!==U)throw Error("illegal external caller")}function le(e,t){if(ue(t),this.V=e,null!=e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}function ce(){return ae||(ae=new le(null,U))}function de(e){ue(U);var t=e.V;return null==(t=null==t||O&&null!=t&&t instanceof Uint8Array?t:"string"==typeof t?L(t):null)?t:e.V=t}function pe(e,t){this.i=null,this.m=!1,this.h=this.j=this.l=0,he(this,e,t)}function he(e,t,n){n=void 0===n?{}:n,e.S=void 0!==n.S&&n.S,t&&(t=function(e){if("string"==typeof e)return{buffer:L(e),C:!1};if(Array.isArray(e))return{buffer:new Uint8Array(e),C:!1};if(e.constructor===Uint8Array)return{buffer:e,C:!1};if(e.constructor===ArrayBuffer)return{buffer:new Uint8Array(e),C:!1};if(e.constructor===le)return{buffer:de(e)||V(),C:!0};if(e instanceof Uint8Array)return{buffer:new Uint8Array(e.buffer,e.byteOffset,e.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}(t),e.i=t.buffer,e.m=t.C,e.l=0,e.j=e.i.length,e.h=e.l)}function fe(e,t){if(e.h=t,t>e.j)throw J(e.j,t)}function me(e){var t=e.i,n=e.h,r=t[n++],a=127&r;if(128&r&&(a|=(127&(r=t[n++]))<<7,128&r&&(a|=(127&(r=t[n++]))<<14,128&r&&(a|=(127&(r=t[n++]))<<21,128&r&&(a|=(r=t[n++])<<28,128&r&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++])))))throw Z();return fe(e,n),a}function ge(e,t){if(0>t)throw Error("Tried to read a negative byte length: "+t);var n=e.h,r=n+t;if(r>e.j)throw J(t,e.j-n);return e.h=r,n}pe.prototype.reset=function(){this.h=this.l};var ye=[];function xe(){this.h=[]}function be(e,t,n){for(;0<n||127<t;)e.h.push(127&t|128),t=(t>>>7|n<<25)>>>0,n>>>=7;e.h.push(t)}function ve(e,t){for(;127<t;)e.h.push(127&t|128),t>>>=7;e.h.push(t)}function we(e,t){if(ye.length){var n=ye.pop();he(n,e,t),e=n}else e=new pe(e,t);this.h=e,this.j=this.h.h,this.i=this.l=-1,this.setOptions(t)}function Se(e){var t=e.h;if(t.h==t.j)return!1;e.j=e.h.h;var n=me(e.h)>>>0;if(t=n>>>3,!(0<=(n&=7)&&5>=n))throw Q(n,e.j);if(1>t)throw Error("Invalid field number: "+t+" (at position "+e.j+")");return e.l=t,e.i=n,!0}function ke(e){switch(e.i){case 0:if(0!=e.i)ke(e);else e:{for(var t=(e=e.h).h,n=t+10,r=e.i;t<n;)if(0==(128&r[t++])){fe(e,t);break e}throw Z()}break;case 1:fe(e=e.h,e.h+8);break;case 2:2!=e.i?ke(e):(t=me(e.h)>>>0,fe(e=e.h,e.h+t));break;case 5:fe(e=e.h,e.h+4);break;case 3:for(t=e.l;;){if(!Se(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.i){if(e.l!=t)throw Error("Unmatched end-group tag");break}ke(e)}break;default:throw Q(e.i,e.j)}}xe.prototype.length=function(){return this.h.length},xe.prototype.end=function(){var e=this.h;return this.h=[],e},we.prototype.setOptions=function(e){e=void 0===e?{}:e,this.ca=void 0!==e.ca&&e.ca},we.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};var Te=[];function Ie(){this.j=[],this.i=0,this.h=new xe}function Ce(e,t){0!==t.length&&(e.j.push(t),e.i+=t.length)}var Ne="function"==typeof Symbol&&"symbol"==typeof Symbol()?Symbol():void 0;function $e(e,t){return Ne?e[Ne]|=t:void 0!==e.A?e.A|=t:(Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}}),t)}function Ee(e,t){Ne?e[Ne]&&(e[Ne]&=~t):void 0!==e.A&&(e.A&=~t)}function _e(e){var t;return null==(t=Ne?e[Ne]:e.A)?0:t}function Re(e,t){Ne?e[Ne]=t:void 0!==e.A?e.A=t:Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}})}function Ae(e){return $e(e,1),e}function Oe(e,t){Re(t,-51&(0|e))}function De(e,t){Re(t,-41&(18|e))}var Fe={};function Be(e){return null!==e&&"object"==typeof e&&!Array.isArray(e)&&e.constructor===Object}var Me,Pe,Le=[];function Ve(e){if(2&_e(e.o))throw Error("Cannot mutate an immutable Message")}function Ue(e){var t=e.length;(t=t?e[t-1]:void 0)&&Be(t)?t.g=1:(t={},e.push((t.g=1,t)))}function ze(e){var t=e.i+e.G;return e.B||(e.B=e.o[t]={})}function We(e,t){return-1===t?null:t>=e.i?e.B?e.B[t]:void 0:e.o[t+e.G]}function Ge(e,t,n,r){Ve(e),je(e,t,n,r)}function je(e,t,n,r){e.j&&(e.j=void 0),t>=e.i||r?ze(e)[t]=n:(e.o[t+e.G]=n,(e=e.B)&&t in e&&delete e[t])}function He(e,t,n,r){var a=We(e,t);Array.isArray(a)||(a=Me);var s=_e(a);if(1&s||Ae(a),r)2&s||$e(a,2),1&n||Object.freeze(a);else{r=!(2&n);var o=2&s;1&n||!o?r&&16&s&&!o&&Ee(a,16):je(e,t,a=Ae(Array.prototype.slice.call(a)))}return a}function Xe(e,t){var n=We(e,t),r=null==n?n:"number"==typeof n||"NaN"===n||"Infinity"===n||"-Infinity"===n?Number(n):void 0;return null!=r&&r!==n&&je(e,t,r),r}function qe(e,t,n,r,a){e.h||(e.h={});var s=e.h[n],o=He(e,n,3,a);if(!s){var i=o;s=[];var u=!!(16&_e(e.o));o=!!(2&_e(i));var l=i;!a&&o&&(i=Array.prototype.slice.call(i));for(var c=o,d=0;d<i.length;d++){var p=i[d],h=t,f=!1;if(f=void 0!==f&&f,void 0!==(p=Array.isArray(p)?new h(p):f?new h:void 0)){var m=f=_e(h=p.o);o&&(m|=2),u&&(m|=16),m!=f&&Re(h,m),h=m,c=c||!!(2&h),s.push(p)}}return e.h[n]=s,t=33|(u=_e(i)),u!=(t=c?-9&t:8|t)&&(c=i,Object.isFrozen(c)&&(c=Array.prototype.slice.call(c)),Re(c,t),i=c),l!==i&&je(e,n,i),(a||r&&o)&&$e(s,2),r&&Object.freeze(s),s}return a||(a=Object.isFrozen(s),r&&!a?Object.freeze(s):!r&&a&&(s=Array.prototype.slice.call(s),e.h[n]=s)),s}function Ke(e,t,n){var r=!!(2&_e(e.o));if(t=qe(e,t,n,r,r),e=He(e,n,3,r),!(r||8&_e(e))){for(r=0;r<t.length;r++){if(2&_e((n=t[r]).o)){var a=it(n,!1);a.j=n}else a=n;n!==a&&(t[r]=a,e[r]=a.o)}$e(e,8)}return t}function Ye(e,t,n){if(null!=n&&"number"!=typeof n)throw Error("Value of float/double field must be a number|null|undefined, found "+typeof n+": "+n);Ge(e,t,n)}function Qe(e,t,n,r,a){Ve(e);var s=qe(e,n,t,!1,!1);return n=null!=r?r:new n,e=He(e,t,2,!1),null!=a?(s.splice(a,0,n),e.splice(a,0,n.o)):(s.push(n),e.push(n.o)),n.C()&&Ee(e,8),n}function Ze(e,t){return null==e?t:e}function Je(e,t,n){return n=void 0===n?0:n,Ze(Xe(e,t),n)}function et(e,t,n,r){if(null!=e){if(Array.isArray(e))e=tt(e,t,n,void 0!==r);else if(Be(e)){var a,s={};for(a in e)s[a]=et(e[a],t,n,r);e=s}else e=t(e,r);return e}}function tt(e,t,n,r){var a=_e(e);r=r?!!(16&a):void 0,e=Array.prototype.slice.call(e);for(var s=0;s<e.length;s++)e[s]=et(e[s],t,n,r);return n(a,e),e}function nt(e){return e.ja===Fe?e.toJSON():function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"object":if(e)if(Array.isArray(e)){if(0!=(128&_e(e)))return Ue(e=Array.prototype.slice.call(e)),e}else{if(O&&null!=e&&e instanceof Uint8Array)return F(e);if(e instanceof le){var t=e.V;return null==t?"":"string"==typeof t?t:e.V=F(t)}}}return e}(e)}function rt(e,t){128&e&&Ue(t)}function at(e,t,n){if(n=void 0===n?De:n,null!=e){if(O&&e instanceof Uint8Array)return e.length?new le(new Uint8Array(e),U):ce();if(Array.isArray(e)){var r=_e(e);return 2&r?e:!t||32&r||!(16&r||0===r)?(4&(t=_e(e=tt(e,at,4&r?De:n,!0)))&&2&t&&Object.freeze(e),e):(Re(e,2|r),e)}return e.ja===Fe?ot(e):e}}function st(e,t,n,r,a,s,o){if(e=e.h&&e.h[n]){if(2&(r=_e(e))?r=e:(De(r,s=E(e,ot)),Object.freeze(s),r=s),Ve(t),o=null==r?Me:Ae([]),null!=r){for(s=!!r.length,e=0;e<r.length;e++){var i=r[e];s=s&&!(2&_e(i.o)),o[e]=i.o}s=1|(s?8:0),((e=_e(o))&s)!==s&&(Object.isFrozen(o)&&(o=Array.prototype.slice.call(o)),Re(o,e|s)),t.h||(t.h={}),t.h[n]=r}else t.h&&(t.h[n]=void 0);je(t,n,o,a)}else Ge(t,n,at(r,s,o),a)}function ot(e){return 2&_e(e.o)||$e((e=it(e,!0)).o,2),e}function it(e,t){var n=e.o,r=[];$e(r,16);var a=e.constructor.h;if(a&&r.push(a),a=e.B){r.length=n.length,r.fill(void 0,r.length,n.length);var s={};r[r.length-1]=s}0!=(128&_e(n))&&Ue(r),t=t||e.C()?De:Oe,s=e.constructor,Pe=r,r=new s(r),Pe=void 0,e.R&&(r.R=e.R.slice()),s=!!(16&_e(n));for(var o=a?n.length-1:n.length,i=0;i<o;i++)st(e,r,i-e.G,n[i],!1,s,t);if(a)for(var u in a)st(e,r,+u,a[u],!0,s,t);return r}function ut(e,t,n){null==e&&(e=Pe),Pe=void 0;var r,a=this.constructor.i||0,s=0<a,o=this.constructor.h,i=!1;if(null==e){var u=48,l=!0;s&&(a=0,u|=128),Re(e=o?[o]:[],u)}else{if(!Array.isArray(e))throw Error();if(o&&o!==e[0])throw Error();var c=u=$e(e,0);if((l=0!=(16&c))&&((i=0!=(32&c))||(c|=32)),s){if(128&c)a=0;else if(0<e.length){var d=e[e.length-1];if(Be(d)&&"g"in d){a=0,c|=128,delete d.g;var p,h=!0;for(p in d){h=!1;break}h&&e.pop()}}}else if(128&c)throw Error();u!==c&&Re(e,c)}if(this.G=(o?0:-1)-a,this.h=void 0,this.o=e,a=(o=this.o.length)-1,o&&Be(o=this.o[a])?(this.B=o,this.i=a-this.G):void 0!==t&&-1<t?(this.i=Math.max(t,a+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE,!s&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(n)for(t=l&&!i&&!0,s=this.i,l=0;l<n.length;l++)(i=n[l])<s?(a=e[i+=this.G])?lt(a,t):e[i]=Me:(r||(r=ze(this)),(a=r[i])?lt(a,t):r[i]=Me)}function lt(e,t){if(Array.isArray(e)){var n=_e(e),r=1;!t||2&n||(r|=16),(n&r)!==r&&Re(e,n|r)}}function ct(e,t,n){if(n){var r,a={};for(r in n){var s=n[r],o=s.qa;o||(a.J=s.wa||s.oa.W,s.ia?(a.aa=xt(s.ia),o=function(e){return function(t,n,r){return e.J(t,n,r,e.aa)}}(a)):s.ka?(a.Z=bt(s.da.P,s.ka),o=function(e){return function(t,n,r){return e.J(t,n,r,e.Z)}}(a)):o=a.J,s.qa=o),o(t,e,s.da),a={J:a.J,aa:a.aa,Z:a.Z}}}!function(e,t){if(t=t.R){Ce(e,e.h.end());for(var n=0;n<t.length;n++)Ce(e,de(t[n])||V())}}(t,e)}Re(Le,23),Me=Object.freeze(Le),ut.prototype.toJSON=function(){return tt(this.o,nt,rt)},ut.prototype.C=function(){return!!(2&_e(this.o))},ut.prototype.ja=Fe,ut.prototype.toString=function(){return this.o.toString()};var dt=Symbol();function pt(e,t,n){return e[dt]||(e[dt]=function(e,r){return t(e,r,n)})}function ht(e){var t=e[dt];if(!t){var n=Rt(e);t=function(e,t){return At(e,t,n)},e[dt]=t}return t}function ft(e){var t=function(e){var t=e.ia;return t?ht(t):(t=e.va)?pt(e.da.P,t,e.ka):void 0}(e),n=e.da,r=e.oa.U;return t?function(e,a){return r(e,a,n,t)}:function(e,t){return r(e,t,n)}}function mt(e,t){var n=e[t];return"function"==typeof n&&0===n.length&&(n=n(),e[t]=n),Array.isArray(n)&&(Ct in n||vt in n||0<n.length&&"function"==typeof n[0])?n:void 0}function gt(e,t,n,r,a,s){t.P=e[0];var o=1;if(e.length>o&&"number"!=typeof e[o]){var i=e[o++];n(t,i)}for(;o<e.length;){n=e[o++];for(var u=o+1;u<e.length&&"number"!=typeof e[u];)u++;switch(i=e[o++],u-=o){case 0:r(t,n,i);break;case 1:(u=mt(e,o))?(o++,a(t,n,i,u)):r(t,n,i,e[o++]);break;case 2:a(t,n,i,u=mt(e,u=o++),e[o++]);break;case 3:s(t,n,i,e[o++],e[o++],e[o++]);break;case 4:s(t,n,i,e[o++],e[o++],e[o++],e[o++]);break;default:throw Error("unexpected number of binary field arguments: "+u)}}return t}var yt=Symbol();function xt(e){var t=e[yt];if(!t){var n=It(e);t=function(e,t){return Ot(e,t,n)},e[yt]=t}return t}function bt(e,t){var n=e[yt];return n||(n=function(e,n){return ct(e,n,t)},e[yt]=n),n}var vt=Symbol();function wt(e,t){e.push(t)}function St(e,t,n){e.push(t,n.W)}function kt(e,t,n,r){var a=xt(r),s=It(r).P,o=n.W;e.push(t,(function(e,t,n){return o(e,t,n,s,a)}))}function Tt(e,t,n,r,a,s){var o=bt(r,s),i=n.W;e.push(t,(function(e,t,n){return i(e,t,n,r,o)}))}function It(e){var t=e[vt];return t||(t=gt(e,e[vt]=[],wt,St,kt,Tt),Ct in e&&vt in e&&(e.length=0),t)}var Ct=Symbol();function Nt(e,t){e[0]=t}function $t(e,t,n,r){var a=n.U;e[t]=r?function(e,t,n){return a(e,t,n,r)}:a}function Et(e,t,n,r,a){var s=n.U,o=ht(r),i=Rt(r).P;e[t]=function(e,t,n){return s(e,t,n,i,o,a)}}function _t(e,t,n,r,a,s,o){var i=n.U,u=pt(r,a,s);e[t]=function(e,t,n){return i(e,t,n,r,u,o)}}function Rt(e){var t=e[Ct];return t||(t=gt(e,e[Ct]={},Nt,$t,Et,_t),Ct in e&&vt in e&&(e.length=0),t)}function At(e,t,n){for(;Se(t)&&4!=t.i;){var r=t.l,a=n[r];if(!a){var s=n[0];s&&(s=s[r])&&(a=n[r]=ft(s))}if(!a||!a(t,e,r)){r=e,s=(a=t).j,ke(a);var o=a;if(!o.ca){if(a=o.h.h-s,o.h.h=s,o=o.h,0==a)a=ce();else{if(s=ge(o,a),o.S&&o.m)a=o.i.subarray(s,s+a);else{o=o.i;var i=s;a=i===(a=s+a)?V():z?o.slice(i,a):new Uint8Array(o.subarray(i,a))}a=0==a.length?ce():new le(a,U)}(s=r.R)?s.push(a):r.R=[a]}}}return e}function Ot(e,t,n){for(var r=n.length,a=1==r%2,s=a?1:0;s<r;s+=2)(0,n[s+1])(t,e,n[s]);ct(e,t,a?n[0]:void 0)}function Dt(e,t){return{U:e,W:t}}var Ft=Dt((function(e,t,n){if(5!==e.i)return!1;var r=(e=e.h).i,a=e.h,s=r[a],o=r[a+1],i=r[a+2];return r=r[a+3],fe(e,e.h+4),e=2*((o=(s<<0|o<<8|i<<16|r<<24)>>>0)>>31)+1,s=o>>>23&255,o&=8388607,Ge(t,n,255==s?o?NaN:1/0*e:0==s?e*Math.pow(2,-149)*o:e*Math.pow(2,s-150)*(o+Math.pow(2,23))),!0}),(function(e,t,n){if(null!=(t=Xe(t,n))){ve(e.h,8*n+5),e=e.h;var r=+t;0===r?0<1/r?W=G=0:(G=0,W=2147483648):isNaN(r)?(G=0,W=2147483647):34028234663852886e22<(r=(n=0>r?-2147483648:0)?-r:r)?(G=0,W=(2139095040|n)>>>0):11754943508222875e-54>r?(r=Math.round(r/Math.pow(2,-149)),G=0,W=(n|r)>>>0):(t=Math.floor(Math.log(r)/Math.LN2),r*=Math.pow(2,-t),16777216<=(r=Math.round(8388608*r))&&++t,G=0,W=(n|t+127<<23|8388607&r)>>>0),n=W,e.h.push(n>>>0&255),e.h.push(n>>>8&255),e.h.push(n>>>16&255),e.h.push(n>>>24&255)}})),Bt=Dt((function(e,t,n){if(0!==e.i)return!1;var r=e.h,a=0,s=e=0,o=r.i,i=r.h;do{var u=o[i++];a|=(127&u)<<s,s+=7}while(32>s&&128&u);for(32<s&&(e|=(127&u)>>4),s=3;32>s&&128&u;s+=7)e|=(127&(u=o[i++]))<<s;if(fe(r,i),!(128>u))throw Z();return r=a>>>0,(e=2147483648&(u=e>>>0))&&(u=~u>>>0,0==(r=1+~r>>>0)&&(u=u+1>>>0)),r=4294967296*u+(r>>>0),Ge(t,n,e?-r:r),!0}),(function(e,t,n){null!=(t=We(t,n))&&("string"==typeof t&&Y(t),null!=t&&(ve(e.h,8*n),"number"==typeof t?(e=e.h,j(t),be(e,W,G)):(n=Y(t),be(e.h,n.i,n.h))))})),Mt=Dt((function(e,t,n){return 0===e.i&&(Ge(t,n,me(e.h)),!0)}),(function(e,t,n){if(null!=(t=We(t,n))&&null!=t)if(ve(e.h,8*n),e=e.h,0<=(n=t))ve(e,n);else{for(t=0;9>t;t++)e.h.push(127&n|128),n>>=7;e.h.push(1)}})),Pt=Dt((function(e,t,n){if(2!==e.i)return!1;var r=me(e.h)>>>0,a=ge(e=e.h,r);if(e=e.i,oe){var s,o=e;(s=ne)||(s=ne=new TextDecoder("utf-8",{fatal:!0})),e=a+r,o=0===a&&e===o.length?o:o.subarray(a,e);try{var i=s.decode(o)}catch(e){if(void 0===se){try{s.decode(new Uint8Array([128]))}catch(e){}try{s.decode(new Uint8Array([97])),se=!0}catch(e){se=!1}}throw!se&&(ne=void 0),e}}else{r=(i=a)+r,a=[];for(var u,l,c=null;i<r;)128>(u=e[i++])?a.push(u):224>u?i>=r?ee():(l=e[i++],194>u||128!=(192&l)?(i--,ee()):a.push((31&u)<<6|63&l)):240>u?i>=r-1?ee():128!=(192&(l=e[i++]))||224===u&&160>l||237===u&&160<=l||128!=(192&(o=e[i++]))?(i--,ee()):a.push((15&u)<<12|(63&l)<<6|63&o):244>=u?i>=r-2?ee():128!=(192&(l=e[i++]))||0!=l-144+(u<<28)>>30||128!=(192&(o=e[i++]))||128!=(192&(s=e[i++]))?(i--,ee()):(u=(7&u)<<18|(63&l)<<12|(63&o)<<6|63&s,u-=65536,a.push(55296+(u>>10&1023),56320+(1023&u))):ee(),8192<=a.length&&(c=te(c,a),a.length=0);i=te(c,a)}return Ge(t,n,i),!0}),(function(e,t,n){if(null!=(t=We(t,n))){var r=!1;if(r=void 0!==r&&r,ie){if(r&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(t))throw Error("Found an unpaired surrogate");t=(re||(re=new TextEncoder)).encode(t)}else{for(var a=0,s=new Uint8Array(3*t.length),o=0;o<t.length;o++){var i=t.charCodeAt(o);if(128>i)s[a++]=i;else{if(2048>i)s[a++]=i>>6|192;else{if(55296<=i&&57343>=i){if(56319>=i&&o<t.length){var u=t.charCodeAt(++o);if(56320<=u&&57343>=u){i=1024*(i-55296)+u-56320+65536,s[a++]=i>>18|240,s[a++]=i>>12&63|128,s[a++]=i>>6&63|128,s[a++]=63&i|128;continue}o--}if(r)throw Error("Found an unpaired surrogate");i=65533}s[a++]=i>>12|224,s[a++]=i>>6&63|128}s[a++]=63&i|128}}t=a===s.length?s:s.subarray(0,a)}ve(e.h,8*n+2),ve(e.h,t.length),Ce(e,e.h.end()),Ce(e,t)}})),Lt=Dt((function(e,t,n,r,a){if(2!==e.i)return!1;t=Qe(t,n,r),n=e.h.j,r=me(e.h)>>>0;var s=e.h.h+r,o=s-n;if(0>=o&&(e.h.j=s,a(t,e,void 0,void 0,void 0),o=s-e.h.h),o)throw Error("Message parsing ended unexpectedly. Expected to read "+r+" bytes, instead read "+(r-o)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.h.h=s,e.h.j=n,!0}),(function(e,t,n,r,a){if(null!=(t=Ke(t,r,n)))for(r=0;r<t.length;r++){var s=e;ve(s.h,8*n+2);var o=s.h.end();Ce(s,o),o.push(s.i),s=o,a(t[r],e),o=e;var i=s.pop();for(i=o.i+o.h.length()-i;127<i;)s.push(127&i|128),i>>>=7,o.i++;s.push(i),o.i++}}));function Vt(e){return function(t,n){e:{if(Te.length){var r=Te.pop();r.setOptions(n),he(r.h,t,n),t=r}else t=new we(t,n);try{var a=Rt(e),s=At(new a.P,t,a);break e}finally{(a=t.h).i=null,a.m=!1,a.l=0,a.j=0,a.h=0,a.S=!1,t.l=-1,t.i=-1,100>Te.length&&Te.push(t)}s=void 0}return s}}function Ut(e){return function(){var t=new Ie;Ot(this,t,It(e)),Ce(t,t.h.end());for(var n=new Uint8Array(t.i),r=t.j,a=r.length,s=0,o=0;o<a;o++){var i=r[o];n.set(i,s),s+=i.length}return t.j=[n],n}}function zt(e){ut.call(this,e)}m(zt,ut);var Wt=[zt,1,Mt,2,Ft,3,Pt,4,Pt];function Gt(e){ut.call(this,e,-1,jt)}zt.prototype.l=Ut(Wt),m(Gt,ut),Gt.prototype.addClassification=function(e,t){return Qe(this,1,zt,e,t),this};var jt=[1],Ht=Vt([Gt,1,Lt,Wt]);function Xt(e){ut.call(this,e)}m(Xt,ut);var qt=[Xt,1,Ft,2,Ft,3,Ft,4,Ft,5,Ft];function Kt(e){ut.call(this,e,-1,Yt)}Xt.prototype.l=Ut(qt),m(Kt,ut);var Yt=[1],Qt=Vt([Kt,1,Lt,qt]);function Zt(e){ut.call(this,e)}m(Zt,ut);var Jt=[Zt,1,Ft,2,Ft,3,Ft,4,Ft,5,Ft,6,Bt],en=Vt(Jt);function tn(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function nn(e){return Ke(e,zt,1).map((function(e){var t=We(e,1);return{index:null==t?0:t,score:Je(e,2),label:null!=We(e,3)?Ze(We(e,3),""):void 0,displayName:null!=We(e,4)?Ze(We(e,4),""):void 0}}))}function rn(e){return{x:Je(e,1),y:Je(e,2),z:Je(e,3),visibility:null!=Xe(e,4)?Je(e,4):void 0}}function an(e){return e.map((function(e){return Ke(Qt(e),Xt,1).map(rn)}))}function sn(e,t){this.i=e,this.h=t,this.m=0}function on(e,t,n){return function(e,t){var n=e.h;if(void 0===e.s){var r=tn(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),a=tn(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),s=n.createProgram();if(n.attachShader(s,r),n.attachShader(s,a),n.linkProgram(s),!n.getProgramParameter(s,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(s));r=e.s=s,n.useProgram(r),a=n.getUniformLocation(r,"sampler0"),e.l={O:n.getAttribLocation(r,"aVertex"),N:n.getAttribLocation(r,"aTex"),xa:a},e.v=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.enableVertexAttribArray(e.l.O),n.vertexAttribPointer(e.l.O,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.u=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.enableVertexAttribArray(e.l.N),n.vertexAttribPointer(e.l.N,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(a,0)}r=e.l,n.useProgram(e.s),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.i.bindTexture2d(t.glName),n.enableVertexAttribArray(r.O),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.vertexAttribPointer(r.O,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(r.N),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.vertexAttribPointer(r.N,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(r.O),n.disableVertexAttribArray(r.N),n.bindBuffer(n.ARRAY_BUFFER,null),e.i.bindTexture2d(0)}(e,t),"function"==typeof e.h.canvas.transferToImageBitmap?Promise.resolve(e.h.canvas.transferToImageBitmap()):n?Promise.resolve(e.h.canvas):"function"==typeof createImageBitmap?createImageBitmap(e.h.canvas):(void 0===e.j&&(e.j=document.createElement("canvas")),new Promise((function(t){e.j.height=e.h.canvas.height,e.j.width=e.h.canvas.width,e.j.getContext("2d",{}).drawImage(e.h.canvas,0,0,e.h.canvas.width,e.h.canvas.height),t(e.j)})))}function un(e){this.h=e}Zt.prototype.l=Ut(Jt);var ln=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function cn(e,t){return t+e}function dn(e,t){window[e]=t}function pn(e){if(this.h=e,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=e&&e.locateFile||cn,"object"==typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"==typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.ha=t,e.options)for(var n=(t=i(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var r=e.options[n].default;void 0!==r&&(this.l[n]="function"==typeof r?r():r)}}function hn(e,t){var n,r;return T((function(a){return t in e.L?a.return(e.L[t]):(n=e.locateFile(t,""),r=fetch(n).then((function(e){return e.arrayBuffer()})),e.L[t]=r,a.return(r))}))}function fn(e,t){for(var n=t.name||"$",r=[].concat(u(t.wants)),a=new e.i.StringList,s=i(t.wants),o=s.next();!o.done;o=s.next())a.push_back(o.value);s=e.i.PacketListener.implement({onResults:function(a){for(var s={},o=0;o<t.wants.length;++o)s[r[o]]=a.get(o);var u=e.listeners[n];u&&(e.I=function(e,t,n){var r,a,s,o,u,l,c,d,p,h,f,m,g,y;return T((function(x){switch(x.h){case 1:if(!n)return x.return(t);for(r={},a=0,s=i(Object.keys(n)),o=s.next();!o.done;o=s.next())u=o.value,"string"!=typeof(l=n[u])&&"texture"===l.type&&void 0!==t[l.stream]&&++a;1<a&&(e.M=!1),c=i(Object.keys(n)),o=c.next();case 2:if(o.done){x.h=4;break}if(d=o.value,"string"==typeof(p=n[d]))return g=r,y=d,b(x,function(e,t,n){var r;return T((function(a){return"number"==typeof n||n instanceof Uint8Array||n instanceof e.i.Uint8BlobList?a.return(n):n instanceof e.i.Texture2dDataOut?((r=e.v[t])||(r=new sn(e.i,e.K),e.v[t]=r),a.return(on(r,n,e.M))):a.return(void 0)}))}(e,d,t[p]),14);if(h=t[p.stream],"detection_list"===p.type){if(h){for(var v=h.getRectList(),w=h.getLandmarksList(),S=h.getClassificationsList(),k=[],I=0;I<v.size();++I){var C=en(v.get(I)),N=void 0;N=void 0===N?0:N,C={la:{ra:Je(C,1),sa:Je(C,2),height:Je(C,3),width:Je(C,4),rotation:Je(C,5,0),pa:Ze(We(C,6),N)},ea:Ke(Qt(w.get(I)),Xt,1).map(rn),ba:nn(Ht(S.get(I)))},k.push(C)}v=k}else v=[];r[d]=v,x.h=7;break}if("proto_list"===p.type){if(h){for(v=Array(h.size()),w=0;w<h.size();w++)v[w]=h.get(w);h.delete()}else v=[];r[d]=v,x.h=7;break}if(void 0===h){x.h=3;break}if("float_list"===p.type){r[d]=h,x.h=7;break}if("proto"===p.type){r[d]=h,x.h=7;break}if("texture"!==p.type)throw Error("Unknown output config type: '"+p.type+"'");return(f=e.v[d])||(f=new sn(e.i,e.K),e.v[d]=f),b(x,on(f,h,e.M),13);case 13:m=x.i,r[d]=m;case 7:p.transform&&r[d]&&(r[d]=p.transform(r[d])),x.h=3;break;case 14:g[y]=x.i;case 3:o=c.next(),x.h=2;break;case 4:return x.return(r)}}))}(e,s,t.outs).then((function(n){n=u(n);for(var a=0;a<t.wants.length;++a){var o=s[r[a]];"object"==typeof o&&o.hasOwnProperty&&o.hasOwnProperty("delete")&&o.delete()}n&&(e.I=n)})))}}),e.j.attachMultiListener(a,s),a.delete()}function mn(e){return void 0===e&&(e=0),1===e?"hand_landmark_full.tflite":"hand_landmark_lite.tflite"}function gn(e){var t=this;e=e||{},this.h=new pn({locateFile:e.locateFile,files:function(e){return[{url:"hands_solution_packed_assets_loader.js"},{simd:!1,url:"hands_solution_wasm_bin.js"},{simd:!0,url:"hands_solution_simd_wasm_bin.js"},{data:!0,url:mn(e.modelComplexity)}]},graph:{url:"hands.binarypb"},inputs:{image:{type:"video",stream:"input_frames_gpu"}},listeners:[{wants:["multi_hand_landmarks","multi_hand_world_landmarks","image_transformed","multi_handedness"],outs:{image:"image_transformed",multiHandLandmarks:{type:"proto_list",stream:"multi_hand_landmarks",transform:an},multiHandWorldLandmarks:{type:"proto_list",stream:"multi_hand_world_landmarks",transform:an},multiHandedness:{type:"proto_list",stream:"multi_handedness",transform:function(e){return e.map((function(e){return nn(Ht(e))[0]}))}}}}],options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"==typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},maxNumHands:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculator",fieldName:"int_value"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){var n,r,a;return T((function(s){return 1==s.h?(n=mn(e),r="third_party/mediapipe/modules/hand_landmark/"+n,b(s,hn(t.h,n),2)):(a=s.i,t.h.overrideFile(r,a),s.return(!0))}))}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"handlandmarktrackinggpu__palmdetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"handlandmarktrackinggpu__handlandmarkgpu__ThresholdingCalculator",fieldName:"threshold"}}}})}(e=pn.prototype).close=function(){return this.j&&this.j.delete(),Promise.resolve()},e.reset=function(){var e=this;return T((function(t){e.j&&(e.j.reset(),e.s={},e.v={}),t.h=0}))},e.setOptions=function(e,t){var n=this;if(t=t||this.h.options){for(var r=[],a=[],s={},o=i(Object.keys(e)),u=o.next();!u.done;s={X:s.X,Y:s.Y},u=o.next())if(!((u=u.value)in this.l)||this.l[u]!==e[u]){this.l[u]=e[u];var l=t[u];void 0!==l&&(l.onChange&&(s.X=l.onChange,s.Y=e[u],r.push(function(e){return function(){return T((function(t){if(1==t.h)return b(t,e.X(e.Y),2);!0===t.i&&(n.u=!0),t.h=0}))}}(s))),l.graphOptionXref&&(u=Object.assign({},{calculatorName:"",calculatorIndex:0},l.graphOptionXref,{valueNumber:1===l.type?e[u]:0,valueBoolean:0===l.type&&e[u],valueString:2===l.type?e[u]:""}),a.push(u)))}0===r.length&&0===a.length||(this.u=!0,this.H=(void 0===this.H?[]:this.H).concat(a),this.F=(void 0===this.F?[]:this.F).concat(r))}},e.initialize=function(){var e=this;return T((function(t){return 1==t.h?b(t,function(e){var t,n,r,a,s,o,i,l,c,d,p;return T((function(h){switch(h.h){case 1:return e.ga?(t=void 0===e.h.files?[]:"function"==typeof e.h.files?e.h.files(e.l):e.h.files,b(h,T((function(e){switch(e.h){case 1:return e.s=2,b(e,WebAssembly.instantiate(ln),4);case 4:e.h=3,e.s=0;break;case 2:return e.s=0,e.l=null,e.return(!1);case 3:return e.return(!0)}})),2)):h.return();case 2:if(n=h.i,"object"==typeof window)return dn("createMediapipeSolutionsWasm",{locateFile:e.locateFile}),dn("createMediapipeSolutionsPackedAssets",{locateFile:e.locateFile}),o=t.filter((function(e){return void 0!==e.data})),i=t.filter((function(e){return void 0===e.data})),l=Promise.all(o.map((function(t){var n=hn(e,t.url);if(void 0!==t.path){var r=t.path;n=n.then((function(t){return e.overrideFile(r,t),Promise.resolve(t)}))}return n}))),c=Promise.all(i.map((function(t){return void 0===t.simd||t.simd&&n||!t.simd&&!n?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(e.locateFile(t.url,e.ha)):Promise.resolve()}))).then((function(){var t,n,r;return T((function(a){if(1==a.h)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,r=e,b(a,t(n),2);r.i=a.i,a.h=0}))})),d=T((function(t){return e.h.graph&&e.h.graph.url?t=b(t,hn(e,e.h.graph.url),0):(t.h=0,t=void 0),t})),b(h,Promise.all([c,l,d]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return r=t.filter((function(e){return void 0===e.simd||e.simd&&n||!e.simd&&!n})).map((function(t){return e.locateFile(t.url,e.ha)})),importScripts.apply(null,u(r)),a=e,b(h,createMediapipeSolutionsWasm(Module),6);case 6:a.i=h.i,e.m=new OffscreenCanvas(1,1),e.i.canvas=e.m,s=e.i.GL.createContext(e.m,{antialias:!1,alpha:!1,ua:"undefined"!=typeof WebGL2RenderingContext?2:1}),e.i.GL.makeContextCurrent(s),h.h=4;break;case 7:if(e.m=document.createElement("canvas"),!(p=e.m.getContext("webgl2",{}))&&!(p=e.m.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),h.return();e.K=p,e.i.canvas=e.m,e.i.createContext(e.m,!0,!0,{});case 4:e.j=new e.i.SolutionWasm,e.ga=!1,h.h=0}}))}(e),2):3!=t.h?b(t,function(e){var t,n,r,a,s,o,u,l;return T((function(c){if(1==c.h)return e.h.graph&&e.h.graph.url&&e.fa===e.h.graph.url?c.return():(e.u=!0,e.h.graph&&e.h.graph.url?(e.fa=e.h.graph.url,b(c,hn(e,e.h.graph.url),3)):void(c.h=2));for(2!=c.h&&(t=c.i,e.j.loadGraph(t)),n=i(Object.keys(e.D)),r=n.next();!r.done;r=n.next())a=r.value,e.j.overrideFile(a,e.D[a]);if(e.D={},e.h.listeners)for(s=i(e.h.listeners),o=s.next();!o.done;o=s.next())u=o.value,fn(e,u);l=e.l,e.l={},e.setOptions(l),c.h=0}))}(e),3):b(t,function(e){var t,n,r,a,s,o;return T((function(u){switch(u.h){case 1:if(!e.u)return u.return();if(!e.F){u.h=2;break}t=i(e.F),n=t.next();case 3:if(n.done){u.h=5;break}return b(u,(0,n.value)(),4);case 4:n=t.next(),u.h=3;break;case 5:e.F=void 0;case 2:if(e.H){for(r=new e.i.GraphOptionChangeRequestList,a=i(e.H),s=a.next();!s.done;s=a.next())o=s.value,r.push_back(o);e.j.changeOptions(r),r.delete(),e.H=void 0}e.u=!1,u.h=0}}))}(e),0)}))},e.overrideFile=function(e,t){this.j?this.j.overrideFile(e,t):this.D[e]=t},e.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},e.send=function(e,t){var n,r,a,s,o,u,l,c,d,p=this;return T((function(h){switch(h.h){case 1:return p.h.inputs?(n=1e3*(null==t?performance.now():t),b(h,p.I,2)):h.return();case 2:return b(h,p.initialize(),3);case 3:for(r=new p.i.PacketDataList,a=i(Object.keys(e)),s=a.next();!s.done;s=a.next())if(o=s.value,u=p.h.inputs[o]){e:{var f=e[o];switch(u.type){case"video":var m=p.s[u.stream];if(m||(m=new sn(p.i,p.K),p.s[u.stream]=m),0===m.m&&(m.m=m.i.createTexture()),"undefined"!=typeof HTMLVideoElement&&f instanceof HTMLVideoElement)var g=f.videoWidth,y=f.videoHeight;else"undefined"!=typeof HTMLImageElement&&f instanceof HTMLImageElement?(g=f.naturalWidth,y=f.naturalHeight):(g=f.width,y=f.height);y={glName:m.m,width:g,height:y},(g=m.h).canvas.width=y.width,g.canvas.height=y.height,g.activeTexture(g.TEXTURE0),m.i.bindTexture2d(m.m),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,f),m.i.bindTexture2d(0),m=y;break e;case"detections":for((m=p.s[u.stream])||(m=new un(p.i),p.s[u.stream]=m),m.data||(m.data=new m.h.DetectionListData),m.data.reset(f.length),y=0;y<f.length;++y){g=f[y];var x=m.data,v=x.setBoundingBox,w=y,S=g.la,k=new Zt;if(Ye(k,1,S.ra),Ye(k,2,S.sa),Ye(k,3,S.height),Ye(k,4,S.width),Ye(k,5,S.rotation),Ge(k,6,S.pa),S=k.l(),v.call(x,w,S),g.ea)for(x=0;x<g.ea.length;++x){k=g.ea[x],w=(v=m.data).addNormalizedLandmark,S=y,k=Object.assign({},k,{visibility:k.visibility?k.visibility:0});var T=new Xt;Ye(T,1,k.x),Ye(T,2,k.y),Ye(T,3,k.z),k.visibility&&Ye(T,4,k.visibility),k=T.l(),w.call(v,S,k)}if(g.ba)for(x=0;x<g.ba.length;++x)w=(v=m.data).addClassification,S=y,k=g.ba[x],Ye(T=new zt,2,k.score),k.index&&Ge(T,1,k.index),k.label&&Ge(T,3,k.label),k.displayName&&Ge(T,4,k.displayName),k=T.l(),w.call(v,S,k)}m=m.data;break e;default:m={}}}switch(l=m,c=u.stream,u.type){case"video":r.pushTexture2d(Object.assign({},l,{stream:c,timestamp:n}));break;case"detections":(d=l).stream=c,d.timestamp=n,r.pushDetectionList(d);break;default:throw Error("Unknown input config type: '"+u.type+"'")}}return p.j.send(r),b(h,p.I,4);case 4:r.delete(),h.h=0}}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},N("Solution",pn),N("OptionType",{BOOL:0,NUMBER:1,ta:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=gn.prototype).close=function(){return this.h.close(),Promise.resolve()},e.onResults=function(e){this.h.onResults(e)},e.initialize=function(){var e=this;return T((function(t){return b(t,e.h.initialize(),0)}))},e.reset=function(){this.h.reset()},e.send=function(e){var t=this;return T((function(n){return b(n,t.h.send(e),0)}))},e.setOptions=function(e){this.h.setOptions(e)},N("Hands",gn),N("HAND_CONNECTIONS",[[0,1],[1,2],[2,3],[3,4],[0,5],[5,6],[6,7],[7,8],[5,9],[9,10],[10,11],[11,12],[9,13],[13,14],[14,15],[15,16],[13,17],[0,17],[17,18],[18,19],[19,20]]),N("VERSION","0.4.1675469240")}).call(this)},9425:(e,t,n)=>{"use strict";n.d(t,{o:()=>gt,c:()=>Et});var r={};n.r(r),n.d(r,{json:()=>M});var a={};n.r(a),n.d(a,{json:()=>P});var s={};n.r(s),n.d(s,{json:()=>L});var o={};n.r(o),n.d(o,{json:()=>V});var i={};n.r(i),n.d(i,{json:()=>U});var u={};n.r(u),n.d(u,{json:()=>z});var l={};n.r(l),n.d(l,{json:()=>W});var c={};n.r(c),n.d(c,{json:()=>G});var d={};n.r(d),n.d(d,{json:()=>j});var p={};n.r(p),n.d(p,{json:()=>H});var h={};n.r(h),n.d(h,{json:()=>X});var f={};n.r(f),n.d(f,{json:()=>q});var m={};n.r(m),n.d(m,{json:()=>K});var g={};n.r(g),n.d(g,{json:()=>Y});var y={};n.r(y),n.d(y,{json:()=>Q});var x={};n.r(x),n.d(x,{json:()=>Z});var b={};n.r(b),n.d(b,{json:()=>J});var v={};n.r(v),n.d(v,{json:()=>ee});var w={};n.r(w),n.d(w,{json:()=>te});var S={};n.r(S),n.d(S,{OP_SCOPE_SUFFIX:()=>xe.zvA,abs:()=>xe.WnP,acos:()=>xe.Khb,acosh:()=>xe.__u,add:()=>xe.IHx,addN:()=>xe.QBD,all:()=>xe.$6P,any:()=>xe.YjB,argMax:()=>xe.NqF,argMin:()=>xe.vHJ,asin:()=>xe.ZRM,asinh:()=>xe.VfV,atan:()=>xe.z4N,atan2:()=>xe.fvJ,atanh:()=>xe.C80,avgPool:()=>xe.wS1,avgPool3d:()=>xe.uR5,basicLSTMCell:()=>xe.zEQ,batchNorm:()=>xe.tgs,batchNorm2d:()=>xe.Dxk,batchNorm3d:()=>xe.JY5,batchNorm4d:()=>xe.p3b,batchToSpaceND:()=>xe.E4h,bincount:()=>xe.yE8,bitwiseAnd:()=>xe.ycw,booleanMaskAsync:()=>xe.anm,broadcastArgs:()=>xe.XsQ,broadcastTo:()=>xe.UFq,buffer:()=>xe.f3b,cast:()=>xe.pju,ceil:()=>xe.mDi,clipByValue:()=>xe.iUl,clone:()=>xe.d9v,complex:()=>xe.PYB,concat:()=>xe.zoF,concat1d:()=>xe.gME,concat2d:()=>xe.Izb,concat3d:()=>xe.MNy,concat4d:()=>xe.ZaL,conv1d:()=>xe.PAt,conv2d:()=>xe.Tek,conv2dTranspose:()=>xe.bc,conv3d:()=>xe.pdZ,conv3dTranspose:()=>xe.$QV,cos:()=>xe.mCk,cosh:()=>xe.f9Y,cosineWindow:()=>xe.mew,cumprod:()=>xe.$Gn,cumsum:()=>xe.zbp,denseBincount:()=>xe.ppE,depthToSpace:()=>xe.nTT,depthwiseConv2d:()=>xe.B10,diag:()=>xe.Ka3,dilation2d:()=>xe.WmZ,div:()=>xe.hiC,divNoNan:()=>xe.NTj,dot:()=>xe.AKD,dropout:()=>xe.rvX,einsum:()=>xe.WYO,elu:()=>xe.pyx,enclosingPowerOfTwo:()=>xe.GRh,ensureShape:()=>xe.EDe,equal:()=>xe.DgJ,erf:()=>xe.qNN,euclideanNorm:()=>xe.d2q,exp:()=>xe.Qqt,expandDims:()=>xe.dt4,expm1:()=>xe.t$B,eye:()=>xe.iyy,fft:()=>xe.kp_,fill:()=>xe.hlL,floor:()=>xe.GWj,floorDiv:()=>xe.qPi,fused:()=>xe.imm,gather:()=>xe.Iqj,gatherND:()=>xe.dbB,greater:()=>xe.pjt,greaterEqual:()=>xe.brS,ifft:()=>xe.Sxn,imag:()=>xe.asL,image:()=>xe.BHj,inTopKAsync:()=>xe.V3u,irfft:()=>xe.wx0,isFinite:()=>xe.xVT,isInf:()=>xe.UWc,isNaN:()=>xe.i2d,leakyRelu:()=>xe.hi7,less:()=>xe.d9m,lessEqual:()=>xe.zN1,linalg:()=>xe.$r2,linspace:()=>xe.SX3,localResponseNormalization:()=>xe.G9k,log:()=>xe.cM7,log1p:()=>xe.Krr,logSigmoid:()=>xe.e_t,logSoftmax:()=>xe.CmS,logSumExp:()=>xe.l_t,logicalAnd:()=>xe.HvI,logicalNot:()=>xe.hJK,logicalOr:()=>xe.K5V,logicalXor:()=>xe.egP,losses:()=>xe.MB5,lowerBound:()=>xe.eab,matMul:()=>xe.OI3,max:()=>xe.Fp7,maxPool:()=>xe._sB,maxPool3d:()=>xe.YQQ,maxPoolWithArgmax:()=>xe.Ip$,maximum:()=>xe.gWQ,mean:()=>xe.J69,meshgrid:()=>xe.ry_,min:()=>xe.VV$,minimum:()=>xe.LTh,mirrorPad:()=>xe.VdP,mod:()=>xe.wQq,moments:()=>xe.Gi7,movingAverage:()=>xe.p_,mul:()=>xe.dC7,multiRNNCell:()=>xe.rq4,multinomial:()=>xe.SJ_,neg:()=>xe.W76,norm:()=>xe.KOy,notEqual:()=>xe.Quu,oneHot:()=>xe.lfX,ones:()=>xe.iUs,onesLike:()=>xe.JpU,op:()=>xe.op,outerProduct:()=>xe.N2O,pad:()=>xe.vku,pad1d:()=>xe.pNR,pad2d:()=>xe.koy,pad3d:()=>xe.t1L,pad4d:()=>xe.lGY,pool:()=>xe.d_R,pow:()=>xe.sQ3,prelu:()=>xe.AL3,print:()=>xe.S0v,prod:()=>xe.WVs,raggedGather:()=>xe.$gW,raggedRange:()=>xe.VT$,raggedTensorToTensor:()=>xe.N89,rand:()=>xe.TN_,randomGamma:()=>xe.wzB,randomNormal:()=>xe.nGf,randomStandardNormal:()=>xe.ruB,randomUniform:()=>xe.LGj,randomUniformInt:()=>xe.pe5,range:()=>xe.w6H,real:()=>xe.kwC,reciprocal:()=>xe.M25,relu:()=>xe.UYe,relu6:()=>xe.btT,reshape:()=>xe.XLQ,reverse:()=>xe.GYS,reverse1d:()=>xe.SDf,reverse2d:()=>xe.diP,reverse3d:()=>xe.sx7,reverse4d:()=>xe.mG2,rfft:()=>xe.QEs,round:()=>xe.NMM,rsqrt:()=>xe.bp0,scalar:()=>xe.iD$,scatterND:()=>xe.snQ,searchSorted:()=>xe.zcT,selu:()=>xe.U8D,separableConv2d:()=>xe.U_I,setdiff1dAsync:()=>xe.ODp,sigmoid:()=>xe.XD2,sign:()=>xe.Xxe,signal:()=>xe.tdS,sin:()=>xe.O$l,sinh:()=>xe.R_K,slice:()=>xe.tPi,slice1d:()=>xe.jZU,slice2d:()=>xe.SmN,slice3d:()=>xe.CnO,slice4d:()=>xe.p0P,softmax:()=>xe.XAC,softplus:()=>xe.Wvh,spaceToBatchND:()=>xe.fBT,sparse:()=>xe.rVs,sparseToDense:()=>xe.ers,spectral:()=>xe.uN7,split:()=>xe.Vl2,sqrt:()=>xe._b3,square:()=>xe.h62,squaredDifference:()=>xe.$i,squeeze:()=>xe.L9e,stack:()=>xe.knu,step:()=>xe.Nbs,stridedSlice:()=>xe.NXj,string:()=>xe.Z_8,sub:()=>xe.luU,sum:()=>xe.Smz,tan:()=>xe.ORZ,tanh:()=>xe.AEp,tensor:()=>xe.XeE,tensor1d:()=>xe.RRF,tensor2d:()=>xe.odF,tensor3d:()=>xe.wOQ,tensor4d:()=>xe.yXz,tensor5d:()=>xe.Bfx,tensor6d:()=>xe.xZs,tensorScatterUpdate:()=>xe.Pg0,tile:()=>xe.Gg6,topk:()=>xe.hg7,transpose:()=>xe.p4s,truncatedNormal:()=>xe.Xu6,unique:()=>xe.Two,unsortedSegmentSum:()=>xe.pUJ,unstack:()=>xe.HHK,upperBound:()=>xe.GaM,variable:()=>xe.VD$,where:()=>xe.arb,whereAsync:()=>xe.itS,zeros:()=>xe.lls,zerosLike:()=>xe.P84});var k,T,I=n(7523),C=n(2544);(0,C.OBj)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(k||(k={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(T||(T={}));const N={};function $(e){return N[e]}function E(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return _(t.inputNames[i],n,r,a);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>_(e,n,r,a)))}const u=_(t.inputNames[i],n,r,a),l=u.dataSync();return"number"===s.type?l[0]:C.D5U.toNestedArray(u.shape,l)}const o=t.attrParams[e];return o&&o.value}function _(e,t,n,r){const[a,s]=D(e,n);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[O(a,e)]));return void 0!==o?t[O(a,o)][s]:void 0}function R(e,t,n){return t[O(e,n.currentContextId)]}function A(e,t){const[n,r,a]=D(e,t);return[O(n,t&&t.currentContextId),r,a]}function O(e,t){return t?`${e}-${t}`:e}function D(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let a;if(1===r.length)a=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;a=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,a),a}function F(e,t,n){let r=E("pad",e,t,n);if("explicit"===r){r=E("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function B(e){return e.kept?e:(0,C.d9v)(e)}const M=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],P=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],L=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],V=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],U=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],z=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],W=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],G=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],j=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],H=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],X=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],q=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],K=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Y=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Q=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Z=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],J=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],ee=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],te=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class ne{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,a,s,o,i,u,l,c,d,p,h,f,m,g,y,x,b,v,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=A(e),s=o[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?d.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=A(e),n=o[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=A(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:o,inputs:i,outputs:u,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=$(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=ae(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=fe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=oe(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=he(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=se(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=ge(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ge(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=pe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=me(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=le(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=ce(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=ue(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=A(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ie(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=A(e),o=r[a];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=A(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function re(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,C.OBj)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function ae(e,t,n,r=!1){const a=e[t];return null!=a?re(a.s,r):n}function se(e,t,n){const r=e[t];return r?r.b:n}function oe(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function ie(e){switch("string"==typeof e&&(e=k[e]),e){case k.DT_FLOAT:case k.DT_HALF:return"float32";case k.DT_INT32:case k.DT_INT64:case k.DT_INT8:case k.DT_UINT8:return"int32";case k.DT_BOOL:return"bool";case k.DT_DOUBLE:return"float32";case k.DT_STRING:return"string";default:return null}}function ue(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function le(e,t,n){const r=e[t];return r&&r.type?ie(r.type):n}function ce(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>ie(e))):n}function de(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function pe(e,t,n){const r=e[t];return r&&r.shape?de(r.shape):n}function he(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function fe(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>re(e,r))):n}function me(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>de(e))):n}function ge(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class ye{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return _(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return _(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return oe(this.node.rawAttrs,e,t);if(null!=n.s)return ae(this.node.rawAttrs,e,t);if(null!=n.b)return se(this.node.rawAttrs,e,t);if(null!=n.shape)return pe(this.node.rawAttrs,e,t);if(null!=n.type)return le(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return he(this.node.rawAttrs,e,t);if(null!=n.list.s)return fe(this.node.rawAttrs,e,t);if(null!=n.list.shape)return me(this.node.rawAttrs,e,t);if(null!=n.list.b)return ge(this.node.rawAttrs,e,t);if(null!=n.list.type)return ce(this.node.rawAttrs,e,t)}return t}}var xe=n(8038);function be(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){C.D5U.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];C.D5U.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function ve(e){return"number"!=typeof e&&!e.some((e=>e<0))}function we(e,t,n){let r=Se(e,n);const a=!ve(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=Se(e.shape,r)})),!ve(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Se(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class ke{constructor(e,t,n,r,a,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,C.iD$)(0),(0,C.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),be(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,C.CnY)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,C.XeE)([],[0].concat(this.elementShape));const n=this.readMany(e);return be(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,C.knu)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,C.XeE)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return be(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,C.zoF)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,C.HHK)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];(0,C.lub)((()=>{t=(0,C.XLQ)(t,[1,n,a]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],a];s[n]=(0,C.XLQ)((0,C.tPi)(t,o,i),this.elementShape)}return s}));const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,s)}}class Te{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);be(t,e.shape,"TensorList shape mismatch: "),(0,C.CnY)(e)})),this.idTensor=(0,C.iD$)(0),this.maxNumElements=r,(0,C.CnY)(this.idTensor)}copy(){return new Te([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);be(e,this.elementShape,"TensorList shape mismatch: ");const r=we(this.elementShape,this.tensors,e);return(0,C.lub)((()=>{const e=this.tensors.map((e=>(0,C.XLQ)(e,r)));return(0,C.knu)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=we(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,be(r.shape,e,"TensorList shape mismatch: "),(0,C.XLQ)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(be(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,C.CnY)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Te([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);be(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=we(this.elementShape,this.tensors,t);return(0,C.XLQ)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);be(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,C.CnY)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);be(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=we(this.elementShape,this.tensors,n);return 0===e.length?(0,C.XeE)([],[0].concat(r)):(0,C.lub)((()=>{const t=e.map((e=>(0,C.XLQ)(this.tensors[e],r)));return(0,C.knu)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);be(this.elementShape,t,"TensorList shape mismatch: ");const n=we(this.elementShape,this.tensors,t);return 0===this.size()?(0,C.XeE)([],[0].concat(n)):(0,C.lub)((()=>{const e=this.tensors.map((e=>(0,C.XLQ)(e,n)));return(0,C.zoF)(e,0)}))}}function Ie(e,t,n){const[r,a]=E("fusedOps",e,t,n),s="biasadd"===r,o=!s,i="prelu"===a,u="fusedbatchnorm"===r,l=E("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=E("strides",e,t,n),d=F(e,t,n),p=E("dataFormat",e,t,n).toUpperCase(),h=E("dilations",e,t,n);let[f,m]=E("args",e,t,n);return o&&(m=f,f=void 0),{stride:c,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:E("leakyreluAlpha",e,t,n)}}function Ce(e,t,n){return{boxes:E("boxes",e,t,n),scores:E("scores",e,t,n),maxOutputSize:E("maxOutputSize",e,t,n),iouThreshold:E("iouThreshold",e,t,n),scoreThreshold:E("scoreThreshold",e,t,n),softNmsSigma:E("softNmsSigma",e,t,n)}}var Ne=n(9494);class $e{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,C.iD$)(0),this.tensorMap=new Map,(0,C.CnY)(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ne.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,C.lub)((()=>{const e=(0,C.HHK)(t),r=n.length,a=e.length;C.D5U.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];(0,C.CnY)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,C.lub)((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return(0,C.knu)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function Ee(e,t,n,r,a=C.lub){const s=((e,t,n)=>{switch(e.category){case"arithmetic":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(E("a",e,t,n),E("b",e,t,n))];case"AddN":return[r.addN(E("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(E("a",e,t,n),E("b",e,t,n))];case"Mul":return[r.mul(E("a",e,t,n),E("b",e,t,n))];case"RealDiv":case"Div":return[r.div(E("a",e,t,n),E("b",e,t,n))];case"DivNoNan":return[r.divNoNan(E("a",e,t,n),E("b",e,t,n))];case"FloorDiv":return[r.floorDiv(E("a",e,t,n),E("b",e,t,n))];case"Sub":return[r.sub(E("a",e,t,n),E("b",e,t,n))];case"Minimum":return[r.minimum(E("a",e,t,n),E("b",e,t,n))];case"Maximum":return[r.maximum(E("a",e,t,n),E("b",e,t,n))];case"Pow":return[r.pow(E("a",e,t,n),E("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(E("a",e,t,n),E("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(E("x",e,t,n))];case"Acos":return[r.acos(E("x",e,t,n))];case"Acosh":return[r.acosh(E("x",e,t,n))];case"Asin":return[r.asin(E("x",e,t,n))];case"Asinh":return[r.asinh(E("x",e,t,n))];case"Atan":return[r.atan(E("x",e,t,n))];case"Atan2":return[r.atan2(E("x",e,t,n),E("y",e,t,n))];case"Atanh":return[r.atanh(E("x",e,t,n))];case"Ceil":return[r.ceil(E("x",e,t,n))];case"Complex":return[r.complex(E("real",e,t,n),E("imag",e,t,n))];case"Cos":return[r.cos(E("x",e,t,n))];case"Cosh":return[r.cosh(E("x",e,t,n))];case"Elu":return[r.elu(E("x",e,t,n))];case"Erf":return[r.erf(E("x",e,t,n))];case"Exp":return[r.exp(E("x",e,t,n))];case"Expm1":return[r.expm1(E("x",e,t,n))];case"Floor":return[r.floor(E("x",e,t,n))];case"Log":return[r.log(E("x",e,t,n))];case"Log1p":return[r.log1p(E("x",e,t,n))];case"Imag":return[r.imag(E("x",e,t,n))];case"Neg":return[r.neg(E("x",e,t,n))];case"Reciprocal":return[r.reciprocal(E("x",e,t,n))];case"Real":return[r.real(E("x",e,t,n))];case"Relu":return[r.relu(E("x",e,t,n))];case"Round":return[r.round(E("x",e,t,n))];case"Selu":return[r.selu(E("x",e,t,n))];case"Sigmoid":return[r.sigmoid(E("x",e,t,n))];case"Sin":return[r.sin(E("x",e,t,n))];case"Sign":return[r.sign(E("x",e,t,n))];case"Sinh":return[r.sinh(E("x",e,t,n))];case"Softplus":return[r.softplus(E("x",e,t,n))];case"Sqrt":return[r.sqrt(E("x",e,t,n))];case"Square":return[r.square(E("x",e,t,n))];case"Tanh":return[r.tanh(E("x",e,t,n))];case"Tan":return[r.tan(E("x",e,t,n))];case"ClipByValue":return[r.clipByValue(E("x",e,t,n),E("clipValueMin",e,t,n),E("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(E("x",e,t,n))];case"Rsqrt":return[r.rsqrt(_(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(E("x",e,t,n),E("alpha",e,t,n))];case"Prelu":return[r.prelu(E("x",e,t,n),E("alpha",e,t,n))];case"IsNan":return[r.isNaN(_(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(_(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(_(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=E("thenBranch",e,t,n),a=E("elseBranch",e,t,n),s=E("cond",e,t,n),o=E("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=E("body",e,t,n),a=E("cond",e,t,n),s=E("args",e,t,n),o=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[B(E("pred",e,t,n))];case"Switch":{const r=E("pred",e,t,n);let a=E("data",e,t,n);return a.kept||(a=B(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==_(e,t,n)));return r?[B(_(r,t,n))]:void 0}case"Enter":{const r=E("frameName",e,t,n),a=E("tensor",e,t,n);return n.enterFrame(r),[B(a)]}case"Exit":{const r=E("tensor",e,t,n);return n.exitFrame(),[B(r)]}case"NextIteration":{const r=E("tensor",e,t,n);return n.nextIteration(),[B(r)]}case"TensorArrayV3":{const r=E("size",e,t,n),a=E("dtype",e,t,n),s=E("elementShape",e,t,n),o=E("dynamicSize",e,t,n),i=E("clearAfterRead",e,t,n),u=E("identicalElementShapes",e,t,n),l=E("name",e,t,n),c=new ke(l,a,r,s,u,o,i);return n.addTensorArray(c),[c.idTensor,(0,C.iD$)(1)]}case"TensorArrayWriteV3":{const r=E("tensorArrayId",e,t,n),a=E("index",e,t,n),s=E("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(a,s),[o.idTensor]}case"TensorArrayReadV3":{const r=E("tensorArrayId",e,t,n),a=E("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=E("tensorArrayId",e,t,n),a=E("indices",e,t,n),s=E("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=E("tensorArrayId",e,t,n),a=E("indices",e,t,n),s=E("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(a,s),[o.idTensor]}case"TensorArrayConcatV3":{const r=E("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=E("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=E("tensorArrayId",e,t,n),a=E("tensor",e,t,n),s=E("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(s,a),[o.idTensor]}case"TensorArraySizeV3":{const r=E("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[(0,C.iD$)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=E("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=E("tensorListId",e,t,n),a=E("index",e,t,n),s=E("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(a,s),[o.idTensor]}case"TensorListGetItem":{const r=E("tensorListId",e,t,n),a=E("index",e,t,n),s=E("elementShape",e,t,n),o=E("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=E("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new Te([],n,e.dtype,r),o=(0,C.HHK)(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(E("tensor",e,t,n),r,E("elementShape",e,t,n),E("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=E("elementShape",e,t,n),a=E("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=E(s,e,t,n),i=function(e,t,n,r){return new Te([],e,t,r)}(r,a,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=E("tensorListId",e,t,n),a=E("indices",e,t,n),s=E("elementShape",e,t,n),o=E("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,o,s)]}case"TensorListStack":{const r=E("tensorListId",e,t,n),a=E("elementShape",e,t,n),s=E("elementDType",e,t,n),o=E("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);be(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=(0,C.HHK)(e);return new Te(a,t,r)}(E("tensor",e,t,n),E("elementShape",e,t,n),E("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=E("tensorListId",e,t,n),a=n.getTensorList(r.id),s=E("dtype",e,t,n),o=E("elementShape",e,t,n);return[a.concat(s,o)]}case"TensorListPushBack":{const r=E("tensorListId",e,t,n),a=E("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=E("tensorListId",e,t,n),a=E("elementShape",e,t,n),s=E("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=E("tensor",e,t,n),a=E("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=Se(e.shape.slice(1),n),o=0===r?0:e.size/r,i=(0,C.lub)((()=>{const n=[];e=(0,C.XLQ)(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:a[r-1],0],u=[1,t[r],o];n[r]=(0,C.XLQ)((0,C.tPi)(e,i,u),s)}return e.dispose(),n})),u=new Te([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)u.setItem(e,i[e]);return u}(r,E("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const r=E("tensorListId",e,t,n),a=n.getTensorList(r.id);return[(0,C.iD$)(a.size(),"int32")]}case"TensorListResize":{const r=E("tensorListId",e,t,n),a=E("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Conv1D":{const a=E("stride",e,t,n),s=E("pad",e,t,n),o=E("dataFormat",e,t,n).toUpperCase(),i=E("dilation",e,t,n);return[r.conv1d(E("x",e,t,n),E("filter",e,t,n),a,s,o,i)]}case"Conv2D":{const a=E("strides",e,t,n),s=F(e,t,n),o=E("dataFormat",e,t,n).toUpperCase(),i=E("dilations",e,t,n);return[r.conv2d(E("x",e,t,n),E("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:a,pad:s,dataFormat:o,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:d}=Ie(e,t,n);return[r.fused.conv2d({x:E("x",e,t,n),filter:E("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:s,dataFormat:o,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:d}=Ie(e,t,n);return[r.fused.depthwiseConv2d({x:E("x",e,t,n),filter:E("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=E("outputShape",e,t,n),s=E("strides",e,t,n),o=F(e,t,n);return[r.conv2dTranspose(E("x",e,t,n),E("filter",e,t,n),a,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=E("strides",e,t,n),s=F(e,t,n),o=E("dilations",e,t,n),i=E("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(E("input",e,t,n),E("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const a=E("strides",e,t,n),s=E("pad",e,t,n),o=E("dataFormat",e,t,n).toUpperCase(),i=E("dilations",e,t,n);return[r.conv3d(E("x",e,t,n),E("filter",e,t,n),[a[1],a[2],a[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const a=E("strides",e,t,n),s=E("pad",e,t,n),o=E("kernelSize",e,t,n);return[r.avgPool(E("x",e,t,n),[o[1],o[2]],[a[1],a[2]],s)]}case"MaxPool":{const a=E("strides",e,t,n),s=E("pad",e,t,n),o=E("kernelSize",e,t,n);return[r.maxPool(E("x",e,t,n),[o[1],o[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{const a=E("strides",e,t,n),s=E("pad",e,t,n),o=E("kernelSize",e,t,n),i=E("includeBatchInIndex",e,t,n),{result:u,indexes:l}=r.maxPoolWithArgmax(E("x",e,t,n),[o[1],o[2]],[a[1],a[2]],s,i);return[u,l]}case"AvgPool3D":{const a=E("strides",e,t,n),s=E("pad",e,t,n),o=E("kernelSize",e,t,n);return[r.avgPool3d(E("x",e,t,n),[o[1],o[2],o[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{const a=E("strides",e,t,n),s=E("pad",e,t,n),o=E("kernelSize",e,t,n);return[r.maxPool3d(E("x",e,t,n),[o[1],o[2],o[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{const a=E("strides",e,t,n),s=E("pad",e,t,n),o=E("dilations",e,t,n),i=a[1],u=a[2],l=o[1],c=o[2];return[r.dilation2d(E("x",e,t,n),E("filter",e,t,n),[i,u],s,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Fill":{const a=E("shape",e,t,n),s=E("dtype",e,t,n),o=E("value",e,t,n);return[r.fill(a,o,s)]}case"LinSpace":{const a=E("start",e,t,n),s=E("stop",e,t,n),o=E("num",e,t,n);return[r.linspace(a,s,o)]}case"Multinomial":{const a=E("logits",e,t,n),s=E("numSamples",e,t,n),o=E("seed",e,t,n);return[r.multinomial(a,s,o)]}case"OneHot":{const a=E("indices",e,t,n),s=E("depth",e,t,n),o=E("onValue",e,t,n),i=E("offValue",e,t,n),u=E("dtype",e,t,n);return[r.oneHot(a,s,o,i,u)]}case"Ones":return[r.ones(E("shape",e,t,n),E("dtype",e,t,n))];case"OnesLike":return[r.onesLike(E("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(E("shape",e,t,n),E("dtype",e,t,n),E("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(E("shape",e,t,n),E("minval",e,t,n),E("maxval",e,t,n),E("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(E("shape",e,t,n),E("minval",e,t,n),E("maxval",e,t,n),E("seed",e,t,n))];case"Range":{const a=E("start",e,t,n),s=E("stop",e,t,n),o=E("step",e,t,n);return[r.range(a,s,o,E("dtype",e,t,n))]}case"TruncatedNormal":{const a=E("shape",e,t,n),s=E("mean",e,t,n),o=E("stdDev",e,t,n),i=E("seed",e,t,n);return[r.truncatedNormal(a,s,o,E("dtype",e,t,n),i)]}case"Zeros":return[r.zeros(E("shape",e,t,n),E("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(E("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,a=S)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=Ce(e,t,n),c=await a.image.nonMaxSuppressionWithScoreAsync(r,s,o,i,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=Ce(e,t,n),l=E("padToMaxOutputSize",e,t,n),c=await a.image.nonMaxSuppressionPaddedAsync(r,s,o,i,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=Ce(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,o,i,u)]}case"Where":{const r=a.cast(E("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync(E("x",e,t,n),E("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"LowerBound":{const a=E("sortedSequence",e,t,n),s=E("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{const a=E("x",e,t,n),s=E("k",e,t,n),o=E("sorted",e,t,n),i=r.topk(a,s,o);return[i.values,i.indices]}case"UpperBound":{const a=E("sortedSequence",e,t,n),s=E("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{const a=E("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{const a=E("x",e,t,n),s=E("axis",e,t,n),o=r.unique(a,s);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"ResizeBilinear":{const a=E("images",e,t,n),s=E("size",e,t,n),o=E("alignCorners",e,t,n),i=E("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const a=E("images",e,t,n),s=E("size",e,t,n),o=E("alignCorners",e,t,n),i=E("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],o,i)]}case"CropAndResize":{const a=E("image",e,t,n),s=E("boxes",e,t,n),o=E("boxInd",e,t,n),i=E("cropSize",e,t,n),u=E("method",e,t,n),l=E("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,o,i,u,l)]}case"ImageProjectiveTransformV3":{const a=E("images",e,t,n),s=E("transforms",e,t,n),o=E("outputShape",e,t,n),i=E("fillValue",e,t,n),u=E("interpolation",e,t,n),l=E("fillMode",e,t,n);return[r.image.transform(a,s,u.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const a=E("default",e,t,n);return[_(e.name,t,n)||a];case"Placeholder":return[_(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[B(E("x",e,t,n))];case"IdentityN":return E("x",e,t,n).map((e=>B(e)));case"Shape":return[r.tensor1d(E("x",e,t,n).shape,"int32")];case"ShapeN":return E("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(E("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(E("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const s=E("x",e,t,n),o=E("data",e,t,n),i=E("message",e,t,n),u=E("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Equal":return[r.equal(E("a",e,t,n),E("b",e,t,n))];case"NotEqual":return[r.notEqual(E("a",e,t,n),E("b",e,t,n))];case"Greater":return[r.greater(E("a",e,t,n),E("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(E("a",e,t,n),E("b",e,t,n))];case"Less":return[r.less(E("a",e,t,n),E("b",e,t,n))];case"LessEqual":return[r.lessEqual(E("a",e,t,n),E("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(E("a",e,t,n),E("b",e,t,n))];case"LogicalNot":return[r.logicalNot(E("a",e,t,n))];case"LogicalOr":return[r.logicalOr(E("a",e,t,n),E("b",e,t,n))];case"Select":case"SelectV2":return[r.where(E("condition",e,t,n),E("a",e,t,n),E("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(E("a",e,t,n),E("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(E("a",e,t,n),E("b",e,t,n),E("transposeA",e,t,n),E("transposeB",e,t,n))];case"Einsum":return[r.einsum(E("equation",e,t,n),...E("tensors",e,t,n))];case"Transpose":return[r.transpose(E("x",e,t,n),E("perm",e,t,n))];case"_FusedMatMul":const[a,s]=E("fusedOps",e,t,n),o="biasadd"===a,i="prelu"===s,u=E("numArgs",e,t,n),l=E("leakyreluAlpha",e,t,n);if(o){if(i&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,d]=E("args",e,t,n);return[r.fused.matMul({a:E("a",e,t,n),b:E("b",e,t,n),transposeA:E("transposeA",e,t,n),transposeB:E("transposeB",e,t,n),bias:c,activation:s,preluActivationWeights:d,leakyreluAlpha:l})];case"MatrixBandPart":return[r.linalg.bandPart(E("a",e,t,n),E("numLower",e,t,n),E("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(E("x",e,t,n),E("axis",e,t,n),E("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(E("x",e,t,n),E("mean",e,t,n),E("variance",e,t,n),E("offset",e,t,n),E("scale",e,t,n),E("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(E("x",e,t,n),E("radius",e,t,n),E("bias",e,t,n),E("alpha",e,t,n),E("beta",e,t,n))];case"Softmax":return[r.softmax(E("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(E("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(E("paramsNestedSplits",e,t,n),E("paramsDenseValues",e,t,n),E("indices",e,t,n),E("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(E("starts",e,t,n),E("limits",e,t,n),E("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(E("shape",e,t,n),E("values",e,t,n),E("defaultValue",e,t,n),E("rowPartitionTensors",e,t,n),E("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Max":{const a=E("axis",e,t,n),s=E("keepDims",e,t,n);return[r.max(E("x",e,t,n),a,s)]}case"Mean":{const a=E("axis",e,t,n),s=E("keepDims",e,t,n);return[r.mean(E("x",e,t,n),a,s)]}case"Min":{const a=E("axis",e,t,n),s=E("keepDims",e,t,n);return[r.min(E("x",e,t,n),a,s)]}case"Sum":{const a=E("axis",e,t,n),s=E("keepDims",e,t,n);return[r.sum(E("x",e,t,n),a,s)]}case"All":{const a=E("axis",e,t,n),s=E("keepDims",e,t,n);return[r.all(E("x",e,t,n),a,s)]}case"Any":{const a=E("axis",e,t,n),s=E("keepDims",e,t,n);return[r.any(E("x",e,t,n),a,s)]}case"ArgMax":{const a=E("axis",e,t,n);return[r.argMax(E("x",e,t,n),a)]}case"ArgMin":{const a=E("axis",e,t,n);return[r.argMin(E("x",e,t,n),a)]}case"Prod":{const a=E("axis",e,t,n),s=E("keepDims",e,t,n);return[r.prod(E("x",e,t,n),a,s)]}case"Cumprod":{const a=E("axis",e,t,n),s=E("exclusive",e,t,n),o=E("reverse",e,t,n);return[r.cumprod(E("x",e,t,n),a,s,o)]}case"Cumsum":{const a=E("axis",e,t,n),s=E("exclusive",e,t,n),o=E("reverse",e,t,n);return[r.cumsum(E("x",e,t,n),a,s,o)]}case"Bincount":const a=E("x",e,t,n),s=E("weights",e,t,n),o=E("size",e,t,n);return[r.bincount(a,s,o)];case"DenseBincount":{const a=E("x",e,t,n),s=E("weights",e,t,n),o=E("size",e,t,n),i=E("binaryOutput",e,t,n);return[r.denseBincount(a,s,o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"ConcatV2":case"Concat":{const a=E("n",e,t,n),s=E("axis",e,t,n);let o=E("tensors",e,t,n);return o=o.slice(0,a),[r.concat(o,s)]}case"Gather":{const a=E("x",e,t,n),s=E("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{const a=E("axis",e,t,n),s=E("batchDims",e,t,n),o=E("x",e,t,n),i=E("indices",e,t,n);return[r.gather(o,r.cast(i,"int32"),a,s)]}case"Reverse":{const a=E("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);const o=E("x",e,t,n);return[r.reverse(o,s)]}case"ReverseV2":{const a=E("axis",e,t,n),s=E("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{const a=E("begin",e,t,n),s=E("size",e,t,n);return[r.slice(E("x",e,t,n),a,s)]}case"StridedSlice":{const a=E("begin",e,t,n),s=E("end",e,t,n),o=E("strides",e,t,n),i=E("beginMask",e,t,n),u=E("endMask",e,t,n),l=E("ellipsisMask",e,t,n),c=E("newAxisMask",e,t,n),d=E("shrinkAxisMask",e,t,n),p=E("x",e,t,n);return[r.stridedSlice(p,a,s,o,i,u,l,c,d)]}case"Pack":return(0,C.lub)((()=>{const a=E("axis",e,t,n),s=E("tensors",e,t,n),o=s[0].shape,i=r.squeeze(s[0]).shape,u=s.map((e=>{const t=C.D5U.arraysEqual(e.shape,o);if(!t&&!C.D5U.arraysEqual(r.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,o)}));return[r.stack(u,a)]}));case"Unpack":{const a=E("axis",e,t,n),s=E("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{const a=E("reps",e,t,n);return[r.tile(E("x",e,t,n),a)]}case"Split":case"SplitV":{const a=E("axis",e,t,n),s=E("numOrSizeSplits",e,t,n),o=E("x",e,t,n);return r.split(o,s,a)}case"ScatterNd":{const a=E("indices",e,t,n),s=E("values",e,t,n),o=E("shape",e,t,n);return[r.scatterND(a,s,o)]}case"GatherNd":{const a=E("x",e,t,n),s=E("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{const a=E("sparseIndices",e,t,n),s=E("outputShape",e,t,n),o=E("sparseValues",e,t,n),i=E("defaultValue",e,t,n);return[r.sparseToDense(a,o,s,o.dtype===i.dtype?i:r.cast(i,o.dtype))]}case"TensorScatterUpdate":{const a=E("indices",e,t,n),s=E("values",e,t,n),o=E("tensor",e,t,n);return[r.tensorScatterUpdate(o,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(E("indices",e,t,n),E("values",e,t,n),E("denseShape",e,t,n),E("defaultValue",e,t,n));return[a,s,o,i]}case"SparseReshape":{const{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(E("inputIndices",e,t,n),E("inputShape",e,t,n),E("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(E("data",e,t,n),E("indices",e,t,n),E("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(E("data",e,t,n),E("indices",e,t,n),E("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"FFT":return[r.fft(E("x",e,t,n))];case"IFFT":return[r.ifft(E("x",e,t,n))];case"RFFT":return[r.rfft(E("x",e,t,n))];case"IRFFT":return[r.irfft(E("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(E("input",e,t,n),E("pattern",e,t,n),E("rewrite",e,t,n),E("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(E("data",e,t,n),E("dataSplits",e,t,n),E("separator",e,t,n),E("nGramWidths",e,t,n),E("leftPad",e,t,n),E("rightPad",e,t,n),E("padWidth",e,t,n),E("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{const{indices:a,values:s,shape:o}=r.string.stringSplit(E("input",e,t,n),E("delimiter",e,t,n),E("skipEmpty",e,t,n));return[a,s,o]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(E("input",e,t,n),E("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Cast":return[r.cast(E("x",e,t,n),E("dtype",e,t,n))];case"ExpandDims":{const a=E("axis",e,t,n);return[r.expandDims(E("x",e,t,n),a)]}case"Squeeze":{const a=E("axis",e,t,n);return[r.squeeze(E("x",e,t,n),a)]}case"Reshape":return[r.reshape(E("x",e,t,n),E("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(E("x",e,t,n),E("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(E("x",e,t,n),E("padding",e,t,n),E("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(E("x",e,t,n),E("padding",e,t,n),E("constantValue",e,t,n))];case"SpaceToBatchND":{const a=E("blockShape",e,t,n),s=E("paddings",e,t,n);return[r.spaceToBatchND(E("x",e,t,n),a,s)]}case"BatchToSpaceND":{const a=E("blockShape",e,t,n),s=E("crops",e,t,n);return[r.batchToSpaceND(E("x",e,t,n),a,s)]}case"DepthToSpace":{const a=E("blockSize",e,t,n),s=E("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(E("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(E("x",e,t,n),E("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(E("s0",e,t,n),E("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{const a=E("keyDType",e,t,n),s=E("valueDType",e,t,n),o=new $e(a,s);return r.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=E("tableHandle",e,t,n,r),s=E("keys",e,t,n),o=E("values",e,t,n),i=r.getHashTableById(a.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const a=E("tableHandle",e,t,n,r),s=E("keys",e,t,n),o=E("defaultValue",e,t,n),i=r.getHashTableById(a.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=E("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const s=$(e.op);if(s&&s.customExecutor)return s.customExecutor(new ye(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return C.D5U.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}class _e{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Re(e,t,n,r){const a=new Set,s=[];let o=null,i=null;const u=new Set,l=new Set(Object.keys(e).map((e=>D(e)[0])));r=r||[];const c=new Set(r.map((e=>D(e.name)[0]))),d=[...t];for(;d.length>0;){const e=d.pop();(Be(e)||Me(e)||Pe(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&(l.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),d.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:o,syncInputs:i}}class Ae extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const Oe=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),De=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Fe=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Be(e){return Oe.has(e.op)}function Me(e){return De.has(e.op)}function Pe(e){return Fe.has(e.op)}class Le{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Le(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=Re(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}const o=function(e,t){const{usedNodes:n,inputs:r}=t,a=Object.keys(r).map((e=>D(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],o=e=>n.has("string"==typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const u=i([...a,...e.weights,...s]).filter(o),l=i([...u,...Object.values(e.nodes)]).filter(o),c=new Map(l.map((e=>[e.name,e]))),d={};for(const e of l){d[e.name]=d[e.name]||0;for(const t of e.children)o(t)||(d[t.name]=Number.POSITIVE_INFINITY),d[t.name]=(d[t.name]||0)+1}const p=Object.entries(d).filter((([,e])=>0===e)).map((([e])=>e)),h=[...p];for(;p.length>0;){const e=p.pop(),t=c.get(e);for(const e of t.children.filter(o))0==--d[e.name]&&(h.push(e.name),p.push(e.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),a=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const e of t.children)n.has(e.name)&&!a.has(e.name)&&(a.add(e.name),r.push(e.name))}return e.filter((e=>a.has(e.name)))}(h.map((e=>c.get(e))),u);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),a=e=>r.has("string"==typeof e?e:e.name),s=new Set(e.map((e=>e.name))),o=e=>s.has("string"==typeof e?e:e.name);for(const t of e){for(const e of t.children.filter(o)){if(!n.has(e.name))throw new Ae(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new Ae(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!a(t))for(const e of t.inputs){if(!n.has(e.name))throw new Ae(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new Ae(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,u),f}(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>Be(e)?n:t)),a=e=>{const n=r[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(a).reduce(((e,t)=>Math.max(e,t)),r[t]))),o=new Map;for(let t=0;t<e.length;++t){const r=s[t];if(r===n)continue;const a=e[t],i=e[r];o.has(i.name)||o.set(i.name,[]),o.get(i.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,C.CnY)(t),t}cloneTensorList(e){return e?e.map((e=>this.cloneAndKeepTensor(e))):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[D(e)[0]])),a=t.map((e=>D(e)[0])),s=new Set(a);let o=a.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(r,o);let u=this.compiledMap.get(i);null==u&&(u=this.compile(e,o),this.compiledMap.set(i,u));try{this.keepIntermediateTensors=(0,C.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const l={},c={};return(0,C.lub)((()=>{const n=new _e(this.weightMap,l,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[a,s]=D(t,n),o=[];o[s]=e[t],r[a]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(o))}));const a=this.getFrozenTensorIds(r),{orderedNodes:o,nodeLiveUntilMap:i}=u;for(const e of o){if(r[e.name])continue;const t=Ee(e,r,n,this._resourceManager);if(C.D5U.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,a,s,i.get(e.name))}return null==this.parent&&n.dispose(a),t.map((e=>_(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,o){if(!Be(t)&&!s.has(e)){for(const r of n[e])null!=r&&(o[r.id]=(o[r.id]||0)+t.children.length);for(const e of t.inputs){if(Be(e))continue;const t=R(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||a.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,s){function o(e){return Be(e)||a.has(e.name)}if(!Be(e)&&null!=s)for(const e of s){if(o(e))continue;const a=R(e.name,t,n);for(const e of a)!e||e.kept||r.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},a={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,C.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const s=new _e(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>_(e,o,s))),u=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[D(e)[0]])),o=n.map((e=>D(e)[0])),i=new Set(o);let u=o.map((e=>this.graph.nodes[e]));0===u.length&&(u=this._outputs);const{usedNodes:l,missingInputs:c,dynamicNode:d,syncInputs:p}=Re(e,u,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=D(t),a=[];a[r]=e[t],f[n]=a}));const m={},g=this.getFrozenTensorIds(f),y={};for(;h.length>0;){const e=this.processStack(s,h,t,f,y,g,i,m,l);await Promise.all(e)}null!=d||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const x=u.filter((e=>!Be(e)&&!_(e.name,f,t))).map((e=>e.name));if(x.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,a,s,o,i,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&E("isConstant",e.node,r,n)&&([c]=A(e.node.name,n)),null==r[e.node.name]){const d=Ee(e.node,r,n,this._resourceManager);c||([c]=A(e.node.name,n));const p=n.currentContext;C.D5U.isPromise(d)?l.push(d.then((l=>(r[c]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(l)),n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(d)),this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[o]=A(e.name,n);!a[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!_(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!_(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=D(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));C.D5U.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&C.D5U.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const a in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=D(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=D(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Ve{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const Ue="?tfjs-format=file",ze="model.json";class We{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=C.io){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Ve}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return C.D5U.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Le(ne.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ne.Instance.transformGraph(e.modelInitializer);this.initializer=new Le(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof C.esB?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof C.esB||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var a,s,o;const i=null===(o=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const a=t[n[r]];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,C.B90)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Ge(e,t={},n=C.io){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${ze}${Ue}`}(e));const r=new We(e,t,n);return await r.load(),r}var je=function(){return je=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},je.apply(this,arguments)};function He(e,t,n,r){return new(n||(n=Promise))((function(a,s){function o(e){try{u(r.next(e))}catch(e){s(e)}}function i(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}u((r=r.apply(e,t||[])).next())}))}function Xe(e,t){var n,r,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s&&(s=0,i[0]&&(o=0)),o;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,r=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!((a=(a=o.trys).length>0&&a[a.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){o.label=i[1];break}if(6===i[0]&&o.label<a[1]){o.label=a[1],a=i;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(i);break}a[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}}"function"==typeof SuppressedError&&SuppressedError;var qe=["wrist","thumb_cmc","thumb_mcp","thumb_ip","thumb_tip","index_finger_mcp","index_finger_pip","index_finger_dip","index_finger_tip","middle_finger_mcp","middle_finger_pip","middle_finger_dip","middle_finger_tip","ring_finger_mcp","ring_finger_pip","ring_finger_dip","ring_finger_tip","pinky_finger_mcp","pinky_finger_pip","pinky_finger_dip","pinky_finger_tip"],Ke={runtime:"mediapipe",maxHands:2,modelType:"full"},Ye=function(){function e(e){var t,n=this;this.width=0,this.height=0,this.selfieMode=!1,this.handsSolution=new I.Hands({locateFile:function(t,n){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+t:n+"/"+t}}),t="lite"===e.modelType?0:1,this.handsSolution.setOptions({modelComplexity:t,selfieMode:this.selfieMode,maxNumHands:e.maxHands}),this.handsSolution.onResults((function(e){if(n.height=e.image.height,n.width=e.image.width,n.hands=[],null!==e.multiHandLandmarks)for(var t=e.multiHandedness,r=e.multiHandLandmarks,a=e.multiHandWorldLandmarks,s=0;s<t.length;s++)n.hands.push(je(je({},n.translateOutput(r[s],a[s])),{score:t[s].score,handedness:t[s].label}))}))}return e.prototype.translateOutput=function(e,t){var n=this;return{keypoints:e.map((function(e,t){return{x:e.x*n.width,y:e.y*n.height,score:e.visibility,name:qe[t]}})),keypoints3D:t.map((function(e,t){return{x:e.x,y:e.y,z:e.z,score:e.visibility,name:qe[t]}}))}},e.prototype.estimateHands=function(e,t){return He(this,void 0,void 0,(function(){var n,r;return Xe(this,(function(a){switch(a.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.handsSolution.setOptions({selfieMode:this.selfieMode})),e instanceof C.esB?(r=ImageData.bind,[4,C.Xhn.toPixels(e)]):[3,2];case 1:return n=new(r.apply(ImageData,[void 0,a.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:n=e,a.label=3;case 3:return e=n,[4,this.handsSolution.send({image:e})];case 4:return a.sent(),[2,this.hands]}}))}))},e.prototype.dispose=function(){this.handsSolution.close()},e.prototype.reset=function(){this.handsSolution.reset(),this.width=0,this.height=0,this.hands=null,this.selfieMode=!1},e.prototype.initialize=function(){return this.handsSolution.initialize()},e}();function Qe(e){return He(this,void 0,void 0,(function(){var t,n;return Xe(this,(function(r){switch(r.label){case 0:return t=function(e){if(null==e)return je({},Ke);var t=je({},e);return t.runtime="mediapipe",null==t.maxHands&&(t.maxHands=Ke.maxHands),null==t.modelType&&(t.modelType=Ke.modelType),t}(e),[4,(n=new Ye(t)).initialize()];case 1:return r.sent(),[2,n]}}))}))}function Ze(e){return e.width*e.height}function Je(e){var t=e.xCenter-e.width/2,n=t+e.width,r=e.yCenter-e.height/2;return{xMin:t,xMax:n,yMin:r,yMax:r+e.height,width:e.width,height:e.height}}function et(e,t){var n=Je(e),r=Je(t);if(!function(e,t){return!(e.xMax<t.xMin||t.xMax<e.xMin||e.yMax<t.yMin||t.yMax<e.yMin)}(n,r))return 0;var a=Ze(function(e,t){var n=Math.max(e.xMin,t.xMin),r=Math.min(e.xMax,t.xMax),a=Math.max(e.yMin,t.yMin),s=Math.min(e.yMax,t.yMax);return{xMin:n,xMax:r,yMin:a,yMax:s,width:Math.max(r-n,0),height:Math.max(s-a,0)}}(n,r)),s=Ze(n)+Ze(r)-a;return s>0?a/s:0}function tt(e){return e instanceof C.esB?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function nt(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function rt(e){return e instanceof C.esB?e:C.Xhn.fromPixels(e)}function at(e,t){C.D5U.assert(0!==e.width,(function(){return t+" width cannot be 0."})),C.D5U.assert(0!==e.height,(function(){return t+" height cannot be 0."}))}function st(e,t,n){var r=t.outputTensorSize,a=t.keepAspectRatio,s=t.borderMode,o=t.outputTensorFloatRange,i=tt(e),u=function(e,t){return t?{xCenter:t.xCenter*e.width,yCenter:t.yCenter*e.height,width:t.width*e.width,height:t.height*e.height,rotation:t.rotation}:{xCenter:.5*e.width,yCenter:.5*e.height,width:e.width,height:e.height,rotation:0}}(i,n),l=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var r=t.height,a=t.width;at(t,"targetSize"),at(e,"roi");var s,o,i=r/a,u=e.height/e.width,l=0,c=0;return i>u?(s=e.width,o=e.width*i,c=(1-u/i)/2):(s=e.height/i,o=e.height,l=(1-i/u)/2),e.width=s,e.height=o,{top:c,left:l,right:l,bottom:c}}(u,r,a),c=function(e,t,n,r){var a=e.width,s=e.height,o=Math.cos(e.rotation),i=Math.sin(e.rotation),u=e.xCenter,l=e.yCenter,c=1/t,d=1/n,p=new Array(16);return p[0]=a*o*1*c,p[1]=-s*i*c,p[2]=0,p[3]=(-.5*a*o*1+.5*s*i+u)*c,p[4]=a*i*1*d,p[5]=s*o*d,p[6]=0,p[7]=(-.5*s*o-.5*a*i*1+l)*d,p[8]=0,p[9]=0,p[10]=a*c,p[11]=0,p[12]=0,p[13]=0,p[14]=0,p[15]=1,function(e){if(16!==e.length)throw new Error("Array length must be 16 but got "+e.length);return[[e[0],e[1],e[2],e[3]],[e[4],e[5],e[6],e[7]],[e[8],e[9],e[10],e[11]],[e[12],e[13],e[14],e[15]]]}(p)}(u,i.width,i.height),d=(0,C.lub)((function(){var t=rt(e),n=(0,C.odF)(function(e,t,n){return at(n,"inputResolution"),[1/n.width*e[0][0]*t.width,1/n.height*e[0][1]*t.width,e[0][3]*t.width,1/n.width*e[1][0]*t.height,1/n.height*e[1][1]*t.height,e[1][3]*t.height,0,0]}(c,i,r),[1,8]),a="zero"===s?"constant":"nearest",u=C.BHj.transform((0,C.dt4)((0,C.pju)(t,"float32")),n,"bilinear",a,0,[r.height,r.width]);return null!=o?function(e,t){var n=function(e,t,n,r){var a=(r-n)/255;return{scale:a,offset:n-0*a}}(0,0,t[0],t[1]);return(0,C.lub)((function(){return(0,C.IHx)((0,C.dC7)(e,n.scale),n.offset)}))}(u,o):u}));return{imageTensor:d,padding:l,transformationMatrix:c}}function ot(e,t,n,r){return 1===r?.5*(e+t):e+(t-e)*n/(r-1)}function it(e){return{xCenter:e.xMin+e.width/2,yCenter:e.yMin+e.height/2,width:e.width,height:e.height}}function ut(e,t,n,r){return He(this,void 0,void 0,(function(){var r,a,s,o,i;return Xe(this,(function(u){switch(u.label){case 0:return e.sort((function(e,t){return Math.max.apply(Math,t.score)-Math.max.apply(Math,e.score)})),r=(0,C.odF)(e.map((function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]}))),a=(0,C.RRF)(e.map((function(e){return e.score[0]}))),[4,C.BHj.nonMaxSuppressionAsync(r,a,t,n)];case 1:return[4,(s=u.sent()).array()];case 2:return o=u.sent(),i=e.filter((function(e,t){return o.indexOf(t)>-1})),(0,C.B90)([r,a,s]),[2,i]}}))}))}function lt(e,t){return e.map((function(e){var n=je(je({},e),{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(n.z=e.z*t.width),n}))}function ct(e,t,n){return He(this,void 0,void 0,(function(){var r,a,s,o,i;return Xe(this,(function(u){switch(u.label){case 0:return r=e[0],a=e[1],s=function(e,t,n){return(0,C.lub)((function(){var r,a,s,o;n.reverseOutputOrder?(a=(0,C.L9e)((0,C.tPi)(e,[0,n.boxCoordOffset+0],[-1,1])),r=(0,C.L9e)((0,C.tPi)(e,[0,n.boxCoordOffset+1],[-1,1])),o=(0,C.L9e)((0,C.tPi)(e,[0,n.boxCoordOffset+2],[-1,1])),s=(0,C.L9e)((0,C.tPi)(e,[0,n.boxCoordOffset+3],[-1,1]))):(r=(0,C.L9e)((0,C.tPi)(e,[0,n.boxCoordOffset+0],[-1,1])),a=(0,C.L9e)((0,C.tPi)(e,[0,n.boxCoordOffset+1],[-1,1])),s=(0,C.L9e)((0,C.tPi)(e,[0,n.boxCoordOffset+2],[-1,1])),o=(0,C.L9e)((0,C.tPi)(e,[0,n.boxCoordOffset+3],[-1,1]))),a=(0,C.IHx)((0,C.dC7)((0,C.hiC)(a,n.xScale),t.w),t.x),r=(0,C.IHx)((0,C.dC7)((0,C.hiC)(r,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(s=(0,C.dC7)((0,C.Qqt)((0,C.hiC)(s,n.hScale)),t.h),o=(0,C.dC7)((0,C.Qqt)((0,C.hiC)(o,n.wScale)),t.w)):(s=(0,C.dC7)((0,C.hiC)(s,n.hScale),t.h),o=(0,C.dC7)((0,C.hiC)(o,n.wScale),t.h));var i=(0,C.luU)(r,(0,C.hiC)(s,2)),u=(0,C.luU)(a,(0,C.hiC)(o,2)),l=(0,C.IHx)(r,(0,C.hiC)(s,2)),c=(0,C.IHx)(a,(0,C.hiC)(o,2)),d=(0,C.zoF)([(0,C.XLQ)(i,[n.numBoxes,1]),(0,C.XLQ)(u,[n.numBoxes,1]),(0,C.XLQ)(l,[n.numBoxes,1]),(0,C.XLQ)(c,[n.numBoxes,1])],1);if(n.numKeypoints)for(var p=0;p<n.numKeypoints;++p){var h=n.keypointCoordOffset+p*n.numValuesPerKeypoint,f=void 0,m=void 0;n.reverseOutputOrder?(f=(0,C.L9e)((0,C.tPi)(e,[0,h],[-1,1])),m=(0,C.L9e)((0,C.tPi)(e,[0,h+1],[-1,1]))):(m=(0,C.L9e)((0,C.tPi)(e,[0,h],[-1,1])),f=(0,C.L9e)((0,C.tPi)(e,[0,h+1],[-1,1])));var g=(0,C.IHx)((0,C.dC7)((0,C.hiC)(f,n.xScale),t.w),t.x),y=(0,C.IHx)((0,C.dC7)((0,C.hiC)(m,n.yScale),t.h),t.y);d=(0,C.zoF)([d,(0,C.XLQ)(g,[n.numBoxes,1]),(0,C.XLQ)(y,[n.numBoxes,1])],1)}return d}))}(a,t,n),o=(0,C.lub)((function(){var e=r;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=(0,C.iUl)(r,-n.scoreClippingThresh,n.scoreClippingThresh)),e=(0,C.XD2)(e)):e})),[4,dt(s,o,n)];case 1:return i=u.sent(),(0,C.B90)([s,o]),[2,i]}}))}))}function dt(e,t,n){return He(this,void 0,void 0,(function(){var r,a,s,o,i,u,l,c,d,p,h,f;return Xe(this,(function(m){switch(m.label){case 0:return r=[],[4,e.data()];case 1:return a=m.sent(),[4,t.data()];case 2:for(s=m.sent(),o=0;o<n.numBoxes;++o)if(!(null!=n.minScoreThresh&&s[o]<n.minScoreThresh||(i=o*n.numCoords,u=pt(a[i+0],a[i+1],a[i+2],a[i+3],s[o],n.flipVertically,o),(l=u.locationData.relativeBoundingBox).width<0||l.height<0))){if(n.numKeypoints>0)for((c=u.locationData).relativeKeypoints=[],d=n.numKeypoints*n.numValuesPerKeypoint,p=0;p<d;p+=n.numValuesPerKeypoint)h=i+n.keypointCoordOffset+p,f={x:a[h+0],y:n.flipVertically?1-a[h+1]:a[h+1]},c.relativeKeypoints.push(f);r.push(u)}return[2,r]}}))}))}function pt(e,t,n,r,a,s,o){return{score:[a],ind:o,locationData:{relativeBoundingBox:{xMin:t,yMin:s?1-n:e,xMax:r,yMax:s?1-e:n,width:r-t,height:n-e}}}}function ht(e,t){return"none"===e?t:function(e){return 1/(1+Math.exp(-e))}(t)}function ft(e,t,n,r){return He(this,void 0,void 0,(function(){var a,s,o,i,u,l,c,d;return Xe(this,(function(p){switch(p.label){case 0:return n=n||t.flipHorizontally||!1,r=r||t.flipVertically||!1,a=e.size,s=a/t.numLandmarks,[4,e.data()];case 1:for(o=p.sent(),i=[],u=0;u<t.numLandmarks;++u)l=u*s,(d={x:0,y:0}).x=n?t.inputImageWidth-o[l]:o[l],s>1&&(d.y=r?t.inputImageHeight-o[l+1]:o[l+1]),s>2&&(d.z=o[l+2]),s>3&&(d.score=ht(t.visibilityActivation,o[l+3])),i.push(d);for(c=0;c<i.length;++c)(d=i[c]).x=d.x/t.inputImageWidth,d.y=d.y/t.inputImageHeight,d.z=d.z/t.inputImageWidth/(t.normalizeZ||1);return[2,i]}}))}))}function mt(e,t,n){var r=e.width,a=e.height,s=e.rotation;if(null==n.rotation&&null==n.rotationDegree||(s=function(e,t){return null!=t.rotation?e+=t.rotation:null!=t.rotationDegree&&(e+=Math.PI*t.rotationDegree/180),nt(e)}(s,n)),0===s)e.xCenter=e.xCenter+r*n.shiftX,e.yCenter=e.yCenter+a*n.shiftY;else{var o=(t.width*r*n.shiftX*Math.cos(s)-t.height*a*n.shiftY*Math.sin(s))/t.width,i=(t.width*r*n.shiftX*Math.sin(s)+t.height*a*n.shiftY*Math.cos(s))/t.height;e.xCenter=e.xCenter+o,e.yCenter=e.yCenter+i}if(n.squareLong){var u=Math.max(r*t.width,a*t.height);r=u/t.width,a=u/t.height}else if(n.squareShort){var l=Math.min(r*t.width,a*t.height);r=l/t.width,a=l/t.height}return e.width=r*n.scaleX,e.height=a*n.scaleY,e}var gt,yt={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:4,minScale:.1484375,maxScale:.75,inputSizeHeight:192,inputSizeWidth:192,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,16,16],aspectRatios:[1],fixedAnchorSize:!0},xt={runtime:"tfjs",modelType:"full",maxHands:2,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/detector/full/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/landmark/full/1"},bt={flipHorizontal:!1,staticImageMode:!1},vt={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2016,numCoords:18,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:7,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:192,yScale:192,hScale:192,wScale:192,minScoreThresh:.5},wt={shiftX:0,shiftY:-.5,scaleX:2.6,scaleY:2.6,squareLong:!0},St={shiftX:0,shiftY:-.1,scaleX:2,scaleY:2,squareLong:!0},kt={outputTensorSize:{width:192,height:192},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},Tt={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},It={numLandmarks:21,inputImageWidth:224,inputImageHeight:224,normalizeZ:.4,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},Ct={numLandmarks:21,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},Nt=function(){function e(e,t,n){this.detectorModel=e,this.landmarkModel=t,this.maxHands=n,this.prevHandRectsFromLandmarks=null,this.anchors=function(e){null==e.reduceBoxesInLowestLayer&&(e.reduceBoxesInLowestLayer=!1),null==e.interpolatedScaleAspectRatio&&(e.interpolatedScaleAspectRatio=1),null==e.fixedAnchorSize&&(e.fixedAnchorSize=!1);for(var t=[],n=0;n<e.numLayers;){for(var r=[],a=[],s=[],o=[],i=n;i<e.strides.length&&e.strides[i]===e.strides[n];){var u=ot(e.minScale,e.maxScale,i,e.strides.length);if(0===i&&e.reduceBoxesInLowestLayer)s.push(1),s.push(2),s.push(.5),o.push(.1),o.push(u),o.push(u);else{for(var l=0;l<e.aspectRatios.length;++l)s.push(e.aspectRatios[l]),o.push(u);if(e.interpolatedScaleAspectRatio>0){var c=i===e.strides.length-1?1:ot(e.minScale,e.maxScale,i+1,e.strides.length);o.push(Math.sqrt(u*c)),s.push(e.interpolatedScaleAspectRatio)}}i++}for(var d=0;d<s.length;++d){var p=Math.sqrt(s[d]);r.push(o[d]/p),a.push(o[d]*p)}var h=0,f=0;if(e.featureMapHeight.length>0)h=e.featureMapHeight[n],f=e.featureMapWidth[n];else{var m=e.strides[n];h=Math.ceil(e.inputSizeHeight/m),f=Math.ceil(e.inputSizeWidth/m)}for(var g=0;g<h;++g)for(var y=0;y<f;++y)for(var x=0;x<r.length;++x){var b={xCenter:(y+e.anchorOffsetX)/f,yCenter:(g+e.anchorOffsetY)/h,width:0,height:0};e.fixedAnchorSize?(b.width=1,b.height=1):(b.width=a[x],b.height=r[x]),t.push(b)}n=i}return t}(yt);var r=(0,C.RRF)(this.anchors.map((function(e){return e.width}))),a=(0,C.RRF)(this.anchors.map((function(e){return e.height}))),s=(0,C.RRF)(this.anchors.map((function(e){return e.xCenter}))),o=(0,C.RRF)(this.anchors.map((function(e){return e.yCenter})));this.anchorTensor={x:s,y:o,w:r,h:a}}return e.prototype.estimateHands=function(e,t){return He(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,l,c,d,p,h,f,m,g,y,x,b,v=this;return Xe(this,(function(w){switch(w.label){case 0:return n=function(e){if(null==e)return je({},bt);var t=je({},e);return null==t.flipHorizontal&&(t.flipHorizontal=bt.flipHorizontal),null==t.staticImageMode&&(t.staticImageMode=bt.staticImageMode),t}(t),null==e?(this.reset(),[2,[]]):(r=tt(e),a=(0,C.lub)((function(){var t=(0,C.pju)(rt(e),"float32");return n.flipHorizontal&&(t=(0,C.L9e)(C.BHj.flipLeftRight((0,C.dt4)(t,0)),[0])),t})),s=this.prevHandRectsFromLandmarks,n.staticImageMode||null==s||s.length<this.maxHands?[4,this.detectPalm(a)]:[3,2]);case 1:return 0===(i=w.sent()).length?(this.reset(),a.dispose(),[2,[]]):(u=i.map((function(e){return v.palmDetectionToRoi(e,r)})),o=u,[3,3]);case 2:o=s,w.label=3;case 3:return S=[],[o].forEach((function(e){return e.forEach((function(e){(S=S.filter((function(t){return et(e,t)<=.5}))).push(e)}))})),o=S,[4,Promise.all(o.map((function(e){return v.handLandmarks(e,a)})))];case 4:for(l=w.sent(),c=[],this.prevHandRectsFromLandmarks=[],d=0,p=l;d<p.length;d++)null!=(h=p[d])&&(f=h.landmarks,m=h.worldLandmarks,g=h.handScore,y=h.handedness,this.prevHandRectsFromLandmarks.push(this.handLandmarksToRoi(f,r)),null!=(x=lt(f,r))&&x.forEach((function(e,t){delete e.z,e.name=qe[t]})),null!=(b=m)&&b.forEach((function(e,t){e.name=qe[t]})),c.push({keypoints:x,keypoints3D:b,handedness:y,score:g}));return a.dispose(),[2,c]}var S}))}))},e.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),(0,C.B90)([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},e.prototype.reset=function(){this.prevHandRectsFromLandmarks=null},e.prototype.detectPalm=function(e){return He(this,void 0,void 0,(function(){var t,n,r,a,s,o,i,u,l,c;return Xe(this,(function(d){switch(d.label){case 0:return t=st(e,kt),n=t.imageTensor,r=t.padding,a=this.detectorModel.predict(n),s=function(e){return(0,C.lub)((function(){var t=function(e){return(0,C.lub)((function(){return[(0,C.tPi)(e,[0,0,0],[1,-1,1]),(0,C.tPi)(e,[0,0,1],[1,-1,-1])]}))}(e),n=t[0],r=t[1];return{boxes:(0,C.L9e)(r),logits:(0,C.L9e)(n)}}))}(a),o=s.boxes,[4,ct([i=s.logits,o],this.anchorTensor,vt)];case 1:return 0===(u=d.sent()).length?((0,C.B90)([n,a,i,o]),[2,u]):[4,ut(u,this.maxHands,.3)];case 2:return l=d.sent(),c=function(e,t){void 0===e&&(e=[]);for(var n=t.left,r=t.top,a=t.left+t.right,s=t.top+t.bottom,o=0;o<e.length;o++){var i=e[o],u=i.locationData.relativeBoundingBox,l=(u.xMin-n)/(1-a),c=(u.yMin-r)/(1-s),d=u.width/(1-a),p=u.height/(1-s);u.xMin=l,u.yMin=c,u.width=d,u.height=p,u.xMax=l+d,u.yMax=c+p;var h=i.locationData.relativeKeypoints;h&&h.forEach((function(e){var t=(e.x-n)/(1-a),o=(e.y-r)/(1-s);e.x=t,e.y=o}))}return e}(l,r),(0,C.B90)([n,a,i,o]),[2,c]}}))}))},e.prototype.palmDetectionToRoi=function(e,t){return mt(function(e,t,n,r,a){var s=function(e,t){var n=e.locationData;return it(n.relativeBoundingBox)}(e);return a&&(s.rotation=function(e,t,n){var r,a=e.locationData,s=n.rotationVectorStartKeypointIndex,o=n.rotationVectorEndKeypointIndex;r=n.rotationVectorTargetAngle?n.rotationVectorTargetAngle:Math.PI*n.rotationVectorTargetAngleDegree/180;var i=a.relativeKeypoints[s].x*t.width,u=a.relativeKeypoints[s].y*t.height,l=a.relativeKeypoints[o].x*t.width,c=a.relativeKeypoints[o].y*t.height;return nt(r-Math.atan2(-(c-u),l-i))}(e,r,a)),s}(e,0,0,t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:2,rotationVectorTargetAngleDegree:90}),t,wt)},e.prototype.handLandmarks=function(e,t){return He(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,l,c,d,p,h,f,m,g,y;return Xe(this,(function(x){switch(x.label){case 0:return n=st(t,Tt,e),r=n.imageTensor,a=n.padding,s=this.landmarkModel.execute(r,["Identity_2:0","Identity_1:0","Identity:0","Identity_3:0"]),o=s[0],i=s[1],u=s[2],l=s[3],[4,i.data()];case 1:return(c=x.sent()[0])<.5?((0,C.B90)(s),(0,C.B90)(r),[2,null]):[4,u.data()];case 2:return d=x.sent()[0],p=d>=.5?"Left":"Right",[4,ft(o,It)];case 3:return h=x.sent(),[4,ft(l,Ct)];case 4:return f=x.sent(),m=function(e,t){var n=t.left,r=t.top,a=t.left+t.right,s=t.top+t.bottom;return e.map((function(e){return je(je({},e),{x:(e.x-n)/(1-a),y:(e.y-r)/(1-s),z:e.z/(1-a)})}))}(h,a),g=function(e,t,n){void 0===n&&(n={ignoreRotation:!1});for(var r=[],a=0,s=e;a<s.length;a++){var o=s[a],i=o.x-.5,u=o.y-.5,l=n.ignoreRotation?0:t.rotation,c=Math.cos(l)*i-Math.sin(l)*u,d=Math.sin(l)*i+Math.cos(l)*u;c=c*t.width+t.xCenter,d=d*t.height+t.yCenter;var p=o.z*t.width,h=je({},o);h.x=c,h.y=d,h.z=p,r.push(h)}return r}(m,e),y=function(e,t){for(var n=[],r=0,a=e;r<a.length;r++){var s=a[r],o=s.x,i=s.y,u=t.rotation,l=Math.cos(u)*o-Math.sin(u)*i,c=Math.sin(u)*o+Math.cos(u)*i,d=je({},s);d.x=l,d.y=c,n.push(d)}return n}(f,e),(0,C.B90)(s),(0,C.B90)(r),[2,{landmarks:g,worldLandmarks:y,handScore:c,handedness:p}]}}))}))},e.prototype.handLandmarksToRoi=function(e,t){return mt(function(e,t){for(var n=function(e,t){var n=e[0].x*t.width,r=e[0].y*t.height,a=(e[4].x+e[8].x)/2,s=(e[4].y+e[8].y)/2;return a=(a+e[6].x)/2*t.width,s=(s+e[6].y)/2*t.height,nt(Math.PI/2-Math.atan2(-(s-r),a-n))}(e,t),r=nt(-n),a=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY,o=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,u=0,l=e;u<l.length;u++){var c=(g=l[u]).x,d=g.y;a=Math.min(a,c),s=Math.max(s,c),o=Math.min(o,d),i=Math.max(i,d)}var p=(s+a)/2,h=(i+o)/2;a=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY,o=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;for(var f=0,m=e;f<m.length;f++){var g,y=((g=m[f]).x-p)*t.width,x=(g.y-h)*t.height,b=y*Math.cos(r)-x*Math.sin(r),v=y*Math.sin(r)+x*Math.cos(r);a=Math.min(a,b),s=Math.max(s,b),o=Math.min(o,v),i=Math.max(i,v)}var w=(s+a)/2,S=(i+o)/2,k=w*Math.cos(n)-S*Math.sin(n)+t.width*p,T=w*Math.sin(n)+S*Math.cos(n)+t.height*h,I=(s-a)/t.width,C=(i-o)/t.height;return{xCenter:k/t.width,yCenter:T/t.height,width:I,height:C,rotation:n}}([].concat(e.slice(0,4),e.slice(5,7),e.slice(9,11),e.slice(13,15),e.slice(17,19)),t),t,St)},e}();function $t(e){return He(this,void 0,void 0,(function(){var t,n,r,a,s,o;return Xe(this,(function(i){switch(i.label){case 0:return t=function(e){if(null==e)return je({},xt);var t=je({},e);if(t.runtime="tfjs",null==t.maxHands&&(t.maxHands=xt.maxHands),null==t.modelType&&(t.modelType=xt.modelType),"lite"!==t.modelType&&"full"!==t.modelType)throw new Error("Model type must be one of lite or full, but got "+t.modelType);return null==t.detectorModelUrl&&("lite"===t.modelType?t.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/detector/lite/1":t.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/detector/full/1"),null==t.landmarkModelUrl&&("lite"===t.modelType?t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/landmark/lite/1":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/landmark/full/1"),t}(e),n=t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,r=t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([Ge(t.detectorModelUrl,{fromTFHub:n}),Ge(t.landmarkModelUrl,{fromTFHub:r})])];case 1:return a=i.sent(),s=a[0],o=a[1],[2,new Nt(s,o,t.maxHands)]}}))}))}function Et(e,t){return He(this,void 0,void 0,(function(){var n,r;return Xe(this,(function(a){if(e===gt.MediaPipeHands){if(r=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,$t(n)];if("mediapipe"===n.runtime)return[2,Qe(n)];r=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+r)}throw new Error(e+" is not a supported model name.")}))}))}(gt||(gt={})).MediaPipeHands="MediaPipeHands"},7664:(e,t,n)=>{"use strict";var r={};n.r(r),n.d(r,{addImpl:()=>Re,bincountImpl:()=>Oe,bincountReduceImpl:()=>De,bitwiseAndImpl:()=>Fe,castImpl:()=>Ne,ceilImpl:()=>Le,concatImpl:()=>Ve,equalImpl:()=>Ue,expImpl:()=>ze,expm1Impl:()=>We,floorImpl:()=>Ge,gatherNdImpl:()=>je,gatherV2Impl:()=>He,greaterEqualImpl:()=>qe,greaterImpl:()=>Xe,lessEqualImpl:()=>Ye,lessImpl:()=>Ke,linSpaceImpl:()=>Qe,logImpl:()=>Ze,maxImpl:()=>Je,maximumImpl:()=>et,minimumImpl:()=>tt,multiplyImpl:()=>nt,negImpl:()=>at,notEqualImpl:()=>st,prodImpl:()=>it,raggedGatherImpl:()=>lt,raggedRangeImpl:()=>dt,raggedTensorToTensorImpl:()=>gt,rangeImpl:()=>yt,rsqrtImpl:()=>xt,scatterImpl:()=>bt,sigmoidImpl:()=>vt,simpleAbsImpl:()=>Se,sliceImpl:()=>wt,sparseFillEmptyRowsImpl:()=>St,sparseReshapeImpl:()=>kt,sparseSegmentReductionImpl:()=>Tt,sqrtImpl:()=>It,staticRegexReplaceImpl:()=>Ct,stridedSliceImpl:()=>Nt,stringNGramsImpl:()=>Et,stringSplitImpl:()=>Rt,stringToHashBucketFastImpl:()=>At,subImpl:()=>Ot,tileImpl:()=>Ft,topKImpl:()=>Pt,transposeImpl:()=>ot,uniqueImpl:()=>Lt});var a=n(2544);const s={},o={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function i(e,t){if(!(e in s)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,a.OBj)().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete s[e]}),!1),(0,a.OBj)().getBool("SOFTWARE_WEBGL_ENABLED")&&(o.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",o)||n.getContext("experimental-webgl",o):n.getContext("webgl2",o)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;s[e]=n}const n=s[e];return null==n||n.isContextLost()?(delete s[e],i(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),s[e])}var u,l,c;function d(e,t){return[t,e]}function p(e){const t=a.D5U.sizeFromShape(e),n=Math.ceil(t/4);return a.D5U.sizeToSquarishShape(n)}function h(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function f(e,t){const n=e;let r,s,o,i,u,l,c,d,p,h;return 2===(0,a.OBj)().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,o=n.RGBA16F,i=n.RGBA32F,u=n.RED,c=4,d=1,p=n.HALF_FLOAT,h=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,o=e.RGBA,i=n.RGBA,u=e.RGBA,c=4,d=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:h}}function m(e,t){const n=t();return(0,a.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function g(e){return!!((0,a.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function y(e,t){return C(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(u||(u={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(l||(l={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(c||(c={}));const x=/ERROR: [0-9]+:([0-9]+):/g;function b(e,t){const n=x.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),o=s.length.toString().length+2,i=s.map(((e,t)=>a.D5U.rightPad((t+1).toString(),o)+e));let u=0;for(let e=0;e<i.length;e++)u=Math.max(i[e].length,u);const l=i.slice(0,r-1),c=i.slice(r-1,r),d=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${a.D5U.rightPad(c[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function v(e,t){if(m(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function w(e,t,n,r,a,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),m(e,(()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,s,o))),m(e,(()=>e.enableVertexAttribArray(i))),!0)}function S(e,t,n,r){m(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),m(e,(()=>e.activeTexture(e.TEXTURE0+n))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),m(e,(()=>e.uniform1i(n,r)))}function k(e,t,n){m(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),m(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function T(e,t){m(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),m(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function I(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function C(e,t,n){const r=m(e,(()=>t()));if(null==r)throw new Error(n);return r}function N(e,t=2){return a.D5U.sizeFromShape(e.slice(0,e.length-t))}function $(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function E(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[N(e),...$(e)]),t}function _(e){return e%2==0}function R(e,t){if(e=e.slice(-2),t=t.slice(-2),a.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(_(n)&&_(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&_(e[0])&&_(t[0])}let A,O;function D(e,t){return null!=e.getExtension(t)}function F(e){try{if(null!=i(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function B(e){const t=f(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function M(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&a.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const P=(0,a.OBj)();function L(){let e,t,n,r,s,o,i,u,l,c;return 2===(0,a.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",o="outputColor",i="out vec4 outputColor;",u=(0,a.OBj)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",o="gl_FragColor",i="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:o,defineOutput:i,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}function V(e,t,n="index"){const r=a.D5U.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function U(e,t,n="index"){const r=a.D5U.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function z(e){const t=a.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}P.registerFlag("HAS_WEBGL",(()=>P.getNumber("WEBGL_VERSION")>0)),P.registerFlag("WEBGL_VERSION",(()=>F(2)?2:F(1)?1:0)),P.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),P.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===P.get("WEBGL_VERSION"))),P.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),P.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),P.registerFlag("WEBGL_PACK",(()=>P.getBool("HAS_WEBGL"))),P.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_CLIP",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_REDUCE",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_LAZILY_UNPACK",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_CONV_IM2COL",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==A){const t=i(e);A=t.getParameter(t.MAX_TEXTURE_SIZE)}return A}(P.getNumber("WEBGL_VERSION")))),P.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==O){const t=i(e);O=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,O)}(P.getNumber("WEBGL_VERSION")))),P.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=P.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=i(e);return t=D(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:D(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),P.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>P.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!a.C2$.isMobile())),P.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=i(e);if(1===e){if(!D(t,"OES_texture_float"))return!1}else if(!D(t,"EXT_color_buffer_float"))return!1;return B(t)}(P.getNumber("WEBGL_VERSION")))),P.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!P.getBool("WEBGL_FORCE_F16_TEXTURES")&&P.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),P.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=i(e);if(1!==e){if(D(t,"EXT_color_buffer_float"))return B(t);const e="EXT_color_buffer_half_float";if(D(t,e)){const n=t.getExtension(e);return function(e,t){const n=f(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!D(t,"OES_texture_float")&&!!D(t,"WEBGL_color_buffer_float")&&B(t)}(P.getNumber("WEBGL_VERSION")))),P.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=P.getNumber("WEBGL_VERSION"))&&null!=i(e).fenceSync;var e})),P.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>P.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),P.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),P.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>a.C2$.isMobile()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),P.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),P.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),P.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),P.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),P.registerFlag("WEBGL_EXP_CONV",(()=>!1)),P.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>P.getBool("IS_TEST"))),P.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),P.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),P.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),P.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const W="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:G}=a.backend_util;function j(e,t,n){const r=[];if(e.forEach((e=>{const t=a.D5U.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=te(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),o=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?X(e,r):H(e,r);const o=e.shapeInfo.logicalShape,i=t.logicalShape;return o.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,u=G(e.shapeInfo.logicalShape,t.logicalShape),l=ee(i),c=i-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":i<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${p[e+c]} = 0;`)).join("\n");let h="";h=i<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+c]}`)).join(", ");let f="return outputValue;";const m=1===a.D5U.sizeFromShape(e.shapeInfo.logicalShape),g=1===a.D5U.sizeFromShape(t.logicalShape);if(1!==o||m||g){if(m&&!g)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=o-2,t=o-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${r}(${h});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=t.texShape,i=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===l&&null==e.shapeInfo.flatOffset&&a.D5U.arraysEqual(i,o))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=ee(l),d=G(e.shapeInfo.logicalShape,t.logicalShape),p=l-u;let h;const f=["x","y","z","w","u","v"];h=0===u?"":l<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${f[e+p]} = 0;`)).join("\n");let m="";return m=l<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+p]}`)).join(", "),`\n    float ${s}() {\n      ${c} coords = getOutputCoords();\n      ${h}\n      return get${r}(${m});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,u=L(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,d,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${q}\n    ${K}\n    ${Y}\n  `}(u);return t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(a.D5U.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let o=s,i="",u="b, r, c";for(let t=2;t<e.length-1;t++)o*=e[e.length-t-1],i=`\n      int b${t} = index / ${o};\n      index -= b${t} * ${o};\n    `+i,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return a.D5U.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${U(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=V(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${U(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=V(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=V(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=V(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(p+=Q),[p,l,d,s,c,o,n.userCode].join("\n")}function H(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Z(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[i,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${i}, ${u}, ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${J(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],o=a[1];if(1===o&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Z(n);return 1===o?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${o}, index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape;if(null!=o&&a.D5U.arraysEqual(n,o)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=o[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${o[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:u}=a.D5U.squeezeShape(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${H(ne(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${re(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${J(e)}\n      }\n    `;const c=o[0],d=o[1],p=Z(r);return 1===d?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${c}, ${d}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[1]*n[2],i=n[2],{newShape:u,keptDims:l}=a.D5U.squeezeShape(n),c=u;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${H(ne(e,c),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${re(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${i}, 1)));\n        ${J(e)}\n      }\n    `;const d=e.shapeInfo.texShape,p=d[0],h=d[1],f=e.shapeInfo.flatOffset;if(h===o&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${p}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(h===i&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${p}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const m=Z(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${m};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${i} + depth + ${m};\n        vec2 uv = uvFromFlat(${p}, ${h}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[3],i=n[2]*o,u=n[1]*i,{newShape:l,keptDims:c}=a.D5U.squeezeShape(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${H(ne(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${re(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${i}, ${o}, 1)));\n        ${J(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(f===u&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(f===o&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const x=Z(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${g}\n      ${y}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${x});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${i} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${f}, index + ${x});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],o=t[3]*s,i=t[2]*o,u=t[1]*i,{newShape:l,keptDims:c}=a.D5U.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${H(ne(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${re(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${i}, ${o}, ${s})) +\n          depth3;\n        ${J(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===u&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${o}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${i} + depth * ${o} +\n          depth2 * ${s} + depth3 + ${Z(n)};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:o}=a.D5U.squeezeShape(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${H(ne(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${re(t,o)});\n      }\n    `}const i=t[5],u=t[4]*i,l=t[3]*u,c=t[2]*l,d=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${J(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,f=h[0],m=h[1];if(m===d&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${i} + depth4 + ${Z(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function X(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${L().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=L();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape,i=o[0],u=o[1],l=L();if(null!=o&&a.D5U.arraysEqual(n,o))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${X(ne(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${re(s,r)});\n        }\n      `}const i=L();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `;const u=o[0],l=o[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=L();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],c=u[1],d=Math.ceil(s[o-1]/2);let p=d*Math.ceil(s[o-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<o-1;e++)h=`int b${e}, `+h,p*=s[o-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${h}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const q="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",K="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Y="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Q="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Z(e){return`offset${e}`}function J(e){const t=e.name,n=a.D5U.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function ee(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function te(e,t,n){const{newShape:r,keptDims:s}=a.D5U.squeezeShape(t),o=t.length,i=e&&3===o&&1===t[0],u=i?t.slice(1):r,l=!e&&o>1&&!a.D5U.arraysEqual(t,n)&&r.length<o||i;return{useSqueezeShape:l,uniformShape:l?u:t,keptDims:s}}function ne(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function re(e,t){return t.map((t=>e[t])).join(", ")}function ae(e,t,n){const r=[],s=[];let o,i,u,l=null,c=null;c=e.getUniformLocation(n,"NAN",!1),1===(0,a.OBj)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(const a of t.variableNames){const s={name:a,uniform:e.getUniformLocation(n,a,d),offset:e.getUniformLocation(n,`offset${a}`,d)};t.enableShapeUniforms&&(s.shape=e.getUniformLocation(n,`${a}Shape`,d),s.texShape=e.getUniformLocation(n,`${a}TexShape`,d)),r.push(s)}if(t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),u=e.getUniformLocation(n,"outShapeStrides",d),i=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,d));return{variablesLocations:r,customUniformLocations:s,infLoc:l,nanLoc:c,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:i}}function se(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],o=s.shape;if(!a.D5U.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,u=s.isUniform?null:s.texData.texShape;if(!a.D5U.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)}))}function oe(e){return(0,a.OBj)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class ie{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=u.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=L();this.outputShape=e,this.enableShapeUniforms=oe(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?U(["r","c","d"],e):V(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class ue{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=u.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=L();this.outputShape=e,this.enableShapeUniforms=oe(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?U(["r","c","d"],e):V(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class le{constructor(e){this.variableNames=["A"],this.outTexUsage=l.DOWNLOAD;const t=L();this.outputShape=e,this.userCode=`\n      ${W}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class ce{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=l.DOWNLOAD;const t=L();this.outputShape=e,this.userCode=`\n      ${W}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const de={R:0,G:1,B:2,A:3};class pe{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=L();this.outputShape=e,this.enableShapeUniforms=oe(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let e=0;e<n.length;e++){const t=n[e];s+=`\n          if(offset == ${e}) {\n            result = values[${de[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":z(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${s}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class he{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=L();this.outputShape=e,this.enableShapeUniforms=oe(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":z(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function fe(e,t,n,r,s,o){!function(e,t){const n=(0,a.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return C(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),u=e.TEXTURE_2D;return m(e,(()=>e.bindTexture(u,i))),m(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),m(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),m(e,(()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST))),m(e,(()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,a.OBj)().getNumber("WEBGL_VERSION")?m(e,(()=>e.texImage2D(u,0,r,t,n,0,s,o,null))):m(e,(()=>e.texStorage2D(u,1,r,t,n))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function me(e){return e.internalFormatFloat}function ge(e){return e.internalFormatHalfFloat}function ye(e){return e.downloadTextureFormat}function xe(e){return e.internalFormatPackedFloat}function be(e){return e.internalFormatPackedHalfFloat}class ve{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,a.OBj)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){s[e]=t}(t,e)):this.gl=i(t),e=this.gl,2===(0,a.OBj)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>m(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>m(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>m(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>m(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>m(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>m(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>m(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>m(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,a.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=y(this.gl,e),D(this.gl,t))this.textureHalfFloatExtension=y(this.gl,t);else if((0,a.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),D(this.gl,r))this.colorBufferHalfFloatExtension=y(this.gl,r);else if((0,a.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",D(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!D(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=C(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),m(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=C(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return m(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),m(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return C(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=f(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,a.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;m(e,(()=>e.finish())),m(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),m(e,(()=>e.deleteFramebuffer(this.framebuffer))),m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),m(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),m(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=d(t,n);return fe(e,a,s,me(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=d(t,n);return fe(e,a,s,ge(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=d(t,n);return fe(e,a,s,ye(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){m(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,a.OBj)().getNumber("WEBGL_VERSION")?m(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):m(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,a.OBj)().getNumber("WEBGL_VERSION")?m(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):m(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,o){let i,u,l;m(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),u=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),u=e.FLOAT,l=o.internalFormatPackedFloat),i.set(s),2===(0,a.OBj)().getNumber("WEBGL_VERSION")?m(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,u,i))):m(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,u,i))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=h(t,n);return fe(e,a,s,be(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=h(t,n);return fe(e,a,s,xe(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(T(this.gl,this.framebuffer),this.outputTexture=null),m(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=d(t,n),o=new Uint8Array(t*n*4);return m(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,o,i){const u=e,l=new Float32Array(function(e,t){const[n,r]=h(e,t);return n*r*4}(s,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();m(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return m(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),m(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),m(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,a.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return m(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=L();return function(e,t){const n=C(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(m(e,(()=>e.shaderSource(n,t))),m(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return C(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);m(t,(()=>t.attachShader(n,this.vertexShader))),m(t,(()=>t.attachShader(n,e))),function(e,t){if(m(e,(()=>e.linkProgram(t))),!(0,a.OBj)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&v(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;m(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),w(e,t,"clipSpacePos",n,3,20,0)&&w(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(m(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&v(this.gl,this.program),m(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return C(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),m(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),S(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=h(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&v(this.gl,this.program),I(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}m(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),m(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=y(this.gl,2===(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await a.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,a.OBj)().platform&&(n=(0,a.OBj)().platform.setTimeoutCustom.bind((0,a.OBj)().platform)),a.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),k(this.gl,e,this.framebuffer),this.debug&&I(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(k(this.gl,this.outputTexture,this.framebuffer),this.debug&&I(this.gl)):T(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;k(r,e,this.framebuffer),this.debug&&I(r),this.outputTexture=e,m(r,(()=>r.viewport(0,0,t,n))),m(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),m(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function we(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&a.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function Se(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function ke(e){return(t,n,r,s,o)=>{const i=a.backend_util.assertAndGetBroadcastShape(t,n),u=i.length,l=a.D5U.computeStrides(i),c=a.D5U.sizeFromShape(i),d=a.D5U.getTypedArrayFromDType(o,c),p=t.length,h=n.length,f=a.D5U.computeStrides(t),m=a.D5U.computeStrides(n),g=a.backend_util.getBroadcastDims(t,i),y=a.backend_util.getBroadcastDims(n,i);if(g.length+y.length===0)for(let t=0;t<d.length;++t)d[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<d.length;++t){const n=a.D5U.indexToLoc(t,u,l),o=n.slice(-p);g.forEach((e=>o[e]=0));const i=a.D5U.locToIndex(o,p,f),c=n.slice(-h);y.forEach((e=>c[e]=0));const x=a.D5U.locToIndex(c,h,m);d[t]=e(r[i],s[x])}return[d,i]}}function Te(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",o)},i}function Ie(e,t,n="float32"){if("complex64"===n)return Te({inputs:{real:Ie(e,t,"float32"),imag:Ie(e,t,"float32")},backend:e});const r=a.D5U.makeZerosTypedArray(a.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Ce(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Ne(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=a.D5U.toTypedArray([0],n),[s,o]=ke(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[o,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function $e(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return Ce({inputs:{x:s},backend:n});const e=Ie(n,s.shape,s.dtype),t=$e({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Te({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}({inputs:{input:s},backend:n}),t=$e({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!a.D5U.hasEncodingLoss(s.dtype,o)){const e=Ce({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}const i=n.data.get(s.dataId).values,[u,l,c]=Ne(i,s.shape,s.dtype,o);return n.makeTensorInfo(u,l,c)}function Ee(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:o,b:i}=n,u=s;we([o,i],e);const l=u.data.get(o.dataId).values,c=u.data.get(i.dataId).values,d="string"===o.dtype?a.backend_util.fromUint8ToStringArray(l):l,p="string"===o.dtype?a.backend_util.fromUint8ToStringArray(c):c,h=r||o.dtype,[f,m]=t(o.shape,i.shape,d,p,h);return u.makeTensorInfo(m,h,f)}:({inputs:e,backend:a})=>{const{a:s,b:o}=e,i=a;if("complex64"===s.dtype||"complex64"===o.dtype){const e=$e({inputs:{x:s},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=i.data.get(r.dataId).values,l=i.data.get(a.dataId).values,c=$e({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),d=i.data.get(c.dataId),p=d.complexTensorInfos.real,h=d.complexTensorInfos.imag,f=i.data.get(p.dataId).values,m=i.data.get(h.dataId).values,[g,y,x]=n(s.shape,o.shape,u,l,f,m),b=i.makeTensorInfo(x,"float32",g),v=i.makeTensorInfo(x,"float32",y),w=Te({inputs:{real:b,imag:v},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(v),w}{const e=i.data.get(s.dataId).values,n=i.data.get(o.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,o.shape,e,n,a);return i.makeTensorInfo(l,a,u)}}}function _e(e){return(t,n,r,s,o,i)=>{const u=a.backend_util.assertAndGetBroadcastShape(t,n),l=a.D5U.sizeFromShape(u),c=u.length,d=a.D5U.computeStrides(u),p=a.D5U.getTypedArrayFromDType("float32",l),h=a.D5U.getTypedArrayFromDType("float32",l),f=a.backend_util.getBroadcastDims(t,u),m=a.backend_util.getBroadcastDims(n,u),g=a.backend_util.mergeRealAndImagArrays(r,s),y=a.backend_util.mergeRealAndImagArrays(o,i),x=t.length,b=a.D5U.computeStrides(t),v=n.length,w=a.D5U.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<p.length;t++){const n=t%g.length,r=t%y.length,a=e(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);p[t]=a.real,h[t]=a.imag}else for(let t=0;t<p.length;t++){const n=a.D5U.indexToLoc(t,c,d),r=n.slice(-x);f.forEach((e=>r[e]=0));const s=a.D5U.locToIndex(r,x,b),o=n.slice(-v);m.forEach((e=>o[e]=0));const i=a.D5U.locToIndex(o,v,w),u=e(g[2*s],g[2*s+1],y[2*i],y[2*i+1]);p[t]=u.real,h[t]=u.imag}return[p,h,u]}}a.SYM,a.Zz9,a.iJz,a.xJR,a.RFZ;const Re=ke(((e,t)=>e+t)),Ae=_e(((e,t,n,r)=>({real:e+n,imag:t+r})));function Oe(e,t,n,r,s){const o=a.D5U.sizeFromShape(r),i=a.D5U.makeZerosTypedArray(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=o>0?t[n]:1)}return i}function De(e,t,n,r=!1){const s=e.shape[0],o=e.shape[1],i=(0,a.f3b)([s,n],t.dtype);for(let a=0;a<s;a++)for(let s=0;s<o;s++){const o=e.get(a,s);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(r?i.set(1,a,o):t.size>0?i.set(i.get(a,o)+t.get(a,s),a,o):i.set(i.get(a,o)+1,a,o))}return i}Ee(a.mm_,Re,Ae),a.mm_;const Fe=ke(((e,t)=>e&t));function Be(e){return(t,n,r)=>{const s=a.D5U.getArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function Me(e,t,n){return Pe(e,Be(t),n)}function Pe(e,t,n){return({inputs:r,attrs:s,backend:o})=>{const{x:i}=r;we(i,e);const u=o,l=u.data.get(i.dataId).values;let c;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");c=a.backend_util.fromUint8ToStringArray(l)}else c=l;const d=n||i.dtype,p=t(c,d,s);return u.makeTensorInfo(i.shape,d,p)}}Ee(a.hCO,Fe),a.hCO;const Le=Be((e=>Math.ceil(e)));function Ve(e,t,n,r){const s=a.D5U.getArrayFromDType(n,a.D5U.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=a.D5U.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const o="string"===n?a.backend_util.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const a=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[a+t]=o[i++]}r+=e.shape[1]}))}return s}Pe(a.gJX,Le),a.gJX;const Ue=ke(((e,t)=>e===t?1:0)),ze=(Ee(a.hdR,Ue,null,"bool"),a.hdR,Be((e=>Math.exp(e)))),We=(Pe(a.NEP,ze,"float32"),a.NEP,Be((e=>Math.expm1(e)))),Ge=(Pe(a.Y0y,We),a.Y0y,Be((e=>Math.floor(e))));function je(e,t,n,r,s,o,i,u,l){const c=(0,a.f3b)([r,o],n);for(let n=0;n<r;n++){const r=[];let a=0;for(let t=0;t<s;t++){const o=e[n*s+t];a+=o*i[t],r.push(o)}if(a<0||a>=l/o)throw new Error(`Invalid indices: ${r} does not index into ${u}`);for(let e=0;e<o;e++)c.values[n*o+e]=t.get(...t.indexToLoc(a*o+e))}return c}function He(e,t,n){const r=(0,a.f3b)(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],o=a[2],i=t.locToIndex([s,o]);a[2]=t.values[i];const u=e.locToIndex(a);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}Pe(a.OR,Ge),a.OR;const Xe=ke(((e,t)=>e>t?1:0)),qe=(Ee(a.iZT,Xe,null,"bool"),a.iZT,ke(((e,t)=>e>=t?1:0))),Ke=(Ee(a.Acj,qe,null,"bool"),a.Acj,ke(((e,t)=>e<t?1:0))),Ye=(Ee(a.vtC,Ke,null,"bool"),a.vtC,ke(((e,t)=>e<=t?1:0)));function Qe(e,t,n){const r=(t-e)/(n-1),s=a.D5U.makeZerosTypedArray(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}Ee(a.CAk,Ye,null,"bool"),a.CAk;const Ze=Be((e=>Math.log(e)));function Je(e,t,n,r){const s=a.D5U.getTypedArrayFromDType(r,a.D5U.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}Pe(a.ZbH,Ze),a.ZbH;const et=ke(((e,t)=>Math.max(e,t))),tt=(Ee(a.BMI,et),a.BMI,ke(((e,t)=>Math.min(e,t)))),nt=(Ee(a.q8u,tt),a.q8u,ke(((e,t)=>e*t))),rt=_e(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})));function at(e,t,n){const r=a.D5U.createScalarValue(-1,n);return nt([],t,r,e,n)}Ee(a.wYn,nt,rt),a.wYn,a.kuV;const st=ke(((e,t)=>e!==t?1:0));function ot(e,t,n,r,s){const o=t.length,i=a.D5U.sizeFromShape(t),u=a.D5U.computeStrides(t),l=a.D5U.computeStrides(s),c=a.D5U.getTypedArrayFromDType(n,a.D5U.sizeFromShape(s));for(let t=0;t<i;++t){const n=a.D5U.indexToLoc(t,o,u),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];c[a.D5U.locToIndex(s,o,l)]=e[t]}return c}function it(e,t,n,r){const[s,o]=a.backend_util.computeOutAndReduceShapes(e,r),i=(0,a.x8V)(t,"int32"),u=a.D5U.makeZerosTypedArray(a.D5U.sizeFromShape(s),i),l=a.D5U.sizeFromShape(o);for(let e=0;e<u.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];u[e]=r}return{outVals:u,outShape:s,outDtype:i}}function ut(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function lt(e,t,n,r,s,o,i,u){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=a.D5U.indexToLoc(r,t.length,a.D5U.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(o,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:c,valueSlices:d,numValues:p}=function(e,t,n,r){const a=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)i[e].push(t*n)}for(let r=0;r<e.length;++r){let o=e[r],u=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],a=e+t.length-1;if(a>=0){const e=i[a],t=e[e.length-1]-r[o];for(let e=o;e<u;++e)i[a].push(r[e+1]+t)}o=r[o],u=r[u]}u!==o&&(a.push([o,u]),s+=u-o)}return{outSplits:i,valueSlices:a,numValues:s}}(o,i,e,l),h=function(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n].length,s=a.D5U.getArrayFromDType("int32",r);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}(c),f=function(e,t,n,r,s){const o=t.slice();o[0]=s;const i=a.D5U.getArrayFromDType(n,a.D5U.sizeFromShape(o)),u=e.length;return function(e,t,n,r,a,s){const o=ut(t,2)[1],i=ut(s,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)a[u*i+t]=e[n*o+t];++u}}(e,t,r,0===u?0:u/t[0],i,o),[i,o]}(n,r,s,d,p);return[h,f[0],f[1]]}Ee(a.yQU,st,null,"bool"),a.yQU,a.G3Y,a.DlI;const ct=2147483647;function dt(e,t,n,r,s,o,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const u=0===t.length,l=0===s.length,c=0===i.length,d=[];u||d.push(t[0]),l||d.push(s[0]),c||d.push(i[0]);for(let e=1;e<d.length;++e)if(d[e]!==d[e-1])throw new Error("starts, limits, and deltas must have the same shape");const p=0===d.length?1:d[0],h=a.D5U.getArrayFromDType("int32",p+1);h[0]=0;for(let t=0;t<p;++t){const n=u?e[0]:e[t],a=l?r[0]:r[t],s=c?o[0]:o[t];if(0===s)throw new Error("Requires delta != 0");let i;if(s>0&&a<n||s<0&&a>n)i=0;else if(i=Math.ceil(Math.abs((a-n)/s)),i>ct)throw new Error(`Requires ((limit - start) / delta) <= ${ct}`);h[t+1]=h[t]+i}const f=h[p],m=a.D5U.getArrayFromDType(n,f);let g=0;for(let t=0;t<p;++t){const n=h[t+1]-h[t];let r=u?e[0]:e[t];const a=c?o[0]:o[t];for(let e=0;e<n;++e)m[g++]=r,r+=a}return[h,m]}var pt=a.backend_util.RowPartitionType;class ht{constructor(e,t,n,r,s,o,i,u,l,c){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=o,this.defaultValueShape=i,this.rowPartitionValues=u,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=a.backend_util.getRowPartitionTypesHelper(c),this.raggedRank=a.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===pt.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===pt.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case pt.VALUE_ROWIDS:return ht.getMaxWidthValueRowID(t);case pt.ROW_SPLITS:return ht.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${pt[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){const t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return mt(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;a.backend_util.validateDefaultValueShape(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=a.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);s[0]<0&&(s[0]=e);for(let e=1;e<=this.raggedRank;++e)s[e]<0&&(s[e]=this.getMaxWidth(e));return s}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let o=0;for(let e=0;e<r;++e,o+=t)s.push(o);for(let t=r;t<e;++t)s.push(-1);return a.D5U.assert(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const a=e.length,s=[];for(let o=0;o<a-1;++o){const a=e[o+1]-e[o];let i=Math.min(r,a),u=t[o];-1===u&&(i=0);for(let e=0;e<i;++e)s.push(u),u+=n;for(let e=0;e<a-i;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){const a=e.length,s=[];if(0===a)return[];let o=0,i=e[0];if(i>=t.length)throw new Error(`Got currentValueRowId=${i}, which is not less than ${t.length}`);let u=t[i];s.push(u);for(let l=1;l<a;++l){const a=e[l];if(a===i)u>=0&&(++o,o<r?u+=n:u=-1);else{if(o=0,i=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);u=t[a]}s.push(u)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){const a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case pt.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case pt.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${pt[s]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case pt.FIRST_DIM_SIZE:return e[0];case pt.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case pt.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${pt[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=mt(t,!1),s=a.D5U.getArrayFromDType(this.valuesDType,a.D5U.sizeFromShape(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,o=n;let i=r.slice();i=i.slice(e+1);const u=a.D5U.sizeFromShape(i),l=t.length;let c=this.defaultValue;if(c.length!==u&&1!==c.length){const e=this.defaultValueShape;(0,a.lub)((()=>{const t=(0,a.XLQ)(c,e),n=(0,a.UFq)(t,i);c=n.dataSync()}))}let d=0,p=0,h=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==h){if(p<h){const e=s.subarray(d*u);ft(o.subarray(p*u),e,(h-p)*u)}if(e>=l){const e=n.length;r=Math.floor(e/u)}if(r>h)if(1===this.defaultValue.length)o.subarray(h*u,r*u).fill(this.defaultValue[0]),h=r;else for(;r>h;)ft(o.slice(h*u),c,u),++h;r<0?(d=e+1,p=h):(d=e,p=h,h=p+1)}else++h}}}function ft(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function mt(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function gt(e,t,n,r,a,s,o,i,u,l){return new ht(e,t,n,r,a,s,o,i,u,l).compute()}function yt(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return a.D5U.makeZerosTypedArray(0,r);const s=Math.abs(Math.ceil((t-e)/n)),o=a.D5U.makeZerosTypedArray(s,r);t<e&&1===n&&(n=-1),o[0]=e;for(let e=1;e<o.length;e++)o[e]=o[e-1]+n;return o}const xt=Be((e=>1/Math.sqrt(e)));function bt(e,t,n,r,s,o,i,u,l,c){const d=[r/s,s],p=e.values,h=t.values;if(0===r)return(0,a.f3b)(n,t.dtype);const f=l instanceof a.YDk?l:(0,a.f3b)(d,t.dtype);"string"==typeof l||"number"==typeof l?f.values.fill(l):"boolean"==typeof l&&f.values.fill(+l);for(let e=0;e<o;e++){const a=[];let o=0;for(let t=0;t<i;t++){const n=p[e*i+t];a.push(n),o+=n*u[t]}if(o<0||o>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)c?f.values[o*s+n]+=h[e*s+n]:f.values[o*s+n]=0===t.rank?h[0]:h[e*s+n]}return f}Pe(a.bV0,xt),a.bV0;const vt=Be((e=>1/(1+Math.exp(-e))));function wt(e,t,n,r,s){const o=a.kuN.isSliceContinous(r,t,n),i=a.D5U.sizeFromShape(n),u=a.D5U.computeStrides(r);if(o){const n=a.kuN.computeFlatOffset(t,u);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l="string"===s?a.backend_util.fromUint8ToStringArray(e):e,c=(0,a.f3b)(r,s,l),d=(0,a.f3b)(n,s);for(let e=0;e<d.size;++e){const n=d.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));d.set(c.get(...r),...n)}return"string"===s?a.backend_util.fromStringArrayToUint8(d.values):d.values}function St(e,t,n,r,s,o,i){const u=t[0],l=o[0],c=new Array(l),d=new Array(u),p=t[1];if(0===l){if(0!==u)throw new Error(a.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[a.D5U.getArrayFromDType(n,0),[0,p],a.D5U.getArrayFromDType(s,0),c,d]}let h=!0,f=0;const m=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*p];if(n<0)throw new Error(a.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(a.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++m[n],h=h&&n>=f,f=n}let g=!0;for(let e=0;e<l;++e){const t=0===m[e];c[e]=t,g=g&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(g&&h){const t=e,n=r;for(let e=0;e<u;++e)d[e]=e;return[t,[u,p],n,c,d]}{const t=m[l-1],o=a.D5U.getArrayFromDType(n,t*p),h=a.D5U.getArrayFromDType(s,t),f=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*p],a=f[n],s=(0===n?0:m[n-1])+a;f[n]++;for(let n=0;n<p;++n)o[s*p+n]=e[t*p+n];h[s]=r[t],d[t]=s}for(let e=0;e<l;++e)if(0===f[e]){const t=0===e?0:m[e-1];o[t*p+0]=e;for(let e=1;e<p;++e)o[t*p+e]=0;h[t]=i}return[o,[t,p],h,c,d]}}function kt(e,t,n,r,s){const o=a.D5U.sizeFromShape(r),i=t[0],u=s.length,l=[];let c=1,d=-1;for(let e=0;e<u;++e){const t=s[e];if(-1===t){if(-1!==d)throw new Error(a.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,e));d=e,l.push(1)}else{if(t<0)throw new Error(a.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(e,t));c*=t,l.push(t)}}if(-1!==d){if(c<=0)throw new Error(a.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(o/c);if(c*e!==o)throw new Error(a.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[d]=e}if(a.D5U.sizeFromShape(l)!==o)throw new Error(a.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(r,l));const p=r.length,h=[];if(p>0){h[p-1]=1;for(let e=p-2;e>=0;--e)h[e]=h[e+1]*r[e+1]}const f=[];if(u>0){f[u-1]=1;for(let e=u-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=a.D5U.getArrayFromDType(n,i*u);for(let t=0;t<i;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*h[r];for(let e=0;e<u;++e)m[t*u+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[i,u],l]}function Tt(e,t,n,r,s,o=!1,i=0){const u=r.length,l=[t[0],e.length/t[0]],c=l[1],d=u>0?s[u-1]+1:0;if(d<0)throw new Error(a.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const p=t.slice();p[0]=d;const h=p.reduce(((e,t)=>e*t),1),f=a.D5U.getArrayFromDType(n,h);if(0===u)return d>0&&f.fill(i),[f,p];if(d<=0)throw new Error(a.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,x=s[m];for(;;){let t=0;if(g<u){if(t=s[g],x===t){++g;continue}if(x>=t)throw new Error(a.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=d)throw new Error(a.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,d));x>y&&f.fill(i,y*c,x*c);for(let t=m;t<g;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(a.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<c;t++)f[x*c+t]+=e[n*c+t]}if(o)for(let e=0;e<c;e++)f[x*c+e]/=g-m;if(m=g,++g,y=x+1,x=t,g>u)break}return y<d&&f.fill(i,y*c,d*c),[f,p]}Me(a.a5O,(e=>1/(1+Math.exp(-e)))),a.a5O,a.p2w;const It=Be((e=>Math.sqrt(e))),Ct=(Me(a.FKq,(e=>Math.sqrt(e))),a.FKq,Be(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)})));function Nt(e,t,n,r){const s=(0,a.f3b)(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),o=new Array(a.length);for(let e=0;e<o.length;e++)o[e]=a[e]*n[e]+r[e];s.set(t.get(...o),...a)}return s}Pe(a.e0R,Ct),a.e0R;class $t{constructor(e,t,n,r,s,o){this.separator=a.D5U.encodeString(e),this.nGramWidths=t,this.leftPad=a.D5U.encodeString(n),this.rightPad=a.D5U.encodeString(r),this.padWidth=s,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let o=0;o<a;++o){const i=this.getPadWidth(s),u=Math.max(0,i-o),l=Math.max(0,i-(a-(o+1))),c=s-(u+l),d=t+(u>0?0:o-i);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[d+t].length;p+=l*this.rightPad.length,p+=(u+l+c-1)*this.separator.length,n[r+o]=new Uint8Array(p);const h=n[r+o];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[d+t]),m(this.separator);if(c>0){m(e[d+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,o=a.D5U.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)o[e]=0;return[e,o]}o[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),o[e]=o[e-1]+r}const i=new Array(o[s]);for(let n=0;n<s;++n){const r=t[n];let a=o[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,u,s),a+=u})),this.preserveShort&&a===o[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,r,i,a,u,o)}}return[i,o]}}function Et(e,t,n,r,a,s,o,i){return new $t(n,r,a,s,o,i).compute(e,t)}function _t(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function Rt(e,t,n){const r=e.length,s=[];let o=0,i=0;const u=new Array(r);for(let a=0;a<r;++a){const r=s.length;_t(e[a],t,n,s);const l=s.length-r;u[a]=l,o+=l,i=Math.max(i,l)}const l=a.D5U.getArrayFromDType("int32",2*o),c=new Array(o),d=[r,i];let p=0;for(let e=0;e<r;++e)for(let t=0;t<u[e];++t)l[2*p]=e,l[2*p+1]=t,c[p]=s[p],++p;return[l,c,d]}function At(e,t){const n=a.D5U.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=a.D5U.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const Ot=ke(((e,t)=>e-t)),Dt=_e(((e,t,n,r)=>({real:e-n,imag:t-r})));function Ft(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=(0,a.f3b)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}Ee(a.Tr8,Ot,Dt),a.Tr8;const Bt=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Mt(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,o=Math.log(a),i=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*i*(a-i)/a)*Math.sign(s-a/2);Mt(e,t,Math.max(n,Math.floor(t-s*i/a+u)),Math.min(r,Math.floor(t+(a-s)*i/a+u)))}const s=e[t];let o=n,i=r;for(a.D5U.swap(e,n,t),Bt(e[r],s)>0&&a.D5U.swap(e,n,r);o<i;){for(a.D5U.swap(e,o,i),o++,i--;Bt(e[o],s)<0;)o+=1;for(;Bt(e[i],s)>0;)i-=1}0===Bt(e[n],s)?a.D5U.swap(e,n,i):(i+=1,a.D5U.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function Pt(e,t,n,r,s){const o=t[t.length-1],[i,u]=[e.length/o,o],l=a.D5U.getTypedArrayFromDType(n,i*r),c=a.D5U.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){const n=t*u,a=e.subarray(n,n+u);let o=new Array(a.length);a.forEach(((e,t)=>o[t]={value:e,index:t})),r<o.length&&(Mt(o,r),o=o.slice(0,r)),s&&o.sort(Bt);const i=t*r,d=l.subarray(i,i+r),p=c.subarray(i,i+r);for(let e=0;e<r;e++)d[e]=o[e].value,p[e]=o[e].index}const d=t.slice();return d[d.length-1]=r,[(0,a.f3b)(d,n,l),(0,a.f3b)(d,"int32",c)]}function Lt(e,t,n,r){const s=a.D5U.parseAxisParam(t,n)[0],o=[1,n[0],1];for(let e=0;e<s;e++)o[0]*=n[e];o[1]=n[s];for(let e=s+1;e<n.length;e++)o[2]*=n[e];const i=new Map,u=new Int32Array(n[s]),l=new a.YDk(o,r,e),c=[],d=1===o[0]&&1===o[2];for(let t=0;t<n[s];t++){let n;if(d)n=e[t].toString();else{const e=[];for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)e.push(l.get(n,t,r));n=e.join(",")}const r=i.get(n);if(null!=r)u[t]=r;else{const e=i.size;i.set(n,e),u[t]=e,c.push(t)}}const p=o.slice();p[1]=i.size;const h=new a.YDk(p,r);c.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)h.set(l.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=p[1],{outputValues:h.values,outputShape:f,indices:u}}const{addImpl:Vt,bincountImpl:Ut,bincountReduceImpl:zt,bitwiseAndImpl:Wt,castImpl:Gt,ceilImpl:jt,concatImpl:Ht,equalImpl:Xt,expImpl:qt,expm1Impl:Kt,floorImpl:Yt,gatherNdImpl:Qt,gatherV2Impl:Zt,greaterImpl:Jt,greaterEqualImpl:en,lessImpl:tn,lessEqualImpl:nn,linSpaceImpl:rn,logImpl:an,maxImpl:sn,maximumImpl:on,minimumImpl:un,multiplyImpl:ln,negImpl:cn,notEqualImpl:dn,prodImpl:pn,raggedGatherImpl:hn,raggedRangeImpl:fn,raggedTensorToTensorImpl:mn,rangeImpl:gn,rsqrtImpl:yn,scatterImpl:xn,sigmoidImpl:bn,simpleAbsImpl:vn,sliceImpl:wn,sparseFillEmptyRowsImpl:Sn,sparseReshapeImpl:kn,sparseSegmentReductionImpl:Tn,sqrtImpl:In,staticRegexReplaceImpl:Cn,stridedSliceImpl:Nn,stringNGramsImpl:$n,stringSplitImpl:En,stringToHashBucketFastImpl:_n,subImpl:Rn,tileImpl:An,topKImpl:On,transposeImpl:Dn,uniqueImpl:Fn}=r;function Bn(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Mn(e,t){return 1===t?[e]:Bn(e,t)}class Pn{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=oe(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Mn("rc",this.rank),t=ee(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class Ln{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=oe(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):V(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":z(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Vn{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=zn(t,n),a=Wn(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=Un(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}let o;return r===c.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===c.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===c.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=zn(n,r),o=Wn(t,s,r);o in this.freeTextures||(this.freeTextures[o]=[]);const i=Un(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=(0,a.OBj)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[o],c=l&&l.indexOf(e);if(null==c||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[c]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Un(e,t,n,r,a){const s=function(e,t){switch(e){case c.PACKED_2X2_FLOAT32:return xe(t);case c.PACKED_2X2_FLOAT16:return be(t);case c.UNPACKED_FLOAT32:return me(t);case c.UNPACKED_FLOAT16:return ge(t);case c.PACKED_4X1_UNSIGNED_BYTE:return ye(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let o;if(a){const[t,n]=h(e[0],e[1]);o=t*n}else{const[t,n]=d(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return o*i}function zn(e,t){if(e===l.UPLOAD)return c.PACKED_2X2_FLOAT32;if(e===l.RENDER||null==e)return function(e){return(0,a.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?c.PACKED_2X2_FLOAT32:c.UNPACKED_FLOAT32:e?c.PACKED_2X2_FLOAT16:c.UNPACKED_FLOAT16}(t);if(e===l.DOWNLOAD||e===l.PIXELS)return c.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Wn(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Gn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=oe(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const jn="if (isnan(x)) return x;",Hn="return x;",Xn="return abs(x);",qn="return (x >= 0.0) ? x : (exp(x) - 1.0);",Kn=jn+"\n  return (x < 0.0) ? 0.0 : x;\n",Yn=jn+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Qn="return x;",Zn="return 1.0 / (1.0 + exp(-1.0 * x));",Jn="return x;",er="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",tr="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",nr="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",rr="return 1.0 / (1.0 + exp(-1.0 * x));";class ar{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=oe(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class sr{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=oe(this.outputShape.length);const t=e.length,n=Mn("rc",t),r=ee(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const or=a.GDt.ZA,ir={},ur=(0,a.OBj)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class lr extends a.Zuw{nextDataId(){return lr.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,a.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof ve)t=e;else{const n=i((0,a.OBj)().getNumber("WEBGL_VERSION"),e);t=new ve(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=i((0,a.OBj)().getNumber("WEBGL_VERSION"));t=new ve(e),this.binaryCache=((n=(0,a.OBj)().getNumber("WEBGL_VERSION"))in ir||(ir[n]={}),ir[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Vn(this.gpgpu),this.numMBBeforeWarning=null==(0,a.OBj)().global.screen?1024:(0,a.OBj)().global.screen.height*(0,a.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new a.JLz(this,(0,a.SRH)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[r,a]},i.texShape=[r,a];const u=E(t),l=new pe(u,!1,s),c=this.runWebGLProgram(l,[o],n,[[r,a]]);return c.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),c.dataId}write(e,t,n){if(((0,a.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,a.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:l.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if((0,a.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:l.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:o,shape:i,isPacked:u}=t;if(null!=o){let t;t=u?new ar(i,Qn):new Gn(i,Qn);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let c,d;if(l&&(c=a.D5U.now()),"complex64"===r){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);d=a.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=a.D5U.now()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:o,complexTensorInfos:i,isPacked:u}=t;if(null!=s){let t;t=u?new ar(r,Qn):new Gn(r,Qn);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:o}],o),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,a.OBj)().getBool("DEBUG")&&!(0,a.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,a.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,d=null;if("complex64"!==o&&(0,a.OBj)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...p(r))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];c=a.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)c=this.getValuesFromTexture(e);else{const e=a.D5U.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){const e=this.gpgpu.gl;m(e,(()=>e.deleteBuffer(d)))}const h=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,a.SRH)().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:o,dtype:i,isPacked:u,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=o){let n;n=u?new ar(s,Qn):new Gn(s,Qn);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),d=(0,a.SRH)().makeTensorFromTensorInfo(c),p=this.texData.get(c.dataId);return Object.assign({tensorRef:d},p.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>a.D5U.decodeString(e)));return(0,a.f3b)(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,a.f3b)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!g(n)){if((0,a.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=a.D5U.sizeFromShape(t);if((0,a.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...p(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const o=(0,a.OBj)().getBool("WEBGL_PACK")&&!0===r,i=o?E(t):t,u=o?new ce(i):new le(i),l=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=a.D5U.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),o=a.D5U.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=a.D5U.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:o[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:a.D5U.now(),endMs:null}}endTimer(e){return(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=a.D5U.now(),e)}async getQueryTime(e){if((0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=ur){return(0,a.OBj)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&a.D5U.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){a.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return or(e.shape,t)}packedUnaryOp(e,t,n){const r=new ar(e.shape,t),s=this.compileAndRun(r,[e],n);return(0,a.SRH)().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=vn(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,a.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Xn,e.dtype);const t=new Gn(e.shape,Xn),n=this.compileAndRun(t,[e]);return(0,a.SRH)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&a.D5U.isString(n[0])){const s=n.map((e=>a.D5U.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return(0,a.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new sr(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Pn(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[N(e.shape),...$(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[N(t),...$(t)],s=new Ln(a,n),o=[n],i=this.runWebGLProgram(s,[r],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:o}=n;if(null!=t){const e=a.D5U.sizeFromShape(s),n=t[0]*t[1]*4;a.D5U.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=E(s);let u;u=r?new ue(i):new ie(i);const l=[null!=t?t:p(i)];return{dtype:o,shape:s,dataId:this.runWebGLProgram(u,[{shape:i,dtype:o,dataId:e}],o,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,o){const i=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(i.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===u.DENSE){const t=null!=o?o:p(e.outputShape);l.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===a.D5U.sizeFromShape(i.shape))return l.values=a.D5U.getTypedArrayFromDType(i.dtype,0),i;const c=[],d=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&a.D5U.sizeFromShape(t.shape)<=(0,a.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!R(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),c.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:l,isUniform:!1},f=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:i,uniformShape:u,keptDims:l}=te(e.packedInputs,t.shape,o);let c="",d="",p="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=a.D5U.computeStrides(u);p=`${e[0]===o[1]}_${e[e.length-1]===o[1]}`}}else d=`${u[0]>1}_${u[1]>1}`;const h=t.shape.length,f=2===u.length&&a.D5U.arraysEqual(t.shape,o),m=1===a.D5U.sizeFromShape(t.shape),g=a.backend_util.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&h===n.shape.length&&a.D5U.arraysEqual(o,n.texData.texShape),x=e.packedInputs||u.length>2?"":`${o[0]>1}_${o[1]>1}`;r+=`${h}_${y}_${i?l:""}_${u.length}_${m}_${g}_${f}_${c}_${d}_${p}_${x}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let o=e.constructor.name;return o+="_"+r+"_"+s+`${(0,a.OBj)().getNumber("WEBGL_VERSION")}`,o}(e,d,h),g=this.getAndSaveBinary(f,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),o=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=j(s,i,t),l=function(e,t){const n=C(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(m(e,(()=>e.shaderSource(n,t))),m(e,(()=>e.compileShader(n))),(0,a.OBj)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw b(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,u),c=e.createProgram(l);return(0,a.OBj)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:u,webGLProgram:c,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(c),Object.assign({program:t,fragmentShader:l,source:u,webGLProgram:c,inShapeInfos:o,outShapeInfo:i},ae(e,t,c)))}(this.gpgpu,e,d,h))),y=null!=this.activeTimers;let x;y&&(x=this.startTimer()),(0,a.OBj)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(se(t.inShapeInfos,n),se([t.outShapeInfo],[r]));const o=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):e.setOutputMatrixTexture(o.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,a.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const s=n[r],{uniform:o,offset:i,shape:u,texShape:l}=t.variablesLocations[r];if(u){const{uniformShape:n}=te(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(u,new Int32Array(n));break;case 2:e.gl.uniform2iv(u,new Int32Array(n));break;case 3:e.gl.uniform3iv(u,new Int32Array(n));break;case 4:e.gl.uniform4iv(u,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,s.texData.texShape[0],s.texData.texShape[1]),null!=o)if(s.isUniform)if(a.D5U.sizeFromShape(s.shape)<2)e.gl.uniform1f(o,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(o,t)}else null!=s.texData.slice&&null!=i&&e.gl.uniform1i(i,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,o,r)}const u=t.outShapeLocation;if(u)switch(r.shape.length){case 1:e.gl.uniform1iv(u,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(u,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(u,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(u,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=a.D5U.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],a=t.customUniformLocations[n],o=s[n];if("float"===r.type)e.gl.uniform1fv(a,o);else if("vec2"===r.type)e.gl.uniform2fv(a,o);else if("vec3"===r.type)e.gl.uniform3fv(a,o);else if("vec4"===r.type)e.gl.uniform4fv(a,o);else if("int"===r.type)e.gl.uniform1iv(a,o);else if("ivec2"===r.type)e.gl.uniform2iv(a,o);else if("ivec3"===r.type)e.gl.uniform3iv(a,o);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(a,o)}}e.executeProgram()}(this.gpgpu,g,d,h,r),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),y&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));const v=(0,a.OBj)().getNumber("WEBGL_FLUSH_THRESHOLD");if(v>0){const e=a.D5U.now();e-this.lastGlFlushTime>v&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,a.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,a.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,a.lub)((()=>{if(!(0,a.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,a.OBj)().getBool("DEBUG");(0,a.OBj)().set("DEBUG",!1);const t=this.abs((0,a.iD$)(1e-8)).dataSync()[0];if((0,a.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:o,usage:i,isPacked:u}=t;if(null!=o)return;const c=null!=this.activeTimers;let d;c&&(d=a.D5U.now());let p=t.texShape;if(null==p&&(p=function(e,t=!1){let n=(0,a.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=(0,a.OBj)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&(0,a.OBj)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?a.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=a.D5U.squeezeShape(e);e=t.newShape}let s=a.D5U.sizeFromShape(e),o=null;e.length<=1&&s<=n?o=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?o=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?o=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?o=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?o=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(o=[e[0],e[1]*e[2]*e[3]]);const i=null!=o&&Math.max(...o)>r&&Math.min(...o)<=(t?2:1)&&Math.min(...o)>0;if(null==o||i)if(t){const t=N(e);let n=2,r=2;e.length&&([n,r]=$(e)),s=t*(n/2)*(r/2),o=a.D5U.sizeToSquarishShape(s).map((e=>2*e))}else o=a.D5U.sizeToSquarishShape(s);return o}(n,u),t.texShape=p),null!=s){const e=E(n);let o,i=p[1],f=p[0];const m=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!u&&m||([i,f]=h(p[0],p[1])),o=u?new he(e,m):new pe(e,m);const g=m?[f,i]:p,y=this.makeTensorInfo(g,r),x=this.texData.get(y.dataId);x.usage=m?l.PIXELS:l.UPLOAD,x.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),i,f,s);const b=[[f,i]],v=!0,w=this.runWebGLProgram(o,[y],r,b,v),S=this.texData.get(w.dataId);t.texShape=S.texShape,t.isPacked=S.isPacked,t.usage=S.usage,(0,a.OBj)().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(t.texture=S.texture,t.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(y),c&&(this.uploadWaitMs+=a.D5U.now()-d)}else{const e=this.acquireTexture(p,i,r,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*a.D5U.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,a.glt)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw b(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=ae(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:o,channels:i}=e,u=(0,a.SRH)().backend;if(!u.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=u.writeTexture(r,t,n,s,o,i);return(0,a.SRH)().makeTensorFromDataId(l,t,n,u)}}lr.nextDataId=0,a.C2$.isBrowser()&&(0,a.jqO)("webgl",(()=>new lr),2);const cr="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class dr{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=a.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=oe(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const pr="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class hr{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a.backend_util.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=oe(s);let o="";if(r)if(0===s||1===a.D5U.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(o=`\n          ${ee(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Mn("coords",s);this.enableShapeUniforms?o+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:o+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}function fr(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const mr={kernelName:a.iJz,backendName:"webgl",kernelFunc:fr};function gr(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(s.dataId),i=fr({inputs:{x:r},backend:n}),u=fr({inputs:{x:a},backend:n});return o.complexTensorInfos={real:i,imag:u},s}const yr={kernelName:a.Zz9,backendName:"webgl",kernelFunc:gr},xr="return (a < 0.) ? b * a : a;",br="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",vr={kernelName:a.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:o}=r,i=n.makeTensorInfo([],"float32",a.D5U.createScalarValue(o,"float32")),u=(0,a.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hr(br,s.shape,i.shape):new dr(xr,s.shape,i.shape),l=n.runWebGLProgram(u,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},wr="return (a < 0.) ? b * a : a;",Sr="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",kr={kernelName:a.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,o=(0,a.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hr(Sr,r.shape,s.shape):new dr(wr,r.shape,s.shape);return n.runWebGLProgram(o,[r,s],"float32")}},Tr="if (isnan(x)) return x;";function Ir({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:o})=>{const{x:i}=s,u=o,l=r||i.dtype;if(u.shouldExecuteOnCPU([i])&&null!=n){const e=u.texData.get(i.dataId),t=n(e.values,l);return u.makeTensorInfo(i.shape,l,t)}let c;return c=(0,a.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new ar(i.shape,t):new Gn(i.shape,e),u.runWebGLProgram(c,[i],l)}}function Cr({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}){return({inputs:i,backend:u})=>{const{a:l,b:c}=i,d=u;if(r&&"complex64"===l.dtype){const t=d.texData.get(l.dataId),n=d.texData.get(c.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},o={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new dr(e,l.shape,c.shape);return d.runWebGLProgram(i,[s,o],(0,a.x8V)(n.dtype,r.dtype))})),o=gr({inputs:{real:r,imag:s},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(s),o}const p=o||(0,a.x8V)(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||d.shouldExecuteOnCPU([l,c]))&&null!=s){const e=d.texData.get(l.dataId).values,t=d.texData.get(c.dataId).values,n="string"===l.dtype?a.backend_util.fromUint8ToStringArray(e):e,r="string"===l.dtype?a.backend_util.fromUint8ToStringArray(t):t,[o,i]=s(l.shape,c.shape,n,r,p),u=d.makeTensorInfo(i,p);return d.texData.get(u.dataId).values=o,u}let h;return h=(0,a.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new hr(t,l.shape,c.shape,n):new dr(e,l.shape,c.shape),d.runWebGLProgram(h,[l,c],p)}}function Nr(e,t=!1){if("linear"===e)return t?Jn:Hn;if("relu"===e)return t?tr:Kn;if("elu"===e)return t?er:qn;if("relu6"===e)return t?nr:Yn;if("prelu"===e)return t?Sr:wr;if("leakyrelu"===e)return t?br:xr;if("sigmoid"===e)return t?rr:Zn;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class $r{constructor(e,t,n,r=!1,a=!1,s=!1,o=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=oe(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",b="rc.x";e[0]<t[0]?x=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(b=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${x};\n        int batchB = ${b};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const Er={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class _r{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=a.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Rr="return a * b;";function Ar(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,o=a.backend_util.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new _r(Er.REAL,r.shape,s.shape),o=new _r(Er.IMAG,r.shape,s.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),c=gr({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[a,i]=ln(r.shape,s.shape,e.values,t.values,o),u=n.makeTensorInfo(i,o);return n.texData.get(u.dataId).values=a,u}let i;return i=(0,a.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hr(Rr,r.shape,s.shape):new dr(Rr,r.shape,s.shape),n.runWebGLProgram(i,[r,s],o)}const Or={kernelName:a.wYn,backendName:"webgl",kernelFunc:Ar};function Dr(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:o}=r,i=n,u=a.D5U.sizeFromShape(s.shape),l=a.D5U.inferFromImplicitShape(o,u),c=a.D5U.sizeFromShape(l);a.D5U.assert(u===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${s.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const d=i.texData.get(s.dataId);return!d.isPacked||R(s.shape,l)||null!==d.texture&&R(d.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[N(e.shape),...$(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[N(t),...$(t)],o=new Ln(s,r),i=[r],u=n.runWebGLProgram(o,[a],e.dtype,i,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,l,i)}const Fr={kernelName:a.HZH,backendName:"webgl",kernelFunc:Dr};class Br{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:o}=e;this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${a.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Mr{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function Pr(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=a.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let o=e;for(let a=0;a<s.length;a++){const{inSize:i,windowSize:u,outSize:l}=s[a];let c,d;c="mean"===n?0===a?new Br({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},i):new Br({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l}):new Mr({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},n),d=o,o=r.runWebGLProgram(c,[o],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return o}class Lr{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=ee(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Vr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ee(this.rank),a=Bn("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const o=`vec2(${s.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Ur(e,t,n){const r=(0,a.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Vr(e.shape,t):new Lr(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function zr(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r;return function(e,t,n,r){const s=t,o=e.shape.length,i=a.D5U.parseAxisParam(s,e.shape);let u=i;const l=a.backend_util.getAxesPermutation(u,o),c=null!=l;let d=e;c&&(d=Ur(e,l,r),u=a.backend_util.getInnerMostAxes(u.length,o)),a.backend_util.assertAxesAreInnerMostDims("sum",u,o);const[p,h]=a.backend_util.computeOutAndReduceShapes(d.shape,u);let f=p;n&&(f=a.backend_util.expandShapeToKeepDim(p,i));const m=a.D5U.sizeFromShape(h),g=Dr({inputs:{x:d},attrs:{shape:[a.D5U.sizeFromShape(e.shape)/m,m]},backend:r}),y=Pr(g,(0,a.z4k)(e.dtype),"sum",r),x=Dr({inputs:{x:y},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(y),c&&r.disposeIntermediateTensorInfo(d),x}(s,o,i,n)}const Wr={kernelName:a.GBy,backendName:"webgl",kernelFunc:zr};function Gr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,o=n,i=a.shape.length,u=new Array(i);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(o.shouldExecuteOnCPU([a])){const e=o.texData.get(a.dataId).values,t=Dn(e,a.shape,a.dtype,s,u);l=o.makeTensorInfo(u,a.dtype),o.texData.get(l.dataId).values=t}else l=Ur(a,s,o);return l}const jr={kernelName:a.G3Y,backendName:"webgl",kernelFunc:Gr},Hr=1e3;function Xr({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:u=0,activation:l=null}){const c=e.shape.length,d=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],h=r?t.shape[d-1]:t.shape[d-2],f=n?e.shape[c-1]:e.shape[c-2],m=r?t.shape[d-2]:t.shape[d-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),x=a.D5U.sizeFromShape(g),b=a.D5U.sizeFromShape(y),v=a.Jyw.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);a.D5U.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[x,p,f]:[x,f,p],S=r?[b,m,h]:[b,h,m],k=Dr({inputs:{x:e},backend:s,attrs:{shape:w}}),T=Dr({inputs:{x:t},backend:s,attrs:{shape:S}}),I=[k,T],C=Math.max(x,b),N=n?k.shape[1]:k.shape[2],$=null!=o,E=null!=i,_="leakyrelu"===l,R=null!=l?Nr(l,!0):null;let A;if((1===f||1===m)&&N>Hr&&!1===($||E||_||null!=R)){let e=k,t=T;n&&(e=Gr({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=Gr({inputs:{x:T},backend:s,attrs:{perm:[0,2,1]}}),I.push(t));const a=1===m;let o=e;1!==m&&(o=Dr({inputs:{x:e},backend:s,attrs:{shape:[C,N,1]}}),I.push(o));const i=1===m?2:1;let u=t;a&&(u=Dr({inputs:{x:t},backend:s,attrs:{shape:[C,1,N]}}),I.push(u));const l=Ar({inputs:{a:o,b:u},backend:s});A=zr({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),I.push(l)}else{const l=(0,a.x8V)(e.dtype,t.dtype),c=new $r(w,S,[C,f,m],n,r,$,R,E,_),d=[k,T];if(null!=o&&d.push(o),E&&d.push(i),_){const e=s.makeTensorInfo([],"float32",a.D5U.createScalarValue(u,"float32"));d.push(e),I.push(e)}A=s.runWebGLProgram(c,d,l)}const O=Dr({inputs:{x:A},backend:s,attrs:{shape:v}});I.push(A);for(const e of I)s.disposeIntermediateTensorInfo(e);return O}const qr={kernelName:a.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return Xr({a,b:s,transposeA:u,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:c})}},Kr="return abs(x);",Yr={kernelName:a.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=vn(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=(0,a.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ar(r.shape,Kr):new Gn(r.shape,Kr),n.runWebGLProgram(s,[r],r.dtype)}},Qr=Ir({opSnippet:jn+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Zr={kernelName:a.VGw,backendName:"webgl",kernelFunc:Qr},Jr=Ir({opSnippet:jn+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),ea={kernelName:a.SpW,backendName:"webgl",kernelFunc:Jr},ta="return a + b;",na=Cr({opSnippet:ta,packedOpSnippet:ta,supportsComplex:!0,cpuKernelImpl:Vt}),ra={kernelName:a.mm_,backendName:"webgl",kernelFunc:na};class aa{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class sa{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const oa={kernelName:a.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return fr({inputs:{x:s[0]},backend:r});if(s.length>(0,a.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const o=s.map((e=>e.dtype)).reduce(((e,t)=>(0,a.x8V)(e,t))),i=s.map((e=>e.shape)),u=(0,a.OBj)().getBool("WEBGL_PACK")?new sa(s[0].shape,i):new aa(s[0].shape,i);return r.runWebGLProgram(u,s,o)}},ia={kernelName:a.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r,u=s.shape.length,l=a.D5U.parseAxisParam(o,s.shape);let c=l;const d=a.backend_util.getAxesPermutation(c,u);let p=s;null!=d&&(p=Gr({inputs:{x:s},backend:n,attrs:{perm:d}}),c=a.backend_util.getInnerMostAxes(c.length,u)),a.backend_util.assertAxesAreInnerMostDims("all",c,u);const[h,f]=a.backend_util.computeOutAndReduceShapes(p.shape,c),m=Dr({inputs:{x:p},backend:n,attrs:{shape:[-1,a.D5U.sizeFromShape(f)]}}),g=Pr(m,m.dtype,"all",n);let y;return y=Dr(i?{inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,l)}}:{inputs:{x:g},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}},ua={kernelName:a.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r,u=s.shape.length,l=a.D5U.parseAxisParam(o,s.shape);let c=l;const d=a.backend_util.getAxesPermutation(c,u);let p=s;null!=d&&(p=Gr({inputs:{x:s},backend:n,attrs:{perm:d}}),c=a.backend_util.getInnerMostAxes(c.length,u)),a.backend_util.assertAxesAreInnerMostDims("any",c,u);const[h,f]=a.backend_util.computeOutAndReduceShapes(p.shape,c),m=Dr({inputs:{x:p},backend:n,attrs:{shape:[-1,a.D5U.sizeFromShape(f)]}}),g=Pr(m,m.dtype,"any",n);let y;return y=Dr(i?{inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,l)}}:{inputs:{x:g},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}};class la{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class ca{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,a.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],o=Math.ceil(s/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,l=ee(u),c=Mn("coords",u);let d,p;if(1===o){p=u+1;const e=ee(p);d=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[u-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[u-2]};`}else p=u,d=`\n        ${l} sourceLocR = coords;\n        ++${c[u-1]};\n        ${l} sourceLocG = coords;\n        ++${c[u-2]};\n        ${l} sourceLocA = coords;\n        --${c[u-1]};\n        ${l} sourceLocB = coords;\n        --${c[u-2]};`;const h=["x","y","z","w","u","v"].slice(0,p),f="."+h[p-1],m=h.map((e=>"int "+e)),g=Mn("sourceLocR",p-1).concat("inIdx.r"),y=Mn("sourceLocG",p-1).concat("inIdx.g"),x=Mn("sourceLocB",p-1).concat("inIdx.b"),b=Mn("sourceLocA",p-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,S=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${i[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${i[u-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${S};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${S};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function da(e,t,n,r=null){let s=t.shape[0],o=t.shape[1];null!=r&&(s=r.shape[0],o=r.shape[1]);const i=a.backend_util.computeOptimalWindowSize(o),u={windowSize:i,inSize:o,batchSize:s,outSize:Math.ceil(o/i)},l=new la(u,n,null==r),c=[t];null!=r&&c.push(r);const d=e.runWebGLProgram(l,c,"int32");if(1===d.shape[1])return d;const p=da(e,t,n,d);return e.disposeIntermediateTensorInfo(d),p}function pa(e,t,n,r=null){const s=null!=r?r.shape:t.shape,o=s[s.length-1],i=a.backend_util.computeOptimalWindowSize(o),u=new ca(s,i,n,null==r),l=null==r?[t]:[t,r],c=e.runWebGLProgram(u,l,"int32");if(c.shape.length===t.shape.length){const r=pa(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function ha(e,t,n,r){const s=[n];if(a.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!(0,a.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],o=e.texData.get(t.dataId);let i=t;null!==o&&o.isPacked&&(i=e.unpackTensor(t),n.push(i));const[u,l]=a.backend_util.computeOutAndReduceShapes(i.shape,s),c=a.D5U.sizeFromShape(l),d=Dr({inputs:{x:i},backend:e,attrs:{shape:[-1,c]}});n.push(d);const p=da(e,d,r);n.push(p);const h=Dr({inputs:{x:p},backend:e,attrs:{shape:u}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return pa(e,t,r)}const fa={kernelName:a.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o}=r;let i=a.D5U.parseAxisParam(o,s.shape);const u=a.backend_util.getAxesPermutation(i,s.shape.length);let l=s;const c=[];null!=u&&(l=Gr({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),i=a.backend_util.getInnerMostAxes(i.length,l.shape.length)),a.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const d=ha(n,l,i[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},ma={kernelName:a.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o}=r;let i=a.D5U.parseAxisParam(o,s.shape);const u=a.backend_util.getAxesPermutation(i,s.shape.length);let l=s;const c=[];null!=u&&(l=Gr({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),i=a.backend_util.getInnerMostAxes(i.length,l.shape.length)),a.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const d=ha(n,l,i[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},ga=Ir({opSnippet:jn+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ya={kernelName:a.M2y,backendName:"webgl",kernelFunc:ga},xa=Ir({opSnippet:jn+"return log(x + sqrt(x * x + 1.0));"}),ba={kernelName:a.qw7,backendName:"webgl",kernelFunc:xa},va=Ir({opSnippet:jn+"\n  return atan(x);\n"}),wa={kernelName:a.jMg,backendName:"webgl",kernelFunc:va},Sa=Cr({opSnippet:cr+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+pr+"\n  return result;\n"}),ka={kernelName:a.QCc,backendName:"webgl",kernelFunc:Sa},Ta=Ir({opSnippet:jn+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Ia={kernelName:a.Oyi,backendName:"webgl",kernelFunc:Ta};class Ca{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const b=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class Na{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let b="0.0";if(x||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),S=s%4,k=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===S}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===S}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===S}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const $a={kernelName:a.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;M(s,"avgPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:l}=r;a.D5U.assert(a.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=a.backend_util.computePool2DInfo(s.shape,o,i,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&a.D5U.arraysEqual(c.inShape,c.outShape))return fr({inputs:{x:s},backend:n});const d=new Ca(c,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}},Ea={kernelName:a._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:l,dataFormat:c}=r,d=a.backend_util.computePool3DInfo(s.shape,o,i,[1,1,1],u,l,c),p=new Na(d,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}};class _a{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.top,c=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ra{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Aa={kernelName:a.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,i=o,{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,p=a.backend_util.computePool3DInfo(i.shape,u,l,[1,1,1],c,d),h=new Ra(p);return n.runWebGLProgram(h,[s],i.dtype)}},Oa={kernelName:a.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,i=o;M([s,o],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=r,d=a.backend_util.computePool2DInfo(i.shape,u,l,1,c),p=new _a(d);return n.runWebGLProgram(p,[s],i.dtype)}},Da={kernelName:a.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:o,transposeB:i}=r;return Xr({a,b:s,transposeA:o,transposeB:i,backend:n})}};class Fa{constructor(e,t,n,r,s,o){this.outputShape=[],this.variableNames=["x","mean","variance"],a.backend_util.assertAndGetBroadcastShape(e,t),a.backend_util.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(a.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";null!=s&&(a.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Ba{constructor(e,t,n,r,s,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],a.backend_util.assertAndGetBroadcastShape(e,t),a.backend_util.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(a.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=s&&(a.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Ma={kernelName:a.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:o,offset:i,scale:u}=e;a.D5U.assert(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),a.D5U.assert(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),a.D5U.assert(null==u||s.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[r,s,o];let d=null;null!=i&&(d=i.shape,c.push(i));let p=null;null!=u&&(p=u.shape,c.push(u));const h=(0,a.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Ba(r.shape,s.shape,o.shape,d,p,l):new Fa(r.shape,s.shape,o.shape,d,p,l);return t.runWebGLProgram(h,c,c[0].dtype)}};class Pa{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=ee(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return La.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${La[t]} = start[${t}] + coords.${La[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const La=["x","y","z","w","u","v"];class Va{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=ee(this.rank),n=Mn("coords",this.rank),r=Mn("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,o=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}}function Ua(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:o,size:i}=r,[u,l]=a.kuN.parseSliceParams(s,o,i);if(a.kuN.assertParamsValid(s,u,l),0===a.D5U.sizeFromShape(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=wn(e.values,u,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:c}=n.texData.get(s.dataId),d=a.kuN.isSliceContinous(s.shape,u,l);if(c||!d){const e=(0,a.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Va(l):new Pa(l),t=[u];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),o=r.makeTensorInfo(n,e.dtype),i=r.texData.get(o.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let u=a.kuN.computeFlatOffset(t,a.D5U.computeStrides(e.shape));s.slice&&(u+=s.slice.flatOffset),i.slice={flatOffset:u,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),o}(s,u,l,n)}const za={kernelName:a.p2w,backendName:"webgl",kernelFunc:Ua},Wa={kernelName:a.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:o,crops:i}=r;a.D5U.assert(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=o.reduce(((e,t)=>e*t)),l=a.backend_util.getReshaped(s.shape,o,u),c=a.backend_util.getPermuted(l.length,o.length),d=a.backend_util.getReshapedPermuted(s.shape,o,u),p=a.backend_util.getSliceBeginCoords(i,o.length),h=a.backend_util.getSliceSize(d,i,o.length),f=[],m=Dr({inputs:{x:s},backend:n,attrs:{shape:l}}),g=Gr({inputs:{x:m},backend:n,attrs:{perm:c}}),y=Dr({inputs:{x:g},backend:n,attrs:{shape:d}}),x=Ua({inputs:{x:y},backend:n,attrs:{begin:p,size:h}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},Ga={kernelName:a.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.readSync(a.dataId),u=n.readSync(s.dataId),l=Ut(i,u,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}},ja={kernelName:a.hCO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,o=(0,a.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=(0,a.OBj)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===i){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,o]=Wt(r.shape,s.shape,e,t,r.dtype),i=n.makeTensorInfo(o,r.dtype);return n.texData.get(i.dataId).values=a,i}let u;return u=o?new hr("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new dr("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(u,[r,s],r.dtype)}},Ha={kernelName:a.eEB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,o=n.readSync(r.dataId),i=n.readSync(s.dataId),u=a.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}},Xa=Cr({opSnippet:"return float(a != b);",cpuKernelImpl:dn,dtype:"bool"}),qa={kernelName:a.yQU,backendName:"webgl",kernelFunc:Xa};function Ka(e){const{inputs:t,backend:n}=e,{input:r}=t;return fr({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Ya={kernelName:a.xJR,backendName:"webgl",kernelFunc:Ka},Qa={kernelName:a.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:o}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===o.dtype)return fr({inputs:{x:o},backend:r});const t=a.lls(o.shape),n=e({inputs:{x:o},backend:r,attrs:{dtype:"float32"}}),s=gr({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===o.dtype){const t=Ka({inputs:{input:o},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!a.D5U.hasEncodingLoss(o.dtype,i)){const e=fr({inputs:{x:o},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([o])){const e=r.texData.get(o.dataId).values,[t,n,a]=Gt(e,o.shape,o.dtype,i);return r.makeTensorInfo(t,n,a)}if("int32"===i)return function(e,t){const n=new Gn(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(o,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",a.D5U.getTypedArrayFromDType("bool",1)),t=Xa({inputs:{a:o,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${i}`)}},Za="return ceil(x);",Ja=Ir({opSnippet:Za,packedOpSnippet:Za,cpuKernelImpl:jt}),es={kernelName:a.gJX,backendName:"webgl",kernelFunc:Ja};class ts{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class ns{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const rs={kernelName:a.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:o,clipValueMax:i}=r;let u;u=(0,a.OBj)().getBool("WEBGL_PACK_CLIP")?new ns(s.shape):new ts(s.shape);const l=[[o],[i]];return n.runWebGLProgram(u,[s],s.dtype,l)}};class as{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function ss(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const os={kernelName:a.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new as(r.shape),o=[ss(r,a.complexTensorInfos.real),ss(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class is{constructor(e){this.outputShape=[],this.outputShape=a.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class us{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=a.backend_util.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=ee(r),o=Mn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let n=1;n<u.length;n++)u[n]=u[n-1]+e[n][t];const l=i[t],c=i.slice(-2),d=i.join();let p=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${c.join()}));\n        }`;for(let e=1;e<u.length;e++){const t=u[e-1];p+=`\n        if (${l} < ${u[e]}  && ${l} >= ${u[e-1]}) {\n          return getChannel(\n            getT${e}(${ls(i,l,t)}),\n            vec2(${ls(c,l,t)}));\n        }`}const h=u.length,f=u[u.length-1];p+=`\n        return getChannel(\n          getT${h}(${ls(i,l,f)}),\n          vec2(${ls(c,l,f)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[r-1]} = ${o[r-1]} + 1;\n        if (${o[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[r-2]} = ${o[r-2]} + 1;\n        if (${o[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[r-1]} = ${o[r-1]} - 1;\n        if (${o[r-2]} < ${n[r-2]} &&\n            ${o[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function ls(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function cs(e){const{inputs:t,backend:n}=e,{input:r}=t;return fr({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const ds={kernelName:a.J_u,backendName:"webgl",kernelFunc:cs};function ps(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Ka({inputs:{input:e},backend:n}))),a=e.map((e=>cs({inputs:{input:e},backend:n}))),s=ps(r,t,n),o=ps(a,t,n),i=gr({inputs:{real:s,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=a.D5U.sizeFromShape(e.shape.slice(t));return Dr({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),o=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=a.backend_util.computeOutShape(s.map((e=>e.shape)),1),u=1===s[0].shape[0],l=Ht(o,i,r,u),c=a.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(c,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const o=e.filter((e=>a.D5U.sizeFromShape(e.shape)>0)),i=(0,a.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(1===o.length){const t=i?new Gn(e[0].shape,Qn):new ar(e[0].shape,Qn);return n.runWebGLProgram(t,e,r)}const u=(0,a.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>u){const e=[];for(let r=0;r<o.length;r+=u){const a=o.slice(r,r+u);e.push(ps(a,t,n))}const r=ps(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){const e=new us(o.map((e=>e.shape)),t);return n.runWebGLProgram(e,o,r)}const{tensors2D:l,outShape:c}=function(e,t,n){const r=a.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Dr({inputs:{x:e},attrs:{shape:[-1,a.D5U.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(o,t,n),d=new is(l.map((e=>e.shape))),p=n.runWebGLProgram(d,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const h=Dr({inputs:{x:p},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(p),h}function hs(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,o=a.D5U.parseAxisParam(s,t[0].shape)[0],i=t.map((e=>e.shape));a.backend_util.assertParamsConsistent(i,o);const u=a.backend_util.computeOutShape(t.map((e=>e.shape)),o);if(0===a.D5U.sizeFromShape(u))return n.makeTensorInfo(u,t[0].dtype,[]);const l=t.filter((e=>a.D5U.sizeFromShape(e.shape)>0));return 1===l.length?fr({inputs:{x:l[0]},backend:n}):ps(l,o,n)}const fs={kernelName:a.Eh3,backendName:"webgl",kernelFunc:hs};class ms{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,x=m?3:1;let b="",v="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class gs{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ys{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=oe(this.outputShape.length);const o=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,d=c;let p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;p+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<c;e++)p+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(d+1)/2;t++){const n=2*t;if(p+=`\n           xC = xCCorner + ${n*u};\n           `,1===i){if(n<c&&(o%2==1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,p+=1===u&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<c)){const e=o%2==0?a.D5U.nearestLargerEven(u):u;u%2==0&&o%2==1||u%2!=0&&o%2!=1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,p+=u>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):p+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<c&&(o%2==1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<c&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<c&&(p+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<c&&(p+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<c&&(p+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let h="",f="";n&&(h=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${h}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${f}\n         setOutput(result);\n       }\n     `}}class xs{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=oe(this.outputShape.length);const{dataFormat:n}=t,r=L(),a="channelsLast"===n,s=a?1:2,o=a?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function bs(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function vs({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const l=e.shape,c=r.texData.get(e.dataId),d=n.inChannels,p=l[0]*l[1]*l[2],h=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[];if(null!=o){const e=bs(o.shape,f);null!=e&&(o=Dr({inputs:{x:o},backend:r,attrs:{shape:e}}),g.push(o))}if(null!=s){const e=bs(s.shape,f);null!=e&&(s=Dr({inputs:{x:s},backend:r,attrs:{shape:e}}),g.push(s))}if((1!==p&&1!==h||!(d>Hr))&&c.isPacked&&f&&null!=c.texture&&l[2]%2!=0&&a.D5U.arraysEqual(c.shape.slice(-3),l.slice(-3))){const d=l[0]*l[1]*(l[2]+1),p={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},h=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,a.D5U.assert(R(c.shape,p.shape),(()=>`packed reshape ${c.shape} to ${p.shape} isn't free`));const f=Dr({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(f);const y=Xr({a:p,b:f,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:u,preluActivationWeights:o,leakyreluAlpha:i}),x=r.texData.get(y.dataId);a.D5U.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=h,x.shape=n.outShape,m=fr({inputs:{x:y},backend:r}),m.shape=n.outShape,g.push(y)}else{const a=n.outHeight*n.outWidth,l=Dr({inputs:{x:e},backend:r,attrs:{shape:f?[n.batchSize,a,n.inChannels]:[n.batchSize,n.inChannels,a]}}),c=Dr({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=Xr({a:f?l:c,b:f?c:l,transposeA:!f,transposeB:!1,backend:r,bias:s,activation:u,preluActivationWeights:o,leakyreluAlpha:i});m=Dr({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),g.push(l),g.push(c),g.push(d)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function ws({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const{filterWidth:l,filterHeight:c,inChannels:d,outWidth:p,outHeight:h,dataFormat:f}=n,m="channelsLast"===f,g=l*c*d,y=h*p,x=[n.batchSize,g,y],b=[];if(null!=o){const e=bs(o.shape,m);null!=e&&(o=Dr({inputs:{x:o},backend:r,attrs:{shape:e}}),b.push(o))}if(null!=s){const e=bs(s.shape,m);null!=e&&(s=Dr({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}const v=Dr({inputs:{x:t},backend:r,attrs:{shape:[1,g,a.D5U.sizeFromShape(t.shape)/g]}});b.push(v);const w=new xs(x,n),S=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(w,[e],"float32",S),T=Dr({inputs:{x:k},backend:r,attrs:{shape:x}});b.push(k),b.push(T);const I=null!=s,C=null!=o,N="leakyrelu"===u,$=u?Nr(u,!0):null,E=new $r(m?T.shape:v.shape,m?v.shape:T.shape,m?[n.batchSize,y,n.outChannels]:[n.batchSize,n.outChannels,y],!0,!1,I,$,C,N),_=m?[T,v]:[v,T];if(s&&_.push(s),C&&_.push(o),N){const e=r.makeTensorInfo([],"float32",a.D5U.createScalarValue(i,"float32"));_.push(e),b.push(e)}const R=r.runWebGLProgram(E,_,"float32"),A=Dr({inputs:{x:R},backend:r,attrs:{shape:n.outShape}});b.push(R);for(const e of b)r.disposeIntermediateTensorInfo(e);return A}const Ss={kernelName:a.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:u,dataFormat:l,dilations:c,dimRoundingMode:d}=r,p=a.backend_util.convertConv2DDataFormat(l),h=a.backend_util.computeConv2DInfo(s.shape,o.shape,i,c,u,d,!1,p);let f;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(h.strideWidth<=2&&"channelsLast"===p&&(0,a.OBj)().getBool("WEBGL_EXP_CONV")){const e=new ys(h),t=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];f=n.runWebGLProgram(e,[s,o],"float32",t)}else if((0,a.OBj)().getBool("WEBGL_CONV_IM2COL"))f=ws({x:s,filter:o,convInfo:h,backend:n});else{const e=new ms(h);f=n.runWebGLProgram(e,[s,o],"float32")}else f=vs({x:s,filter:o,convInfo:h,backend:n});const m=Dr({inputs:{x:f},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class ks{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ts{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Is{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Cs{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ns={kernelName:a.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:i,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:d}=r,p=a.backend_util.convertConv2DDataFormat(l),h=a.backend_util.computeConv2DInfo(s.shape,d,i,1,u,c,!1,p),f=new ks(h);return n.runWebGLProgram(f,[s,o],"float32")}};class $s{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=oe(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const Es={kernelName:a.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{inputShape:i,strides:u,pad:l,dataFormat:c,dimRoundingMode:d}=r,p=a.backend_util.convertConv2DDataFormat(c),h=a.backend_util.computeConv2DInfo(i,o.shape,u,1,l,d,!1,p);if((0,a.OBj)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===p){const e=[[h.strideHeight,h.strideWidth]],t=new $s(h);return n.runWebGLProgram(t,[s,o],"float32",e)}{const e=new Ts(h);return n.runWebGLProgram(e,[s,o],"float32")}}},_s={kernelName:a.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:u,dilations:l}=r,c=a.backend_util.computeConv3DInfo(s.shape,o.shape,i,l,u),d=new gs(c);return n.runWebGLProgram(d,[s,o],"float32")}},Rs={kernelName:a.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:i,pad:u,filterShape:l}=r,c=a.backend_util.computeConv3DInfo(s.shape,l,i,1,u),d=new Is(c);return n.runWebGLProgram(d,[s,o],"float32")}},As={kernelName:a.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{pad:i,strides:u,inputShape:l}=r,c=a.backend_util.computeConv3DInfo(l,o.shape,u,1,i),d=new Cs(c);return n.runWebGLProgram(d,[s,o],"float32")}},Os=Ir({opSnippet:Tr+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${pr}\n  return result;\n`}),Ds={kernelName:a.mc4,backendName:"webgl",kernelFunc:Os},Fs=Ir({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Bs={kernelName:a.TR1,backendName:"webgl",kernelFunc:Fs};class Ms{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,u]=e,[l]=t,[c,d]=n;this.outputShape=[l,c,d,u];const p="bilinear"===r?1:0,[h,f]=[o-1+".0",i-1+".0"],[m,g,y]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,b,v]=d>1?[""+(i-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${b};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Ps={kernelName:a.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:l}=r,c=new Ms(a.shape,s.shape,i,u,l);return n.runWebGLProgram(c,[a,s,o],"float32")}};var Ls;!function(e){e.Prod="*",e.Sum="+"}(Ls||(Ls={}));class Vs{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,s=this.op===Ls.Prod?"1.0":"0.0",o=n?s:`getX(${Us(a,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(i-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${i}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${ee(a)} coords = getOutputCoords();\n        int end = ${zs(a,"coords",this.op)};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${zs(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${Us(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function Us(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function zs(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Ws(e,t,n,r,s,o){const i=t.shape.length,u=a.backend_util.getAxesPermutation([r],i);let l=t;null!=u&&(l=Gr({inputs:{x:t},backend:n,attrs:{perm:u}}));const c=a.backend_util.getInnerMostAxes(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const d=l.shape[c];let p=fr({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){const r=new Vs(e,l.shape,!1,o),a=[[t]],s=p;p=n.runWebGLProgram(r,[p],p.dtype,a),n.disposeIntermediateTensorInfo(s)}if(s){const t=new Vs(e,l.shape,s,o),r=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=u){const e=Gr({inputs:{x:p},backend:n,attrs:{perm:a.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),e}return p}const Gs={kernelName:a.Byc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:o,reverse:i}=r;return Ws(Ls.Prod,a,n,s,o,i)}},js={kernelName:a.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:o,reverse:i}=r;return Ws(Ls.Sum,a,n,s,o,i)}},Hs={kernelName:a.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Ut(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=zt(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class Xs{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const qs={kernelName:a.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:o}=r,i=a.shape[0],u=("NHWC"===o?a.shape[1]:a.shape[2])*s,l=("NHWC"===o?a.shape[2]:a.shape[3])*s,c=("NHWC"===o?a.shape[3]:a.shape[1])/(s*s),d=new Xs("NHWC"===o?[i,u,l,c]:[i,c,u,l],s,o);return n.runWebGLProgram(d,[a],a.dtype)}};class Ks{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=oe(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class Ys{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=oe(this.outputShape.length);const o=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,p=d;let h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<d;e++)h+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;h+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let e=0;e<d;e++)h+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(p+1)/2;e++){const t=2*e;if(h+=`\n          xC = xCCorner + ${t*l};\n          `,1===u){if(t<d&&(i%2==1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,h+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<d)){const e=i%2==0?a.D5U.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,h+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):h+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<d&&(i%2==1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<d&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<d&&(h+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<d&&(h+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<d&&(h+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let f="",m="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const Qs={kernelName:a.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:u,dilations:l,dimRoundingMode:c}=r;let d=l;null==d&&(d=[1,1]),a.D5U.assert(a.backend_util.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=a.backend_util.computeConv2DInfo(s.shape,o.shape,i,d,u,c,!0);let h;h=(0,a.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new Ys(p):new Ks(p);const f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(h,[s,o],"float32",f)}};class Zs{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Js{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const eo={kernelName:a.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:i,dilations:u,pad:l,dimRoundingMode:c,filterShape:d}=r,p=a.backend_util.computeConv2DInfo(s.shape,d,i,u,l,c,!0),h=new Zs(p);return n.runWebGLProgram(h,[s,o],"float32")}},to={kernelName:a.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{strides:i,dilations:u,pad:l,dimRoundingMode:c,inputShape:d}=r,p=a.backend_util.computeConv2DInfo(d,o.shape,i,u,l,c,!0),h=new Js(p);return n.runWebGLProgram(h,[s,o],"float32")}};class no{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const ro={kernelName:a.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],o=a.D5U.sizeFromShape(r.shape),i=Dr({inputs:{x:r},backend:n,attrs:{shape:[o]}}),u=new no(o),l=n.runWebGLProgram(u,[i],i.dtype),c=Dr({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}};class ao{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:l}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const so={kernelName:a.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:u,dilations:l}=r,c=a.backend_util.computeDilation2DInfo(s.shape,o.shape,i,u,"NHWC",l);let d;const p=new ao(c);d=n.runWebGLProgram(p,[s,o],"float32");const h=Dr({inputs:{x:d},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(d),h}},oo={kernelName:a.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,o=t,{allDims:i,summedDims:u,idDims:l}=a.backend_util.decodeEinsumEquation(s,o.length);a.backend_util.checkEinsumDimSizes(i.length,l,o);const{path:c,steps:d}=a.backend_util.getEinsumComputePath(u,l),p=d.length;let h=null,f=i.length;const m=[];for(let e=0;e<p;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:r}=a.backend_util.getEinsumPermutation(f,l[t]);let s;a.backend_util.isIdentityPermutation(e)?s=o[t]:(s=Gr({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),m.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);a.D5U.arraysEqual(s.shape,i)||(s=Dr({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===h?h=s:(h=Ar({inputs:{a:s,b:h},backend:n}),m.push(h))}e<p-1&&(c[e]>=0&&(h=zr({inputs:{x:h},backend:n,attrs:{axis:c[e]-(i.length-f),keepDims:!1}}),m.push(h)),f--)}for(const e of m)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},io=Ir({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),uo={kernelName:a.SX0,backendName:"webgl",kernelFunc:io},lo={kernelName:a.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,o=(0,a.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hr("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new dr("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(o,[r,s],r.dtype)}},co=Cr({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Xt}),po={kernelName:a.hdR,backendName:"webgl",kernelFunc:co},ho=Ir({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${a.backend_util.ERF_P};\n  float a1 = ${a.backend_util.ERF_A1};\n  float a2 = ${a.backend_util.ERF_A2};\n  float a3 = ${a.backend_util.ERF_A3};\n  float a4 = ${a.backend_util.ERF_A4};\n  float a5 = ${a.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),fo={kernelName:a.Omj,backendName:"webgl",kernelFunc:ho},mo=Ir({opSnippet:Tr+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:qt,dtype:"float32"}),go={kernelName:a.NEP,backendName:"webgl",kernelFunc:mo};function yo(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:o}=t,i=o.shape.length,u=o.shape.slice();let l=s;return s<0&&(a.D5U.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),u.splice(l,0,1),Dr({inputs:{x:o},backend:r,attrs:{shape:u}})}const xo={kernelName:a.YFo,backendName:"webgl",kernelFunc:yo},bo="return exp(x) - 1.0;",vo=Ir({opSnippet:bo,packedOpSnippet:bo,cpuKernelImpl:Kt}),wo={kernelName:a.Y0y,backendName:"webgl",kernelFunc:vo};class So{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function ko(e,t,n){const r=n.texData.get(e.dataId),s=a.D5U.sizeFromShape(e.shape),o=e.shape[e.shape.length-1],i=Dr({inputs:{x:e},backend:n,attrs:{shape:[s/o,o]}}),u=i.shape,l=new So("real",u,t),c=new So("imag",u,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(l,d,"float32"),h=n.runWebGLProgram(c,d,"float32"),f=gr({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const m=Dr({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const To={kernelName:a.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ko(r,!1,n)}};class Io{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Co(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:o}=n;if(o=o||a.D5U.inferDtype(s),"string"===o){const e=a.D5U.getArrayFromDType(o,a.D5U.sizeFromShape(r));return e.fill(s),t.makeTensorInfo(r,o,e)}{const e=new Io(r,s),n=[[s]];return t.runWebGLProgram(e,[],o,n)}}const No={kernelName:a.deh,backendName:"webgl",kernelFunc:Co};class $o{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Eo={kernelName:a.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new $o(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},_o="return floor(x);",Ro=Ir({opSnippet:_o,packedOpSnippet:_o,cpuKernelImpl:Yt}),Ao={kernelName:a.OR,backendName:"webgl",kernelFunc:Ro},Oo=Cr({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Do={kernelName:a.jeX,backendName:"webgl",kernelFunc:Oo};class Fo{constructor(e){this.variableNames=["A"];const t=L(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Bo{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=L(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Mo={kernelName:a.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:o}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[c,d]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],p=[d,c],h=[d,c,o];if(u||i){const e=(0,a.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=Po&&e===Lo||(Lo=e,Po=document.createElement("canvas").getContext("2d",{willReadFrequently:Lo})),Po.canvas.width=c,Po.canvas.height=d,Po.drawImage(s,0,0,c,d),s=Po.canvas}const f=n.makeTensorInfo(p,"int32");n.texData.get(f.dataId).usage=l.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),s);const m=(0,a.OBj)().getBool("WEBGL_PACK")?new Bo(h):new Fo(h),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}};let Po,Lo=(0,a.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const Vo={kernelName:a._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o,bias:i,preluActivationWeights:u}=t,{strides:l,pad:c,dataFormat:d,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=r,g=a.backend_util.convertConv2DDataFormat(d),y=a.backend_util.computeConv2DInfo(s.shape,o.shape,l,p,c,h,!1,g);let x;const b=[],v=null!=i,w=null!=u,S="leakyrelu"===f,k=()=>{const e=[s,o],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Dr({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(v&&e.push(t(i,d)),w&&e.push(t(u,d)),S){const t=n.makeTensorInfo([],"float32",a.D5U.createScalarValue(m,"float32"));e.push(t),b.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&(0,a.OBj)().getBool("WEBGL_EXP_CONV")){const e=f?Nr(f,!0):null,t=new ys(y,v,e,w,S),r=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],a=k();x=n.runWebGLProgram(t,a,"float32",r)}else if((0,a.OBj)().getBool("WEBGL_CONV_IM2COL"))x=ws({x:s,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=f?Nr(f,!1):null,t=new ms(y,v,e,w,S),r=k();x=n.runWebGLProgram(t,r,"float32")}else x=vs({x:s,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const T=Dr({inputs:{x},backend:n,attrs:{shape:y.outShape}});return b.push(x),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}},Uo={kernelName:a.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o,bias:i,preluActivationWeights:u}=t,{strides:l,pad:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=[];let g=d;null==g&&(g=[1,1]),a.D5U.assert(a.backend_util.eitherStridesOrDilationsAreOne(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const y=a.backend_util.computeConv2DInfo(s.shape,o.shape,l,g,c,p,!0),x=(0,a.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,b=h?Nr(h,x):null,v=[s,o],w=null!=i,S=null!=u,k="leakyrelu"===h;if(w&&v.push(i),S&&v.push(u),k){const e=n.makeTensorInfo([],"float32",a.D5U.createScalarValue(f,"float32"));v.push(e),m.push(e)}let T;T=x?new Ys(y,w,b,S,k):new Ks(y,w,b,S,k);const I=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],C=n.runWebGLProgram(T,v,"float32",I);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),C}};class zo{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const a=ee(n.length);let s="\n    int index;";for(let e=0;e<this.sliceDim;e++)s+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const Wo={kernelName:a.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,o=s.shape,i=o[o.length-1],u=a.D5U.sizeFromShape(r.shape),[l,c,d,p]=a.backend_util.prepareAndValidate(r,s),h=Dr({inputs:{x:s},backend:n,attrs:{shape:[c,i]}}),f=Dr({inputs:{x:r},backend:n,attrs:{shape:[a.D5U.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=Qt(e,t,r.dtype,c,i,d,p,r.shape,u);return n.makeTensorInfo(l,r.dtype,a.values)}const m=new zo(i,p,[c,d],r.shape),g=n.runWebGLProgram(m,[f,h],f.dtype),y=Dr({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class Go{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=ee(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function jo(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:o}=t,{axis:i,batchDims:u}=r,l=a.D5U.parseAxisParam(i,s.shape)[0];if((0,a.OBj)().get("DEBUG")){const e=n.readSync(o.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];a.D5U.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const c=a.backend_util.segment_util.collectGatherOpShapeInfo(s,o,l,u),d=a.D5U.sizeFromShape(o.shape),p=[],h=Dr({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=Dr({inputs:{x:o},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}});p.push(h),p.push(f);const m=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([s,o])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(h),r=Zt(t,e,m);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const g=new Go(h.shape,m),y=n.runWebGLProgram(g,[h,f],h.dtype);p.push(y);const x=Dr({inputs:{x:y},backend:n,attrs:{shape:c.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}const Ho={kernelName:a.qi_,backendName:"webgl",kernelFunc:jo},Xo=Cr({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Jt,dtype:"bool"}),qo={kernelName:a.iZT,backendName:"webgl",kernelFunc:Xo},Ko=Cr({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:en}),Yo={kernelName:a.Acj,backendName:"webgl",kernelFunc:Ko},Qo={kernelName:a.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ko(r,!0,n)}},Zo=Ir({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Jo={kernelName:a.avt,backendName:"webgl",kernelFunc:Zo},ei=Ir({opSnippet:"return float(isinf(x));",dtype:"bool"}),ti={kernelName:a.iWB,backendName:"webgl",kernelFunc:ei},ni=Ir({opSnippet:"return float(isnan(x));",dtype:"bool"}),ri={kernelName:a.r7n,backendName:"webgl",kernelFunc:ni},ai=Cr({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:tn,dtype:"bool"}),si={kernelName:a.vtC,backendName:"webgl",kernelFunc:ai},oi=Cr({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:nn,dtype:"bool"}),ii={kernelName:a.CAk,backendName:"webgl",kernelFunc:oi},ui={kernelName:a.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=rn(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}},li=Ir({opSnippet:Tr+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:an}),ci={kernelName:a.ZbH,backendName:"webgl",kernelFunc:li},di=Ir({opSnippet:Tr+"\n  return log(1.0 + x);\n"}),pi={kernelName:a.kU,backendName:"webgl",kernelFunc:di},hi=Cr({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),fi={kernelName:a.PYm,backendName:"webgl",kernelFunc:hi},mi=Ir({opSnippet:"return float(!(x >= 1.0));"}),gi={kernelName:a.VfG,backendName:"webgl",kernelFunc:mi},yi=Cr({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),xi={kernelName:a.MZg,backendName:"webgl",kernelFunc:yi};class bi{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class vi{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const wi={kernelName:a.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:o,bias:i,alpha:u,beta:l}=r,c=(0,a.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new vi(s.shape,o,i,u,l):new bi(s.shape,o,i,u,l);return n.runWebGLProgram(c,[s],s.dtype)}};class Si{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const ki={kernelName:a.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:o}=t,{depthRadius:i,bias:u,alpha:l,beta:c}=r,d=new Si(a.shape,i,u,l,c);return n.runWebGLProgram(d,[a,s,o],a.dtype)}};function Ti(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:o,keepDims:i}=r,u=s.shape.length,l=a.D5U.parseAxisParam(o,s.shape);let c=l;const d=a.backend_util.getAxesPermutation(c,u),p=null!=d,h=n.shouldExecuteOnCPU([s]);let f=s;if(p){if(h){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=s.shape[d[e]];const r=Dn(e,s.shape,s.dtype,d,t);f=n.makeTensorInfo(t,s.dtype),n.texData.get(f.dataId).values=r}else f=Ur(s,d,n);c=a.backend_util.getInnerMostAxes(c.length,u)}a.backend_util.assertAxesAreInnerMostDims("max",c,u);const[m,g]=a.backend_util.computeOutAndReduceShapes(f.shape,c);let y,x=m;if(i&&(x=a.backend_util.expandShapeToKeepDim(m,l)),h){const e=n.texData.get(f.dataId).values,t=sn(e,a.D5U.sizeFromShape(g),x,s.dtype);y=n.makeTensorInfo(x,s.dtype),n.texData.get(y.dataId).values=t}else y=function(e,t,n,r){const s=a.D5U.sizeFromShape(t),o=Dr({inputs:{x:e},attrs:{shape:[a.D5U.sizeFromShape(e.shape)/s,s]},backend:r}),i=Pr(o,e.dtype,"max",r),u=Dr({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),u}(f,g,x,n);return p&&n.disposeIntermediateTensorInfo(f),y}const Ii={kernelName:a.YoZ,backendName:"webgl",kernelFunc:Ti},Ci=Cr({opSnippet:cr+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+pr+"\n  return result;\n",cpuKernelImpl:on}),Ni={kernelName:a.BMI,backendName:"webgl",kernelFunc:Ci},$i={kernelName:a.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;M(s,"maxPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:l}=r;a.D5U.assert(a.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=a.backend_util.computePool2DInfo(s.shape,o,i,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&a.D5U.arraysEqual(c.inShape,c.outShape))return fr({inputs:{x:s},backend:n});const d=new Ca(c,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}},Ei={kernelName:a.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:o,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=a.backend_util.computePool3DInfo(s.shape,o,i,[1,1,1],u,c,l),p=new Na(d,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}};class _i{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=a-1-e.padInfo.top,i=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ri{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.front,d=u-1-e.padInfo.top,p=l-1-e.padInfo.left,h=i*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ai={kernelName:a.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,i=o,{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,p=a.backend_util.computePool3DInfo(i.shape,u,l,[1,1,1],c,d),h=new Na(p,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new Ri(p),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}},Oi={kernelName:a.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o,output:i}=t,u=o;M([o,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:d,dimRoundingMode:p}=r,h=a.backend_util.computePool2DInfo(u.shape,l,c,1,d,p),f=new Ca(h,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new _i(h),y=n.runWebGLProgram(g,[s,m],u.dtype);return n.disposeIntermediateTensorInfo(m),y}},Di={kernelName:a.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:o,pad:i,includeBatchInIndex:u}=t,l=n;a.D5U.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];a.D5U.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`));const d=a.backend_util.computePool2DInfo(r.shape,s,o,c,i),[p,h]=function(e,t,n,r){let a=new Ca(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new Ca(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,u,d,l);return[p,h]}},Fi={kernelName:a.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:o}=t,i=n,u=r.shape.length,l=a.D5U.parseAxisParam(o,r.shape);let c=l;const d=a.backend_util.getAxesPermutation(c,u),p=null!=d,h=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(p){if(h){const e=i.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=r.shape[d[e]];const n=Dn(e,r.shape,r.dtype,d,t);m=i.makeTensorInfo(t,r.dtype),i.texData.get(m.dataId).values=n}else m=Ur(r,d,i);f.push(m),c=a.backend_util.getInnerMostAxes(c.length,u)}a.backend_util.assertAxesAreInnerMostDims("sum",c,u);const[g,y]=a.backend_util.computeOutAndReduceShapes(m.shape,c);let x=g;s&&(x=a.backend_util.expandShapeToKeepDim(g,l));const b=function(e,t,n,r){const s=a.D5U.sizeFromShape(t),o=Dr({inputs:{x:e},attrs:{shape:[a.D5U.sizeFromShape(e.shape)/s,s]},backend:r}),i=Pr(o,"float32","mean",r),u=Dr({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),u}(m,y,x,i);for(const e of f)i.disposeIntermediateTensorInfo(e);return b}},Bi={kernelName:a.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r,u=s.shape.length,l=a.D5U.parseAxisParam(o,s.shape);let c=l;const d=a.backend_util.getAxesPermutation(c,u);let p=s;null!=d&&(p=Gr({inputs:{x:s},backend:n,attrs:{perm:d}}),c=a.backend_util.getInnerMostAxes(c.length,s.shape.length)),a.backend_util.assertAxesAreInnerMostDims("min",c,u);const[h,f]=a.backend_util.computeOutAndReduceShapes(p.shape,c),m=Dr({inputs:{x:p},backend:n,attrs:{shape:[-1,a.D5U.sizeFromShape(f)]}}),g=Pr(m,m.dtype,"min",n);let y;return y=Dr(i?{inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,l)}}:{inputs:{x:g},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}},Mi=Cr({opSnippet:cr+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+pr+"\n  return result;\n",cpuKernelImpl:un}),Pi={kernelName:a.q8u,backendName:"webgl",kernelFunc:Mi};class Li{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=ee(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Vi{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=ee(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Mn("rc",r),u=Mn("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Ui={kernelName:a.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:o}=n,i=(0,a.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Vi(r.shape,s,o):new Li(r.shape,s,o);return t.runWebGLProgram(i,[r],r.dtype)}},zi=Cr({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+pr+"\n  return result;\n"}),Wi={kernelName:a.Vbg,backendName:"webgl",kernelFunc:zi};class Gi{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const ji=Cr({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Hi={kernelName:a.oHH,backendName:"webgl",kernelFunc:ji},Xi="return a - b;",qi=Cr({opSnippet:Xi,packedOpSnippet:Xi,supportsComplex:!0,cpuKernelImpl:Rn}),Ki={kernelName:a.Tr8,backendName:"webgl",kernelFunc:qi};function Yi(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:o}=r,i=a.D5U.parseAxisParam([o],s.shape),u=Ti({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=a.backend_util.expandShapeToKeepDim(u.shape,i),c=Dr({inputs:{x:u},backend:n,attrs:{shape:l}}),d=qi({inputs:{a:s,b:c},backend:n}),p=mo({inputs:{x:d},backend:n}),h=zr({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),f=Dr({inputs:{x:h},backend:n,attrs:{shape:l}}),m=ji({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}const Qi={kernelName:a.Gcp,backendName:"webgl",kernelFunc:Yi},Zi={kernelName:a.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:o,normalized:i}=r,u=i?a:Yi({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],d=new Gi(l,c,s),p=[[o]],h=n.runWebGLProgram(d,[u],"int32",p);return i||n.disposeIntermediateTensorInfo(u),h}},Ji=jn+"\n  return -x;\n",eu={kernelName:a.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=cn(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let s;return s=(0,a.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ar(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Gn(r.shape,Ji),n.runWebGLProgram(s,[r],r.dtype)}},tu=a.GDt.GP,nu={kernelName:a.uv1,backendName:"webgl",kernelFunc:function(e){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:l}=r,c=n.readSync(s.dataId),d=n.readSync(o.dataId),{selectedIndices:p}=tu(c,d,i,u,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},ru=a.GDt.qP,au={kernelName:a.cye,backendName:"webgl",kernelFunc:function(e){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:l,padToMaxOutputSize:c}=r,d=n.readSync(s.dataId),p=n.readSync(o.dataId),{selectedIndices:h,validOutputs:f}=ru(d,p,i,u,l,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},su=a.GDt.pA,ou={kernelName:a.W0H,backendName:"webgl",kernelFunc:function(e){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=r,d=n.readSync(s.dataId),p=n.readSync(o.dataId),h=i,f=u,m=l,g=c,{selectedIndices:y,selectedScores:x}=su(d,p,h,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};class iu{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const uu={kernelName:a.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:o,depth:i,onValue:u,offValue:l}=r,c=a.D5U.sizeFromShape(s.shape),d=new iu(c,i,u,l),p=Dr({inputs:{x:s},backend:n,attrs:{shape:[c]}}),h=n.runWebGLProgram(d,[p],o);n.disposeIntermediateTensorInfo(p);const f=Dr({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(h),f}};function lu(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Ka({inputs:{input:r},backend:n}),t=lu({inputs:{x:e},backend:n}),a=cs({inputs:{input:r},backend:n}),s=lu({inputs:{x:a},backend:n}),o=gr({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return Co({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const cu={kernelName:a.RuY,backendName:"webgl",kernelFunc:lu},du={kernelName:a.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Ka({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=cs({inputs:{input:a},backend:r}),o=lu({inputs:{x:s},backend:r}),i=gr({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}return Co({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},pu={kernelName:a.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return yo({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const o=t[0].shape,i=t[0].dtype;t.forEach((e=>{a.D5U.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),a.D5U.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=hs({inputs:t.map((e=>{const t=yo({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t})),backend:n,attrs:{axis:s}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class hu{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=ee(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class fu{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=ee(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Mn("rc",r),u=Mn("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let e=0,t=1===r?2:4;e<t;e++)h+=`\n        ${d[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const mu=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:o,constantValue:i}=r;if(0===a.D5U.sizeFromShape(s.shape))return Co({backend:n,attrs:{shape:o.map(((e,t)=>e[0]+s.shape[t]+e[1])),value:i,dtype:s.dtype}});const u=(0,a.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fu(s.shape,o,i):new hu(s.shape,o,i),l=[[i]];return n.runWebGLProgram(u,[s],s.dtype,l)},gu={kernelName:a.lyA,backendName:"webgl",kernelFunc:mu},yu=Cr({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+pr+"\n  return result;\n"}),xu={kernelName:a.pe_,backendName:"webgl",kernelFunc:yu},bu={kernelName:a.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r,u=s.shape.length,l=[],c=a.D5U.parseAxisParam(o,s.shape);let d=c;const p=a.backend_util.getAxesPermutation(d,u);let h,f=s;if(null!=p&&(f=Gr({inputs:{x:s},backend:n,attrs:{perm:p}}),d=a.backend_util.getInnerMostAxes(d.length,u),l.push(f)),a.backend_util.assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=pn(f.shape,f.dtype,e,d);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=a.backend_util.computeOutAndReduceShapes(f.shape,d),r=a.D5U.sizeFromShape(t),o=Dr({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),i=Pr(o,(0,a.z4k)(s.dtype),"prod",n);h=Dr({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(o),l.push(i)}if(i){l.push(h);const e=a.backend_util.expandShapeToKeepDim(h.shape,c);h=Dr({inputs:{x:h},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},vu={kernelName:a.dDz,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=r,u=a.map((e=>n.readSync(e.dataId))),l=a.map((e=>e.shape)),c=n.readSync(s.dataId),d=n.readSync(o.dataId),[p,h,f]=hn(u,l,c,s.shape,s.dtype,d,o.shape,i),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,h);return m.concat([g])}},wu={kernelName:a.CQl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=fn(o,r.shape,r.dtype,i,a.shape,u,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}},Su={kernelName:a.BiW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),d=n.readSync(o.dataId),p=i.map((e=>n.readSync(e.dataId))),h=i.map((e=>e.shape)),[f,m]=mn(l,a.shape,c,s.shape,s.dtype,d,o.shape,p,h,u);return n.makeTensorInfo(f,s.dtype,m)}},ku=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:o}=n,i=gn(r,a,s,o);return t.makeTensorInfo([i.length],o,i)},Tu={kernelName:a.e6w,backendName:"webgl",kernelFunc:ku},Iu=Ir({opSnippet:"return 1.0 / x;"}),Cu={kernelName:a.$HU,backendName:"webgl",kernelFunc:Iu},Nu=Ir({opSnippet:jn+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),$u={kernelName:a.qkr,backendName:"webgl",kernelFunc:Nu},Eu=Ir({opSnippet:jn+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_u={kernelName:a.SbG,backendName:"webgl",kernelFunc:Eu};class Ru{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Au{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Ou={kernelName:a._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:u}=r,[l,c]=u,d=(0,a.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Au(s.shape,l,c,o,i):new Ru(s.shape,l,c,o,i);return n.runWebGLProgram(d,[s],"float32")}};class Du{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],d=1/l,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Fu={kernelName:a.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new Du(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class Bu{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Mu{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const Pu={kernelName:a.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:u}=r,[l,c]=u,d=(0,a.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Mu(s.shape,l,c,o,i):new Bu(s.shape,l,c,o,i);return n.runWebGLProgram(d,[s],s.dtype)}};class Lu{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],d=1/l,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Vu={kernelName:a.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new Lu(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class Uu{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=ee(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class zu{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Mn("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=ee(n);function i(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Wu={kernelName:a.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:o}=r,i=s.shape.length,u=a.D5U.parseAxisParam(o,s.shape);if(0===i)return fr({inputs:{x:s},backend:n});const l=(0,a.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zu(s.shape,u):new Uu(s.shape,u);return n.runWebGLProgram(l,[s],s.dtype)}};class Gu{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const ju={kernelName:a.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:o,center:i}=t,u=n,l=new Gu(r.shape,o),[c,d]=a.backend_util.getImageCenter(i,r.shape[1],r.shape[2]),p=[[c,d,Math.sin(s),Math.cos(s)]];return u.runWebGLProgram(l,[r],r.dtype,p)}},Hu=Ir({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Xu={kernelName:a.e07,backendName:"webgl",kernelFunc:Hu},qu=Ir({opSnippet:"return inversesqrt(x);",cpuKernelImpl:yn}),Ku={kernelName:a.bV0,backendName:"webgl",kernelFunc:qu};class Yu{constructor(e,t,n,r,a,s,o=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const u=ee(a.length),l=ee(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const d=`getIndices(${c})`;let p="";1===r?p="i":2===r&&(p="i, coords[1]");const h=`getUpdates(${p})`;let f="";i&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${d});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class Qu{constructor(e,t,n,r,a,s,o=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const u=ee(a.length),l=ee(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const d=`getIndices(${c})`;let p="";1===r?p="i":2===r&&(p="i, coords[1]");const h=`getUpdates(${p})`;let f="";i&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${d});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${h};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const Zu={kernelName:a.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:o}=t,{shape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:p}=a.backend_util.calculateShapes(o,s,i),h=[p/c,c];if(0===p)return n.makeTensorInfo(i,s.dtype);const f=Dr({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=Dr({inputs:{x:o},backend:n,attrs:{shape:[l,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;y=(0,a.OBj)().getBool("WEBGL_PACK")?new Qu(l,u,f.shape.length,m.shape.length,d,h):new Yu(l,u,f.shape.length,m.shape.length,d,h);const x=n.runWebGLProgram(y,[m,f,g],m.dtype),b=Dr({inputs:{x},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(g),b}};class Ju{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,o=2===(0,a.OBj)().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${o}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const el={kernelName:a.nr8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:o}=r,i=new Ju(a.shape[0],a.shape[1],s.shape[1],o),u=[[a.shape[1]]];return n.runWebGLProgram(i,[a,s],"int32",u)}};class tl{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=o.join()}const s=ee(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const nl={kernelName:a.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:o}=t,i=new tl(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,o],(0,a.x8V)(s.dtype,o.dtype))}},rl=Ir({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${a.backend_util.SELU_SCALEALPHA};\n  float scale = ${a.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),al={kernelName:a.oFR,backendName:"webgl",kernelFunc:rl},sl=Ir({opSnippet:Tr+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:bn}),ol={kernelName:a.a5O,backendName:"webgl",kernelFunc:sl},il=Ir({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),ul={kernelName:a.i5y,backendName:"webgl",kernelFunc:il},ll=Ir({opSnippet:Tr+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${pr}\n  return result;\n`}),cl={kernelName:a.RQH,backendName:"webgl",kernelFunc:ll},dl=Ir({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),pl={kernelName:a.wYB,backendName:"webgl",kernelFunc:dl},hl=Ir({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),fl={kernelName:a.MRv,backendName:"webgl",kernelFunc:hl},ml={kernelName:a.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:o,paddings:i}=r;a.D5U.assert(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=o.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+o.length;e<s.shape.length;++e)l.push([0,0]);const c=[],d=mu({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),p=a.backend_util.getReshaped(d.shape,o,u,!1),h=a.backend_util.getPermuted(p.length,o.length,!1),f=a.backend_util.getReshapedPermuted(d.shape,o,u,!1),m=Dr({inputs:{x:d},backend:n,attrs:{shape:p}}),g=Gr({inputs:{x:m},backend:n,attrs:{perm:h}}),y=Dr({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(d),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},gl={kernelName:a.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[d,p,h,f,m]=Sn(i,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},yl={kernelName:a.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const o=Array.from(n.readSync(a.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,d]=kn(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},xl={kernelName:a.w3H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Tn(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},bl={kernelName:a.ZjV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Tn(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}},vl={kernelName:a.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:o,defaultValue:i}=t,{outputShape:u}=r,{sliceRank:l,numUpdates:c,sliceSize:d,strides:p,outputSize:h}=a.backend_util.calculateShapes(o,s,u);if("string"===o.dtype){const e=n.bufferSync(s),t=n.bufferSync(o),r=a.D5U.decodeString(n.readSync(i.dataId)[0]),f=xn(e,t,u,h,d,c,l,p,r,!1);return n.makeTensorInfo(u,f.dtype,f.values)}const f=new Yu(c,l,s.shape.length,o.shape.length,p,[h,1],!1),m=n.runWebGLProgram(f,[o,s,i],o.dtype),g=Dr({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(m),g}},wl={kernelName:a.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:o,axis:i}=r,u=a.D5U.parseAxisParam(i,s.shape)[0],l=a.backend_util.prepareSplitSize(s,o,u),c=s.shape.length,d=new Array(c).fill(0),p=s.shape.slice();return l.map((e=>{const t=[...p];t[u]=e;const r=Ua({inputs:{x:s},backend:n,attrs:{begin:d,size:t}});return d[u]+=e,r}))}},Sl="return sqrt(x);",kl=Ir({opSnippet:Sl,packedOpSnippet:Sl,cpuKernelImpl:In}),Tl={kernelName:a.FKq,backendName:"webgl",kernelFunc:kl},Il=Ir({opSnippet:"return x * x;"}),Cl={kernelName:a.bK0,backendName:"webgl",kernelFunc:Il},Nl="return (a - b) * (a - b);",$l=Cr({opSnippet:Nl,packedOpSnippet:Nl}),El={kernelName:a._tC,backendName:"webgl",kernelFunc:$l},_l={kernelName:a.e0R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const o=n.readSync(s.dataId),i=a.backend_util.fromUint8ToStringArray(o),u=Cn(i,"string",r);return n.makeTensorInfo(s.shape,"string",u)}},Rl={kernelName:a.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=jn+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new Gn(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class Al{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=ee(n.length),s=ee(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const Ol={kernelName:a.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:o,end:i,strides:u,beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:x,begin:b,end:v,strides:w}=a.kuN.sliceInfo(s.shape,o,i,u,l,c,d,p,h);let S;if(g)S=Dr({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||x){a.D5U.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=a.kuN.computeOutShape(b,v,w),t=Ua({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});S=Dr({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=(0,a.f3b)(s.shape,s.dtype,e),r=Nn(f,t,w,b);S=n.makeTensorInfo(m,s.dtype,r.values)}else{const e=new Al(b,w,f);S=n.runWebGLProgram(e,[s],s.dtype)}const k=Dr({inputs:{x:S},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(S),k}},Dl={kernelName:a._JP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,p=n.readSync(c.dataId),h=n.readSync(d.dataId),[f,m]=$n(p,h,a,s,o,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},Fl={kernelName:a.s1s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[l,c,d]=En(i,u,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}},Bl={kernelName:a.XkS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=_n(o,a);return n.makeTensorInfo(s.shape,"int32",i)}},Ml=Ir({opSnippet:"return tan(x);"}),Pl={kernelName:a.sEM,backendName:"webgl",kernelFunc:Ml},Ll=Ir({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Vl={kernelName:a.MIZ,backendName:"webgl",kernelFunc:Ll},Ul={kernelName:a.SIB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:o,updates:i}=t,{}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:p}=a.backend_util.calculateShapes(i,o,s.shape),h=[p/c,c];if(0===p)return n.makeTensorInfo(s.shape,o.dtype);const f=Dr({inputs:{x:o},backend:n,attrs:{shape:[l,u]}}),m=Dr({inputs:{x:i},backend:n,attrs:{shape:[l,c]}}),g=Dr({inputs:{x:s},backend:n,attrs:{shape:h}}),y=new Yu(l,u,f.shape.length,m.shape.length,d,h,!1,!0),x=n.runWebGLProgram(y,[m,f,g],g.dtype),b=Dr({inputs:{x},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),b}};class zl{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=ee(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function Wl(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:o}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>a.D5U.decodeString(e))):e,r=(0,a.f3b)(s.shape,s.dtype,t),i=An(r,o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new zl(s.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}const Gl={kernelName:a.n9L,backendName:"webgl",kernelFunc:Wl};class jl{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Hl{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Xl(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function ql(e){let t=1;for(;t<e;)t*=2;return t}const Kl={kernelName:a.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:o,sorted:i}=r,u=(0,a.OBj)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,a.OBj)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,d=c[c.length-1];if(n.shouldExecuteOnCPU([s])||d<u||o>l){const e=n.readSync(s.dataId),[t,r]=On(e,c,s.dtype,o,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===o)return c[c.length-1]=0,[n.makeTensorInfo(c,s.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===d)return[s,Co({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const p=n.texData.get(s.dataId),h=null!==p&&p.isPacked,f=h?n.unpackTensor(s):s,m=a.D5U.sizeFromShape(c)/d,g=Dr({inputs:{x:f},attrs:{shape:[m,d]},backend:n});h&&Xl(n,f);const y=ql(o),x=ql(d);let b=null;const v=()=>null===b?[g,g]:[g,b],w=(e,t,r)=>{const a=v(),s=new jl(r),o=[[d],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(s,a,"int32",o),Xl(n,i)};for(let e=1;e<y;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[m,x])}for(let e=x;e>y;e/=2){const t=v(),r=new Hl([m,e/2]),a=[[d],[null===b?1:0],[y]],s=b;b=n.runWebGLProgram(r,t,"int32",a),Xl(n,s);const o=y/2,i=2*o;for(let e=o;e>=1;e/=2)w(i,e,b.shape)}let S=b;b=Ua({inputs:{x:b},backend:n,attrs:{begin:0,size:[m,o]}}),Xl(n,S);let k=jo({inputs:{x:g,indices:b},backend:n,attrs:{axis:1,batchDims:1}});Xl(n,g);const T=c.slice(0,-1);T.push(o),S=b,b=Dr({inputs:{x:b},attrs:{shape:T},backend:n}),Xl(n,S);const I=k;return k=Dr({inputs:{x:k},attrs:{shape:T},backend:n}),Xl(n,I),[k,b]}};class Yl{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Ql={kernelName:a.wx7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:l}=r,[c,d,p,h]=a.shape,[f,m]=null!=l?l:[d,p],g=new Yl(d,p,o,i,u,[c,f,m,h]);return n.runWebGLProgram(g,[a,s],"float32")}},Zl={kernelName:a.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;M(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(s.dataId),{outputValues:i,outputShape:u,indices:l}=Fn(o,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}},Jl={kernelName:a.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a,i=o.shape.length,u=a.shape[s],l=new Array(i-1);let c=0;for(let e=0;e<i;e++)e!==s&&(l[c++]=o.shape[e]);const d=[],p=new Array(i).fill(0),h=o.shape.slice();h[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[s]=e;const t=Ua({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),r=Dr({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class ec{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,o=s*Math.ceil(a/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const tc=[qr,Yr,Zr,ea,ra,oa,ia,ua,fa,ma,ya,ba,wa,ka,Ia,$a,Ea,Aa,Oa,Da,Ma,Wa,Ga,ja,Ha,Qa,es,rs,yr,os,fs,Ss,Ns,Es,_s,Rs,As,Ds,Bs,Ps,Gs,js,Hs,qs,Qs,eo,to,ro,so,oo,uo,lo,po,fo,go,xo,wo,To,No,Eo,Ao,Do,Mo,Vo,Uo,Wo,Ho,qo,Yo,mr,Qo,ds,Jo,ti,ri,vr,si,ii,ui,ci,pi,fi,gi,xi,wi,ki,Ii,Ni,$i,Ei,Ai,Oi,Di,Fi,Bi,Pi,Ui,Wi,Zi,Or,eu,nu,au,ou,qa,uu,du,pu,gu,xu,kr,bu,vu,wu,Su,Tu,Ya,Hi,Cu,$u,_u,Fr,Ou,Fu,Pu,Vu,Wu,ju,Xu,Ku,Zu,el,nl,al,ol,ul,cl,pl,za,Qi,fl,ml,gl,yl,xl,bl,vl,wl,Tl,Cl,El,_l,Rl,Ol,Dl,Fl,Bl,Ki,Wr,Pl,Vl,Ul,Gl,Kl,Ql,jr,Zl,Jl,{kernelName:a.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:o}=t,{numSegments:i}=r,u=s.shape.length,l=[];let c=0;const d=a.backend_util.getAxesPermutation([c],u);let p=s;null!=d&&(p=Gr({inputs:{x:s},backend:n,attrs:{perm:d}}),l.push(p),c=a.backend_util.getInnerMostAxes(1,u)[0]);const h=a.backend_util.segment_util.computeOutShape(p.shape,c,i),f=a.D5U.sizeFromShape([p.shape[c]]),m=Dr({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,a.z4k)(s.dtype),y=(e,t,r,s,o)=>{const i=e.shape[0],u=e.shape[1],c=a.backend_util.segment_util.segOpComputeOptimalWindowSize(u,o),d=new ec({windowSize:c,inSize:u,batchSize:i,numSegments:o},t),p=n.compileAndRun(d,[e,r],s);if(l.push(p),p.shape[1]===o)return p;const h=ku({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),f=Wl({inputs:{x:h},backend:n,attrs:{reps:[u/c]}});return l.push(h),l.push(f),y(p,t,f,s,o)},x=Dr({inputs:{x:y(m,"unsortedSegmentSum",o,g,i)},backend:n,attrs:{shape:h}});let b=x;if(null!=d){l.push(x);const e=a.backend_util.getUndoAxesPermutation(d);b=Gr({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},cu];for(const e of tc)(0,a.wCN)(e)},8713:(e,t,n)=>{"use strict";n.d(t,{JL:()=>r,Zu:()=>a});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}createTensorFromGPUData(e,t,n){return s("createTensorFromGPUData")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3337:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||a)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return u(e,t,n,r,a,0)}function o(e,t,n,r,a,s){return u(e,t,n,r,a,0,!1,s,!0)}function i(e,t,n,r,a,s){return u(e,t,n,r,a,s,!0)}function u(e,t,n,a,s,o,i=!1,u=!1,p=!1){const h=[];for(let e=0;e<t.length;e++)t[e]>s&&h.push({score:t[e],boxIndex:e,suppressBeginIndex:0});h.sort(d);const f=o>0?-.5/o:0,m=[],g=[];for(;m.length<n&&h.length>0;){const t=h.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<s)break;let u=!1;for(let n=m.length-1;n>=i;--n){const r=l(e,o,m[n]);if(r>=a){u=!0;break}if(t.score=t.score*c(a,f,r),t.score<=s)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(o),g.push(t.score)):t.score>s&&r(h,t,d))}const y=m.length,x=n-y;u&&x>0&&(m.push(...new Array(x).fill(0)),g.push(...new Array(x).fill(0)));const b={selectedIndices:m};return i&&(b.selectedScores=g),p&&(b.validOutputs=y),b}function l(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(i-s)*(u-o),f=(d-l)*(p-c);if(h<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,c),y=Math.min(i,d),x=Math.min(u,p),b=Math.max(y-m,0)*Math.max(x-g,0);return b/(h+f-b)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>s,qP:()=>o,pA:()=>i})},8333:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(2657);function a(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=(0,r.f)(e,"int32"),s=(0,r.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=a.indexToLoc(n[t]),o=t*e.length;s.values.set(r,o)}return s.toTensor()}},7097:(e,t,n)=>{"use strict";n.d(t,{BV:()=>v,wv:()=>b});var r=n(8713),a=n(2885),s=n(5938),o=n(9121),i=n(6151),u=n(4706),l=n(9122),c=n(569);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new h)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let o;const i=l.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:l.now()-i})}if((0,a.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{p(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function p(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(e,t,n,r,a,s){const o="number"==typeof r?c.oj(`${r}ms`,9):r.error,i=c.oj(e,25),u=t.rank,l=t.size,d=c.oj(t.shape.toString(),14);let p="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${d}\t%c${l}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(4077),m=n(747);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class x{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){(0,i.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return u.Z(`Initialization of backend ${e} failed`),u.Z(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return x.nextTensorId++}nextVariableId(){return x.nextVariableId++}clone(e){const t=v.runKernel(o.iJz,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return v.runKernel(o.RFZ,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==(0,i.pI)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const l=(0,i.pI)(t,this.backendName);c.hu(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,a,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:p}=e,h=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),r&&this.addTapeNode(l,d,t,h,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,i.uk)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(c.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>a[t]));return s.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&c.HD(e[0])&&(a=e.map((e=>l.encodeString(e))));const s=r.write(a,t,n),o=new f.es(t,n,s,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,c.Ub)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:a}=e,s=new f.es(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new f._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=(0,i.uk)(e);null!=u&&(r=u.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.Vu)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(c.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.hu(a instanceof f.es,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],o=s.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),i=!0,a[s.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=(0,c.p8)((0,c.NA)(e),"float32");return v.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n((()=>i[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!c.cO(a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),w);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return c.hu(c.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.hu(t.every((e=>e instanceof f.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),c.hu(n.value instanceof f.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.hu(c.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];c.hu(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.hu(s.every((e=>e instanceof f.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function b(){const e=(0,s.D)();if(null==e._tfengine){const t=new a.qA(e);e._tfengine=new x(t)}return(0,a.iG)(e._tfengine.ENV),(0,f.Vi)((()=>e._tfengine)),e._tfengine}x.nextTensorId=0,x.nextVariableId=0;const v=b();function w(e,t){const n={a:e,b:t};return v.runKernel(o.mm_,n)}},2885:(e,t,n)=>{"use strict";n.d(t,{OB:()=>i,iG:()=>l,qA:()=>s});var r=n(569);const a="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);a in e&&e[a].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function o(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function i(){return u}let u=null;function l(e){u=e}},5938:(e,t,n)=>{"use strict";let r;function a(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function s(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{D:()=>a,R:()=>s})},4368:(e,t,n)=>{"use strict";n.d(t,{B9:()=>l,Cn:()=>c,SR:()=>i,jq:()=>d,lu:()=>u});var r=n(7097),a=n(2885),s=n(4077),o=n(747);function i(){return r.BV}function u(e,t){return r.BV.tidy(e,t)}function l(e){(0,o.Vu)(e).forEach((e=>e.dispose()))}function c(e){return r.BV.keep(e)}function d(e,t,n=1){return r.BV.registerBackend(e,t,n)}(0,s.FZ)((function(e){(0,a.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},633:(e,t,n)=>{"use strict";n.d(t,{cb:()=>i,pn:()=>o});var r=n(7097),a=n(4077),s=n(569);function o(e,t){s.hu(s.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),s.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof a._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.BV.registeredVariables)t.push(r.BV.registeredVariables[e])}const o=n?t.filter((e=>!e.trainable)):null,i=t.length;t=t.filter((e=>e.trainable)),s.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`));const{value:u,grads:l}=r.BV.gradients(e,t,null,!0);s.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),s.hu(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=l[t]&&(c[e.name]=l[t])})),null!=o&&o.forEach((e=>c[e.name]=null)),{value:u,grads:c}}function i(e){return r.BV.customGrad(e)}},2544:(e,t,n)=>{"use strict";n.d(t,{SYM:()=>mt.SYM,VGw:()=>mt.VGw,SpW:()=>mt.SpW,mm_:()=>mt.mm_,Xze:()=>mt.Xze,oT6:()=>mt.oT6,IKK:()=>mt.IKK,sJF:()=>mt.sJF,aJk:()=>mt.aJk,M2y:()=>mt.M2y,qw7:()=>mt.qw7,jMg:()=>mt.jMg,QCc:()=>mt.QCc,Oyi:()=>mt.Oyi,JhU:()=>mt.JhU,_k9:()=>mt._k9,IMb:()=>mt.IMb,ROF:()=>mt.ROF,XLW:()=>mt.XLW,zws:()=>mt.zws,zvY:()=>mt.zvY,hCO:()=>mt.hCO,eEB:()=>mt.eEB,RFZ:()=>mt.RFZ,gJX:()=>mt.gJX,xnO:()=>mt.xnO,Zz9:()=>mt.Zz9,yj2:()=>mt.yj2,Eh3:()=>mt.Eh3,mhS:()=>mt.mhS,wUP:()=>mt.wUP,wm:()=>mt.wm,x12:()=>mt.x12,o2y:()=>mt.o2y,ik2:()=>mt.ik2,mc4:()=>mt.mc4,TR1:()=>mt.TR1,VcC:()=>mt.VcC,Byc:()=>mt.Byc,iHb:()=>mt.iHb,JLz:()=>dr.JL,QRR:()=>mt.QRR,T0n:()=>mt.T0n,cie:()=>mt.cie,sL$:()=>mt.sL$,y7R:()=>mt.y7R,$w:()=>mt.$w,p4S:()=>mt.p4S,$g6:()=>mt.$g6,SX0:()=>mt.SX0,HEU:()=>mt.HEU,hdR:()=>mt.hdR,Omj:()=>mt.Omj,NEP:()=>mt.NEP,YFo:()=>mt.YFo,Y0y:()=>mt.Y0y,vwp:()=>mt.vwp,deh:()=>mt.deh,Uyb:()=>mt.Uyb,OR:()=>mt.OR,jeX:()=>mt.jeX,eBW:()=>mt.eBW,sHE:()=>mt.sHE,_V0:()=>mt._V0,luS:()=>mt.luS,q1x:()=>mt.q1x,qi_:()=>mt.qi_,iZT:()=>mt.iZT,Acj:()=>mt.Acj,Qg5:()=>mt.Qg5,iJz:()=>mt.iJz,J_u:()=>mt.J_u,avt:()=>mt.avt,iWB:()=>mt.iWB,r7n:()=>mt.r7n,Zuw:()=>dr.Zu,eZ0:()=>mt.eZ0,Hhh:()=>mt.Hhh,J$2:()=>mt.J$2,vtC:()=>mt.vtC,CAk:()=>mt.CAk,e7N:()=>mt.e7N,ZbH:()=>mt.ZbH,kU:()=>mt.kU,PYm:()=>mt.PYm,VfG:()=>mt.VfG,MZg:()=>mt.MZg,YoZ:()=>mt.YoZ,mTV:()=>mt.mTV,OAf:()=>mt.OAf,OU7:()=>mt.OU7,OV7:()=>mt.OV7,vFR:()=>mt.vFR,BMI:()=>mt.BMI,q2K:()=>mt.q2K,c17:()=>mt.c17,q8u:()=>mt.q8u,jQs:()=>mt.jQs,Vbg:()=>mt.Vbg,NZg:()=>mt.NZg,wYn:()=>mt.wYn,kuV:()=>mt.kuV,uv1:()=>mt.uv1,cye:()=>mt.cye,W0H:()=>mt.W0H,yQU:()=>mt.yQU,we_:()=>mt.we_,qWM:()=>mt.qWM,QiL:()=>mt.QiL,lyA:()=>mt.lyA,pe_:()=>mt.pe_,o0g:()=>mt.o0g,DlI:()=>mt.DlI,dDz:()=>mt.dDz,CQl:()=>mt.CQl,BiW:()=>mt.BiW,e6w:()=>mt.e6w,xJR:()=>mt.xJR,oHH:()=>mt.oHH,$HU:()=>mt.$HU,qkr:()=>mt.qkr,SbG:()=>mt.SbG,HZH:()=>mt.HZH,_Yw:()=>mt._Yw,zbQ:()=>mt.zbQ,dpD:()=>mt.dpD,Hmb:()=>mt.Hmb,mKl:()=>mt.mKl,b9H:()=>mt.b9H,e07:()=>mt.e07,bV0:()=>mt.bV0,xQA:()=>mt.xQA,nr8:()=>mt.nr8,PhF:()=>mt.PhF,oFR:()=>mt.oFR,a5O:()=>mt.a5O,i5y:()=>mt.i5y,RQH:()=>mt.RQH,wYB:()=>mt.wYB,p2w:()=>mt.p2w,Gcp:()=>mt.Gcp,MRv:()=>mt.MRv,TQc:()=>mt.TQc,O3z:()=>mt.O3z,nhH:()=>mt.nhH,w3H:()=>mt.w3H,ZjV:()=>mt.ZjV,D2d:()=>mt.D2d,L8s:()=>mt.L8s,FKq:()=>mt.FKq,bK0:()=>mt.bK0,_tC:()=>mt._tC,e0R:()=>mt.e0R,h8e:()=>mt.h8e,jQk:()=>mt.jQk,_JP:()=>mt._JP,s1s:()=>mt.s1s,XkS:()=>mt.XkS,Tr8:()=>mt.Tr8,GBy:()=>mt.GBy,sEM:()=>mt.sEM,MIZ:()=>mt.MIZ,esB:()=>Te.es,YDk:()=>Te.YD,SIB:()=>mt.SIB,n9L:()=>mt.n9L,cWu:()=>mt.cWu,wx7:()=>mt.wx7,G3Y:()=>mt.G3Y,kpP:()=>mt.kpP,ToN:()=>mt.ToN,Qvg:()=>mt.Qvg,RuY:()=>mt.RuY,usg:()=>mt.usg,IHx:()=>qt.IHx,backend_util:()=>u,UFq:()=>qt.UFq,Jyw:()=>ft,Xhn:()=>s,f3b:()=>qt.f3b,pju:()=>qt.pju,iUl:()=>qt.iUl,d9v:()=>qt.d9v,zoF:()=>qt.zoF,C2$:()=>r,B90:()=>Ce.B9,hiC:()=>qt.hiC,SRH:()=>Ce.SR,OBj:()=>m.OB,Qqt:()=>qt.Qqt,dt4:()=>qt.dt4,BHj:()=>qt.BHj,io:()=>a,CnY:()=>Ce.Cn,GDt:()=>l,dC7:()=>qt.dC7,glt:()=>Yt,jqO:()=>Ce.jq,wCN:()=>gt.wC,XLQ:()=>qt.XLQ,iD$:()=>qt.iD$,XD2:()=>qt.XD2,tPi:()=>qt.tPi,kuN:()=>o,L9e:()=>qt.L9e,knu:()=>qt.knu,luU:()=>qt.luU,z4k:()=>Xt.z4,XeE:()=>qt.XeE,RRF:()=>qt.RRF,odF:()=>qt.odF,lub:()=>Ce.lu,HHK:()=>qt.HHK,x8V:()=>Xt.x8,D5U:()=>w,lls:()=>qt.lls});var r={};n.r(r),n.d(r,{isBrowser:()=>f,isMobile:()=>h,mockIsMobile:()=>p});var a={};n.r(a),n.d(a,{CompositeArrayBuffer:()=>S,browserFiles:()=>Qe,browserHTTPRequest:()=>ot,concatenateArrayBuffers:()=>E,copyModel:()=>me,decodeWeights:()=>I,encodeWeights:()=>T,fromMemory:()=>ct,fromMemorySync:()=>dt,getLoadHandlers:()=>U,getModelArtifactsForJSON:()=>O,getModelArtifactsForJSONSync:()=>A,getModelArtifactsInfoForJSON:()=>D,getSaveHandlers:()=>V,getWeightSpecs:()=>F,http:()=>st,isHTTPScheme:()=>rt,listModels:()=>he,loadWeights:()=>et,moveModel:()=>ge,registerLoadRouter:()=>L,registerSaveRouter:()=>P,removeModel:()=>fe,weightsLoaderFactory:()=>tt,withSaveHandler:()=>pt,withSaveHandlerSync:()=>ht});var s={};n.r(s),n.d(s,{draw:()=>Ct,fromPixels:()=>Nt,fromPixelsAsync:()=>kt,toPixels:()=>It});var o={};n.r(o),n.d(o,{assertParamsValid:()=>_t,computeFlatOffset:()=>Wt,computeOutShape:()=>At,getNormalizedAxes:()=>Bt,isSliceContinous:()=>zt,maskToAxes:()=>Rt,parseSliceParams:()=>Gt,sliceInfo:()=>jt,startForAxis:()=>Vt,startIndicesWithElidedDims:()=>Mt,stopForAxis:()=>Ut,stopIndicesWithElidedDims:()=>Pt,stridesForAxis:()=>Lt,stridesWithElidedDims:()=>Ot});var i={};n.r(i),n.d(i,{collectGatherOpShapeInfo:()=>or,computeOutShape:()=>sr,segOpComputeOptimalWindowSize:()=>ar});var u={};n.r(u),n.d(u,{ERF_A1:()=>wn,ERF_A2:()=>Sn,ERF_A3:()=>kn,ERF_A4:()=>Tn,ERF_A5:()=>In,ERF_P:()=>vn,PARALLELIZE_THRESHOLD:()=>un,RowPartitionType:()=>en,SELU_SCALE:()=>bn,SELU_SCALEALPHA:()=>xn,applyActivation:()=>nn.QH,assertAndGetBroadcastShape:()=>ft.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>Qt.lB,assertParamsConsistent:()=>Zt,assignToTypedArray:()=>An,axesAreInnerMostDims:()=>Qt.YB,calculateShapes:()=>yn.SU,checkEinsumDimSizes:()=>Un,checkPadOnDimRoundingMode:()=>tn.m,combineLocations:()=>Qt.Vh,combineRaggedTensorToTensorShapes:()=>rn,complexWithEvenIndex:()=>En,complexWithOddIndex:()=>_n,computeConv2DInfo:()=>tn.Ix,computeConv3DInfo:()=>tn.jw,computeDefaultPad:()=>tn.aO,computeDilation2DInfo:()=>tn.Rf,computeOptimalWindowSize:()=>ln,computeOutAndReduceShapes:()=>Qt.kz,computeOutShape:()=>Jt,computePool2DInfo:()=>tn.Xw,computePool3DInfo:()=>tn.pl,convertConv2DDataFormat:()=>tn.sl,decodeEinsumEquation:()=>Ln,eitherStridesOrDilationsAreOne:()=>tn.jT,expandShapeToKeepDim:()=>Qt.rv,exponent:()=>Dn,exponents:()=>On,fromStringArrayToUint8:()=>ur,fromUint8ToStringArray:()=>ir,getAxesPermutation:()=>Qt.Q3,getBroadcastDims:()=>ft.getBroadcastDims,getComplexWithIndex:()=>Rn,getEinsumComputePath:()=>zn,getEinsumPermutation:()=>Vn,getFusedBiasGradient:()=>nn.pf,getFusedDyActivation:()=>nn.Fr,getImageCenter:()=>cn,getInnerMostAxes:()=>Qt.sY,getPermuted:()=>pn,getRaggedRank:()=>sn,getReductionAxes:()=>ft.getReductionAxes,getReshaped:()=>dn,getReshapedPermuted:()=>hn,getRowPartitionTypesHelper:()=>an,getSliceBeginCoords:()=>fn,getSliceSize:()=>mn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Hn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Xn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>qn,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Qn,getSparseReshapeInputOutputMismatchErrorMessage:()=>Jn,getSparseReshapeInputOutputMultipleErrorMessage:()=>Zn,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Kn,getSparseReshapeNegativeOutputDimErrorMessage:()=>Yn,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>rr,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>er,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>tr,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>nr,getUndoAxesPermutation:()=>Qt.LJ,isIdentityPermutation:()=>Wn,log:()=>Cn.c,mergeRealAndImagArrays:()=>Nn,prepareAndValidate:()=>gn,prepareSplitSize:()=>jn,segment_util:()=>i,shouldFuse:()=>nn.uy,slice_util:()=>o,splitRealAndImagArrays:()=>$n,stridesOrDilationsArePositive:()=>tn.U3,tupleValuesAreOne:()=>tn.I0,upcastType:()=>Xt.x8,validateDefaultValueShape:()=>on,validateInput:()=>yn.b0,validateUpdateShape:()=>yn.l5,warn:()=>Cn.Z});var l={};n.r(l),n.d(l,{GP:()=>lr.GP,qP:()=>lr.qP,pA:()=>lr.pA,ZA:()=>cr.Z});var c=n(7097);let d;function p(e){d=e}function h(e){if(void 0!==d)return d;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function f(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var m=n(2885);const g=(0,m.OB)();g.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),g.registerFlag("IS_BROWSER",(()=>f())),g.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),g.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),g.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),g.registerFlag("PROD",(()=>!1)),g.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>g.getBool("DEBUG"))),g.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),g.registerFlag("IS_TEST",(()=>!1)),g.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>g.getBool("DEBUG"))),g.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),g.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),g.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var y=n(1661),x=n(701),b=n(569);const v={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var w=n(9122);class S{static join(e){return new S(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>w.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),a=new Uint8Array(r);let s=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],o=e+s-n.start,i=s,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,o,u-o);if(a.set(l,i),s+=l.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const a=Math.floor((r-n)/2)+n,s=t(e[a]);if(0===s)return a;s<0?r=a:n=a+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}const k=4;async function T(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const o=a[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+k*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=k,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:C(await Promise.all(r)),specs:n}}function I(e,t){const n=new S(e),r={};let a,s=0;for(const e of t){const t=e.name,o=e.dtype,i=e.shape,u=(0,b.NA)(i);let l;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}const i=v[r.dtype],c=n.slice(s,s+u*i),d="uint8"===r.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){l=new Float32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===a&&(a=B()),l=a(d)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);l=new Int32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=Math.round(t*r.scale+r.min)}}s+=u*i}else if("string"===o){const t=(0,b.NA)(e.shape);l=[];for(let e=0;e<t;e++){const e=new Uint32Array(n.slice(s,s+k))[0];s+=k;const t=new Uint8Array(n.slice(s,s+e));l.push(t),s+=e}}else{const e=v[o],a=n.slice(s,s+u*e);if("float32"===o)l=new Float32Array(a);else if("int32"===o)l=new Int32Array(a);else if("bool"===o)l=new Uint8Array(a);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),n=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],n[t]=l[2*t+1];const s=(0,x.X)(e,i,"float32"),o=(0,x.X)(n,i,"float32");r[t]=(0,y.P)(s,o),s.dispose(),o.dispose()}}s+=u*e}"complex64"!==o&&(r[t]=(0,x.X)(l,i,o))}return r}function C(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const N="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function $(e){return N?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function E(e){return S.join(e)}function _(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function R(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function A(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function O(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),A(e,n,r)}function D(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:$(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:$(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new S(e.weightData).byteLength}}function F(e){const t=[];for(const n of e)t.push(...n.weights);return t}function B(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const o=r[a],i=e[n[o>>10]+(1023&o)]+t[o>>10];s[a]=i}return new Float32Array(a)}}class M{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==M.instance&&(M.instance=new M),M.instance}static registerSaveRouter(e){M.getInstance().saveRouters.push(e)}static registerLoadRouter(e){M.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return M.getHandlers(e,"save")}static getLoadHandlers(e,t){return M.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?M.getInstance().loadRouters:M.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const P=e=>M.registerSaveRouter(e),L=e=>M.registerLoadRouter(e),V=e=>M.getSaveHandlers(e),U=(e,t)=>M.getLoadHandlers(e,t),z="tensorflowjs",W="models_store",G="model_info_store";function j(){if(!(0,m.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function H(e){const t=e.result;t.createObjectStore(W,{keyPath:"modelPath"}),t.createObjectStore(G,{keyPath:"modelPath"})}class X{constructor(e){if(this.indexedDB=j(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(z,1);r.onupgradeneeded=()=>H(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(W,"readonly"),r=t.objectStore(W).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{t.weightData=S.join(t.weightData);const r=D(t),s=a.transaction(G,"readwrite");let o,i,u=s.objectStore(G);try{o=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}o.onsuccess=()=>{i=a.transaction(W,"readwrite");const o=i.objectStore(W);let l;try{l=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}l.onsuccess=()=>e({modelArtifactsInfo:r}),l.onerror=e=>{u=s.objectStore(G);const t=u.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==i?a.close():i.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}X.URL_SCHEME="indexeddb://";const q=e=>{return(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(X.URL_SCHEME)?(t=e.slice(X.URL_SCHEME.length),new X(t)):null;var t};M.registerSaveRouter(q),M.registerLoadRouter(q);class K{constructor(){this.indexedDB=j()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(z,1);n.onupgradeneeded=()=>H(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(G,"readonly"),s=a.objectStore(G).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(X.URL_SCHEME)?t.slice(X.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(z,1);r.onupgradeneeded=()=>H(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(G,"readwrite"),o=s.objectStore(G),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{u=a.transaction(W,"readwrite");const r=u.objectStore(W).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const Y="/",Q="tensorflowjs_models",Z="info",J="model_topology",ee="weight_specs",te="weight_data",ne="model_metadata";function re(e){return{info:[Q,e,Z].join(Y),topology:[Q,e,J].join(Y),weightSpecs:[Q,e,ee].join(Y),weightData:[Q,e,te].join(Y),modelMetadata:[Q,e,ne].join(Y)}}function ae(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function se(e){const t=e.split(Y);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Y)}class oe{constructor(e){if(!(0,m.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=re(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=D(e),a=S.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(N)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(a));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw ae(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(N){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}oe.URL_SCHEME="localstorage://";const ie=e=>{return(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(oe.URL_SCHEME)?(t=e.slice(oe.URL_SCHEME.length),new oe(t)):null;var t};M.registerSaveRouter(ie),M.registerLoadRouter(ie);class ue{constructor(){(0,b.hu)((0,m.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,b.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Q+Y,n=Y+Z;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[se(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=re(e=(t=e).startsWith(oe.URL_SCHEME)?t.slice(oe.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ae(n),r}}const le="://";class ce{constructor(){this.managers={}}static getInstance(){return null==ce.instance&&(ce.instance=new ce),ce.instance}static registerManager(e,t){(0,b.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(le)&&(e=e.slice(0,e.indexOf(le))),(0,b.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=ce.getInstance();(0,b.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ce.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ce.getInstance().managers)}}function de(e){if(-1===e.indexOf(le))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ce.getSchemes().join(",")}`);return{scheme:e.split(le)[0],path:e.split(le)[1]}}async function pe(e,t,n=!1){(0,b.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=M.getLoadHandlers(e);(0,b.hu)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,b.hu)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=M.getSaveHandlers(t);(0,b.hu)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,b.hu)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=s[0],i=de(e).scheme,u=de(e).path,l=i===de(e).scheme,c=await a.load();n&&l&&await ce.getManager(i).removeModel(u);const d=await o.save(c);return n&&!l&&await ce.getManager(i).removeModel(u),d.modelArtifactsInfo}async function he(){const e=ce.getSchemes(),t={};for(const n of e){const e=await ce.getManager(n).listModels();for(const r in e)t[n+le+r]=e[r]}return t}async function fe(e){const t=de(e);return ce.getManager(t.scheme).removeModel(t.path)}async function me(e,t){return pe(e,t,!1)}async function ge(e,t){return pe(e,t,!0)}var ye=n(9742);class xe{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&(0,m.OB)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,ye.j)(e)}}if((0,m.OB)().get("IS_BROWSER")){(0,m.OB)().setPlatform("browser",new xe);try{ce.registerManager(oe.URL_SCHEME,new ue)}catch(e){}try{ce.registerManager(X.URL_SCHEME,new K)}catch(e){}}let be;(0,m.OB)().get("IS_NODE")&&!(0,m.OB)().get("IS_BROWSER")&&(0,m.OB)().setPlatform("node",new class{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,m.OB)().global.fetch?(0,m.OB)().global.fetch(e,t):(null==be&&(be=n(5410)),be(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});var ve=n(2657),we=n(2271),Se=n(8723),ke=n(9798),Te=n(4077);(0,c.wv)();const Ie={buffer:ve.f,cast:we.p,clone:Se.d,print:ke.S};(0,Te.Vp)(Ie);var Ce=n(4368),Ne=n(6407),$e=n(1274),Ee=n(4841),_e=n(3261),Re=n(248),Ae=n(6577),Oe=n(633),De=n(9494);const Fe=new Map,Be=new Map;class Me{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Pe{constructor(){this.classNameMap={}}static getMap(){return null==Pe.instance&&(Pe.instance=new Pe),Pe.instance}static register(e){Pe.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Le(e,t,n){(0,b.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,b.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,b.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return Pe.register(e),Fe.set(r,e),Be.set(e,r),e}class Ve extends Me{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return(0,Ce.B9)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,Oe.pn)(e,t)}dispose(){null!=this.iterations_&&(0,Ce.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,De.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ve,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Ue=n(4006),ze=n(3453),We=n(827),Ge=n(6235),je=n(632);class He extends Ve{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=c.BV.registeredVariables[t];(0,Ce.lu)((()=>{const e=(0,Ne.I)((0,Ee.d)(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,Ce.Cn)((0,De.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}const Xe=[class extends Ve{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,Ce.lu)((()=>(0,Ae.P)(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,Ce.lu)((()=>(0,Ae.P)(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;(0,Ce.lu)((()=>{const e=(0,Ne.I)((0,Ee.d)(s,this.rho),(0,Ee.d)((0,Re.h)(a),1-this.rho)),t=(0,Ee.d)((0,$e.h)((0,_e._)((0,Ne.I)(o,this.epsilon)),(0,_e._)((0,Ne.I)(s,this.epsilon))),a),n=(0,Ne.I)((0,Ee.d)(o,this.rho),(0,Ee.d)((0,Re.h)(t),1-this.rho));s.assign(e),o.assign(n);const i=(0,Ne.I)((0,Ee.d)(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,Ce.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,Ce.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},class extends Ve{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,Ce.lu)((()=>(0,Ue.h)(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;(0,Ce.lu)((()=>{const e=(0,Ne.I)(s,(0,Re.h)(a));s.assign(e);const t=(0,Ne.I)((0,Ee.d)((0,$e.h)(a,(0,_e._)((0,Ne.I)(e,c.BV.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,Ce.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},class extends Ve{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,Ce.lu)((()=>{this.accBeta1=(0,De.i)(t).variable(),this.accBeta2=(0,De.i)(n).variable()})),null==r&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Ce.lu)((()=>{const n=(0,We.l)(1,this.accBeta1),r=(0,We.l)(1,this.accBeta2);t.forEach(((t,a)=>{const s=c.BV.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,Ce.lu)((()=>(0,Ae.P)(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:(0,Ce.lu)((()=>(0,Ae.P)(s).variable(!1)))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=(0,Ne.I)((0,Ee.d)(i,this.beta1),(0,Ee.d)(o,1-this.beta1)),d=(0,Ne.I)((0,Ee.d)(u,this.beta2),(0,Ee.d)((0,Re.h)(o),1-this.beta2)),p=(0,$e.h)(l,n),h=(0,$e.h)(d,r);i.assign(l),u.assign(d);const f=(0,Ne.I)((0,Ee.d)((0,$e.h)(p,(0,Ne.I)((0,_e._)(h),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign((0,Ee.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,Ee.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,Ce.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,Ce.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,Ce.lu)((()=>{this.accBeta1.assign((0,ze.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,ze.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},class extends Ve{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,Ce.lu)((()=>{this.iteration=(0,De.i)(0).variable(),this.accBeta1=(0,De.i)(t).variable()})),null==r&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Ce.lu)((()=>{const n=(0,We.l)(1,this.accBeta1),r=(0,$e.h)(-this.learningRate,(0,Ne.I)((0,Ee.d)(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=c.BV.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,Ae.P)(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:(0,Ae.P)(s).variable(!1)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=(0,Ne.I)((0,Ee.d)(i,this.beta1),(0,Ee.d)(o,1-this.beta1)),d=(0,Ee.d)(u,this.beta2),p=(0,Ge.W)(o),h=(0,je.g)(d,p);i.assign(l),u.assign(h);const f=(0,Ne.I)((0,Ee.d)((0,$e.h)(r,n),(0,$e.h)(l,(0,Ne.I)(h,this.epsilon))),s);s.assign(f)})),this.iteration.assign((0,Ne.I)(this.iteration,1)),this.accBeta1.assign((0,Ee.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,Ce.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,Ce.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},class extends He{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,De.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,Ce.lu)((()=>(0,Ae.P)(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,Ce.lu)((()=>{let e;const t=(0,Ne.I)((0,Ee.d)(this.m,a),s);e=this.useNesterov?(0,Ne.I)((0,Ee.d)(this.c,(0,Ne.I)(s,(0,Ee.d)(t,this.m))),r):(0,Ne.I)((0,Ee.d)(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,Ce.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},class extends Ve{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=c.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.BV.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,Ce.lu)((()=>(0,Ae.P)(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,Ce.lu)((()=>(0,Ae.P)(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,Ce.lu)((()=>(0,Ae.P)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,Ce.lu)((()=>{const e=(0,Ne.I)((0,Ee.d)(o,this.decay),(0,Ee.d)((0,Re.h)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=(0,Ne.I)((0,Ee.d)(t,this.decay),(0,Ee.d)(s,1-this.decay)),u=(0,$e.h)((0,Ee.d)(s,this.learningRate),(0,_e._)((0,We.l)(e,(0,Ne.I)((0,Re.h)(a),this.epsilon)))),l=(0,Ne.I)((0,Ee.d)(i,this.momentum),u);o.assign(e),t.assign(a),i.assign(l);const c=(0,We.l)(r,l);r.assign(c)}else{const e=(0,Ne.I)((0,Ee.d)(o,this.decay),(0,Ee.d)((0,Re.h)(s),1-this.decay)),t=(0,Ne.I)((0,Ee.d)(i,this.momentum),(0,$e.h)((0,Ee.d)(s,this.learningRate),(0,_e._)((0,Ne.I)(e,this.epsilon))));o.assign(e),i.assign(t);const n=(0,We.l)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,Ce.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,Ce.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,Ce.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},He];function qe(e){return new Promise((e=>setTimeout(e))).then(e)}class Ke{constructor(e){if(!(0,m.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ke.URL_SCHEME)&&(e=e.slice(Ke.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=S.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=R(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await qe((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await qe((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:D(e)}}}}Ke.URL_SCHEME="downloads://";class Ye{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=O(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>_(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=_(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Qe(e){return new Ye(e)}function Ze(e,t,n,r){!function(e){(0,b.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,b.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,b.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,b.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++a/e.length*(r-n);return t(o),s})),s))))}async function Je(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,m.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ze(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ze(a,t.onProgress,.5,1)}async function et(e,t="",n,r){return tt((e=>Je(e,{requestInit:r})))(e,t,n)}function tt(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=v[u]*b.NA(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),o[n]=!0)})):c(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),d={};let p=0;return u.forEach((e=>{const n=t[e].paths.length,r=new S(c.slice(p,p+n));s[e].forEach((e=>{const t=I(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)d[e]=t[e]})),p+=n})),d}}M.registerSaveRouter((e=>(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ke.URL_SCHEME)?function(e="model"){return new Ke(e)}(e.slice(Ke.URL_SCHEME.length)):null));class nt{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,b.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,m.OB)().platform.fetch,(0,b.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,b.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=R(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=S.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:D(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return O(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=F(e),o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(a+e+r);return this.weightUrlConverter&&o.push(...await Promise.all(i)),[s,await Je(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})]}}function rt(e){return null!=e.match(nt.URL_SCHEME_REGEX)}nt.URL_SCHEME_REGEX=/^https?:\/\//;const at=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>rt(e))):rt(e),n)return st(e,t)}return null};function st(e,t){return new nt(e,t)}function ot(e,t){return st(e,t)}M.registerSaveRouter(at),M.registerLoadRouter(at);class it{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class ut{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class lt{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function ct(e,t,n,r){return new lt(dt(...arguments))}function dt(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new it(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new it({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new it({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function pt(e){return new ut(e)}function ht(e){return new ut(e)}var ft=n(2200),mt=n(9121),gt=n(6151),yt=n(3740),xt=n(2668),bt=n(9906);let vt,wt=!1;function St(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(null!=(0,gt.pI)(mt.eBW,c.BV.backendName)){const n={pixels:e},r={numChannels:t};return c.BV.runKernel(mt.eBW,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let d,p;if(o)d=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)d=e.data;else if(s||a||i){if(null==vt)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");vt=new OffscreenCanvas(1,1).getContext("2d")}else vt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});vt.canvas.width=u,vt.canvas.height=l,vt.drawImage(e,0,0,u,l),d=vt.getImageData(0,0,u,l).data}if(4===t)p=new Int32Array(d);else{const e=u*l;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=d[4*n+e]}const h=[l,u,t];return(0,bt.w)(p,h,"int32")}async function kt(e,t=3){let n=null;if((0,m.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return St(n,t)}function Tt(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function It(e,t){let n=(0,yt._1)(e,"img","toPixels");if(!(e instanceof Te.es)){const e=n;n=(0,we.p)(e,"int32"),e.dispose()}Tt(n);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=o[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*i,t[1]=a*i,t[2]=a*i):t[r]=a*i}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){wt||null!=(0,gt.pI)(mt.hGc,c.BV.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),wt=!0),t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}function Ct(e,t,n){let r=(0,yt._1)(e,"img","draw");if(!(e instanceof Te.es)){const e=r;r=(0,we.p)(e,"int32"),e.dispose()}Tt(r),function(e){const t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);const a={image:r},s={canvas:t,options:n};c.BV.runKernel(mt.hGc,a,s)}const Nt=(0,xt.op)({fromPixels_:St}),$t=-2,Et=-1;function _t(e,t,n){const r=e.shape.length;b.hu(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),b.hu(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)b.hu(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function Rt(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function At(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Ot(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Dt(e,t,n){return n<=e?n:n-(t-1)}function Ft(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Bt(e,t,n,r,a,s,o,i,u){const l=e.length;let c=new Array(l),d=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=Mt(o,u,l,r,e),d=Pt(i,u,l,a,e),p=Ot(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=Vt(o,r,s,e,t,u),d[t]=Ut(i,a,s,e,t,u),p[t]=Lt(s,t,u);return{begin:c,end:d,strides:p}}function Mt(e,t,n,r,a){const s=[...a],o=Ft(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=0;else{const o=Dt(t,n,a);let i=r[o];e&1<<o&&(i=0),s[a]=i}return s}function Pt(e,t,n,r,a){const s=[...a],o=Ft(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const o=Dt(t,n,a);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),s[a]=i}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=b.uZ(0,s[e],a[e])}return s}function Lt(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Vt(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=b.uZ(0,o,u-1),o}function Ut(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=i>0?b.uZ(0,o,u):b.uZ(-1,o,u-1),o}function zt(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Wt(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Gt(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{b.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(b.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function jt(e,t,n,r,a,s,o,i,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=o&&0!=(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};for(let e=0;e<d.dims;e++)c&&0!=(1<<e&i)&&d.numAddAxisAfterEllipsis++,1<<e&o&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push($t),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Et),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,p);let h=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[p.beginMask&1<<t,p.endMask&1<<t],s=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const o=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=Ht(p.begin[t],0,p.strides[t],r,a,s),p.end[t]=Ht(p.end[t],1,p.strides[t],r,a,s);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;h=h&&e,f=f&&(0===t&&1===p.strides[t]||e)}else h=h&&1===p.strides[t]&&o,f=f&&(0===t&&1===p.strides[t]||o);let i,u=!1;if(p.beginValid&&p.endValid?(i=p.end[t]-p.begin[t],u=!0):n?(i=1,u=!0):o&&r>=0&&(i=p.strides[t]<0?-r:r,u=!0),u){let e;e=0===i||i<0!=p.strides[t]<0?0:Math.trunc(i/p.strides[t])+(i%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===$t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>p.finalShapeGatherIndices[t]!==$t)),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Ht(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var Xt=n(1221),qt=n(8038);const Kt="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Yt(){return new Promise((e=>Kt((()=>e()))))}var Qt=n(3591);function Zt(e,t){const n=e[0].length;e.forEach(((e,t)=>{b.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),b.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)b.hu(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Jt(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var en,tn=n(2582),nn=n(9323);function rn(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){const s=n[a],o=r[r.length-n.length+a],i=r[o];if(s>=0)if(i>=0){if(i!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${i}`)}else r[o]=s}return r}function an(e){const t={FIRST_DIM_SIZE:en.FIRST_DIM_SIZE,VALUE_ROWIDS:en.VALUE_ROWIDS,ROW_LENGTHS:en.ROW_LENGTHS,ROW_SPLITS:en.ROW_SPLITS,ROW_LIMITS:en.ROW_LIMITS,ROW_STARTS:en.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function sn(e){return 0===e.length?0:e[0]===en.FIRST_DIM_SIZE?e.length-1:e.length}function on(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){const n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(en||(en={}));const un=30;function ln(e){return e<=un?e:(0,b.jP)(e,Math.floor(Math.sqrt(e)))}function cn(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function dn(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function pn(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function hn(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function fn(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function mn(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}function gn(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,b.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let o=1;for(let e=0;e<a.length-1;++e)o*=a[e];const i=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=i[e],u.push(i[e]);const c=[...(0,b.e3)(e.shape).map((e=>e/l)),1].slice(0,s);return[u,o,l,c]}var yn=n(3028);const xn=1.7580993408473768,bn=1.0507009873554805,vn=.3275911,wn=.254829592,Sn=-.284496736,kn=1.421413741,Tn=-1.453152027,In=1.061405429;var Cn=n(4706);function Nn(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function $n(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function En(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function _n(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Rn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function An(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function On(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Dn(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Fn="->",Bn=/->/g,Mn=",",Pn="...";function Ln(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Bn,"").length)/Fn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Fn}").`);const[r,a]=e.split(Fn);(0,b.hu)(-1===r.indexOf(Pn),(()=>`The ellipsis notation ("${Pn}") is not supported yet.`));const s=r.split(Mn),o=s.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===i.indexOf(t)&&i.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===i.indexOf(t)&&t!==Mn&&i.push(t)}const u=new Array(s.length);for(let e=0;e<o;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(i.indexOf(s[e][t]))}const l=i.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:i,summedDims:c,idDims:u}}function Vn(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Un(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:(0,b.hu)(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function zn(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=Gn(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Wn(e){return e.every(((e,t)=>e===t))}function Gn(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function jn(e,t,n=0){let r=[];if("number"==typeof t)(0,b.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,b.hu)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}(0,b.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Hn(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Xn(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function qn(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Kn(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Yn(e,t){return`size ${e} must be non-negative, not ${t}`}function Qn(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Zn(e,t){return`Input to reshape is a SparseTensor with ${(0,b.NA)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,b.NA)(t)}. inputShape=${e} outputShape= ${t}`}function Jn(e,t){return`Input to reshape is a tensor with ${(0,b.NA)(e)} dense values, but the requested shape has ${(0,b.NA)(t)}. inputShape=${e} outputShape=${t}`}function er(){return"segment ids must be >= 0"}function tr(){return"segment ids are not increasing"}function nr(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function rr(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function ar(e,t){let n,r=!1;for(e<=un?(n=e,r=!0):n=(0,b.jP)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,b.jP)(e,n+1);return n}function sr(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function or(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const o=e.shape[n],i=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)i.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)i.push(t.shape[e]);for(let t=n+1;t<s;t++)i.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:i}}function ir(e){try{return e.map((e=>(0,w.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function ur(e){return e.map((e=>(0,w.encodeString)(e)))}var lr=n(3337),cr=n(8333),dr=n(8713);!function(){for(const e of Xe)Le(e)}()},9121:(e,t,n)=>{"use strict";n.d(t,{$HU:()=>ct,$g6:()=>Z,$w:()=>q,Acj:()=>me,BMI:()=>De,BiW:()=>it,Byc:()=>V,CAk:()=>Te,CQl:()=>ot,D2d:()=>Ut,DlI:()=>at,Eh3:()=>R,FKq:()=>At,G3Y:()=>tn,GBy:()=>Ot,Gcp:()=>Bt,HEU:()=>ee,HZH:()=>pt,Hhh:()=>Ae,Hmb:()=>ft,IKK:()=>l,IMb:()=>v,J$2:()=>Se,J_u:()=>xe,JhU:()=>y,L8s:()=>Ft,M2y:()=>p,MIZ:()=>Qt,MRv:()=>Rt,MZg:()=>_e,NEP:()=>re,NZg:()=>je,O3z:()=>Mt,OAf:()=>Me,OR:()=>le,OU7:()=>Pe,OV7:()=>Be,Omj:()=>te,Oyi:()=>m,PYm:()=>$e,PhF:()=>Tt,QCc:()=>g,QRR:()=>W,Qg5:()=>ye,QiL:()=>et,Qvg:()=>an,RFZ:()=>C,ROF:()=>x,RQH:()=>Nt,RuY:()=>sn,SIB:()=>St,SX0:()=>J,SYM:()=>r,SbG:()=>yt,SpW:()=>s,T0n:()=>G,TQc:()=>Dt,TR1:()=>L,ToN:()=>rn,Tr8:()=>Kt,Uyb:()=>ue,VGw:()=>a,Vbg:()=>Ge,VcC:()=>z,VfG:()=>Ee,W0H:()=>Qe,XLW:()=>w,XkS:()=>qt,Xze:()=>i,Y0y:()=>se,YFo:()=>ae,YoZ:()=>Oe,ZbH:()=>Ce,ZjV:()=>Vt,Zz9:()=>E,_JP:()=>Ht,_V0:()=>dn,_Yw:()=>mt,_k9:()=>b,_tC:()=>zt,a5O:()=>_t,aJk:()=>d,avt:()=>be,b9H:()=>ln,bK0:()=>Wt,bV0:()=>vt,c17:()=>Ue,cWu:()=>Jt,cie:()=>j,cye:()=>Ye,dDz:()=>st,deh:()=>ie,dpD:()=>ht,e07:()=>bt,e0R:()=>Gt,e6w:()=>ut,e7N:()=>Ie,eBW:()=>un,eEB:()=>I,eZ0:()=>Re,gJX:()=>N,h8e:()=>on,hCO:()=>T,hGc:()=>Y,hdR:()=>ne,i5y:()=>Et,iHb:()=>U,iJz:()=>ge,iWB:()=>ve,iZT:()=>fe,ik2:()=>M,jMg:()=>f,jQk:()=>jt,jQs:()=>We,jeX:()=>ce,kU:()=>Ne,kpP:()=>nn,kuV:()=>Xe,luS:()=>pn,lyA:()=>tt,mKl:()=>xt,mTV:()=>Fe,mc4:()=>P,mhS:()=>A,mm_:()=>o,n9L:()=>Zt,nhH:()=>Pt,nr8:()=>kt,o0g:()=>rt,o2y:()=>B,oFR:()=>It,oHH:()=>Q,oT6:()=>u,p2w:()=>Ct,p4S:()=>K,pe_:()=>nt,q1x:()=>he,q2K:()=>Ve,q8u:()=>ze,qWM:()=>Ze,qi_:()=>pe,qkr:()=>dt,qw7:()=>h,r7n:()=>we,s1s:()=>Xt,sEM:()=>Yt,sHE:()=>de,sJF:()=>c,sL$:()=>H,usg:()=>cn,uv1:()=>Ke,vFR:()=>Le,vtC:()=>ke,vwp:()=>oe,w3H:()=>Lt,wUP:()=>O,wYB:()=>$t,wYn:()=>He,we_:()=>Je,wm:()=>D,wx7:()=>en,x12:()=>F,xJR:()=>lt,xQA:()=>wt,xnO:()=>$,y7R:()=>X,yQU:()=>qe,yj2:()=>_,zbQ:()=>gt,zvY:()=>k,zws:()=>S});const r="Abs",a="Acos",s="Acosh",o="Add",i="AddN",u="All",l="Any",c="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",x="AvgPoolGrad",b="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",S="BatchToSpaceND",k="Bincount",T="BitwiseAnd",I="BroadcastArgs",C="Cast",N="Ceil",$="ClipByValue",E="Complex",_="ComplexAbs",R="Concat",A="Conv2D",O="Conv2DBackpropFilter",D="Conv2DBackpropInput",F="Conv3D",B="Conv3DBackpropFilterV2",M="Conv3DBackpropInputV2",P="Cos",L="Cosh",V="Cumprod",U="Cumsum",z="CropAndResize",W="DenseBincount",G="DepthToSpace",j="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",X="DepthwiseConv2dNativeBackpropInput",q="Diag",K="Dilation2D",Y="Draw",Q="RealDiv",Z="Einsum",J="Elu",ee="EluGrad",te="Erf",ne="Equal",re="Exp",ae="ExpandDims",se="Expm1",oe="FFT",ie="Fill",ue="FlipLeftRight",le="Floor",ce="FloorDiv",de="FusedBatchNorm",pe="GatherV2",he="GatherNd",fe="Greater",me="GreaterEqual",ge="Identity",ye="IFFT",xe="Imag",be="IsFinite",ve="IsInf",we="IsNan",Se="LeakyRelu",ke="Less",Te="LessEqual",Ie="LinSpace",Ce="Log",Ne="Log1p",$e="LogicalAnd",Ee="LogicalNot",_e="LogicalOr",Re="LRN",Ae="LRNGrad",Oe="Max",De="Maximum",Fe="MaxPool",Be="MaxPoolGrad",Me="MaxPool3D",Pe="MaxPool3DGrad",Le="MaxPoolWithArgmax",Ve="Mean",Ue="Min",ze="Minimum",We="MirrorPad",Ge="Mod",je="Multinomial",He="Multiply",Xe="Neg",qe="NotEqual",Ke="NonMaxSuppressionV3",Ye="NonMaxSuppressionV4",Qe="NonMaxSuppressionV5",Ze="OnesLike",Je="OneHot",et="Pack",tt="PadV2",nt="Pow",rt="Prelu",at="Prod",st="RaggedGather",ot="RaggedRange",it="RaggedTensorToTensor",ut="Range",lt="Real",ct="Reciprocal",dt="Relu",pt="Reshape",ht="ResizeNearestNeighbor",ft="ResizeNearestNeighborGrad",mt="ResizeBilinear",gt="ResizeBilinearGrad",yt="Relu6",xt="Reverse",bt="Round",vt="Rsqrt",wt="ScatterNd",St="TensorScatterUpdate",kt="SearchSorted",Tt="Select",It="Selu",Ct="Slice",Nt="Sin",$t="Sinh",Et="Sign",_t="Sigmoid",Rt="Softplus",At="Sqrt",Ot="Sum",Dt="SpaceToBatchND",Ft="SplitV",Bt="Softmax",Mt="SparseFillEmptyRows",Pt="SparseReshape",Lt="SparseSegmentMean",Vt="SparseSegmentSum",Ut="SparseToDense",zt="SquaredDifference",Wt="Square",Gt="StaticRegexReplace",jt="StridedSlice",Ht="StringNGrams",Xt="StringSplit",qt="StringToHashBucketFast",Kt="Sub",Yt="Tan",Qt="Tanh",Zt="Tile",Jt="TopK",en="Transform",tn="Transpose",nn="Unique",rn="Unpack",an="UnsortedSegmentSum",sn="ZerosLike",on="Step",un="FromPixels",ln="RotateWithOffset",cn="_FusedMatMul",dn="FusedConv2D",pn="FusedDepthwiseConv2D"},6151:(e,t,n)=>{"use strict";n.d(t,{pI:()=>i,tr:()=>l,uk:()=>u,wC:()=>c});var r=n(5938),a=n(4706);const s=(0,r.R)("kernelRegistry",(()=>new Map)),o=(0,r.R)("gradRegistry",(()=>new Map));function i(e,t){const n=d(e,t);return s.get(n)}function u(e){return o.get(e)}function l(e){const t=s.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function c(e){const{kernelName:t,backendName:n}=e,r=d(t,n);s.has(r)&&a.Z(`The kernel '${t}' for backend '${n}' is already registered`),s.set(r,e)}function d(e,t){return`${t}_${e}`}},4706:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a,c:()=>s});var r=n(2885);function a(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.warn(...e)}function s(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.log(...e)}},6235:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({abs_:function(e){const t=(0,s._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.BV.runKernel(a.yj2,e)}{const e={x:t};return r.BV.runKernel(a.SYM,e)}}})},6407:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(7097),a=n(9121),s=n(747),o=n(3740);const i=(0,n(2668).op)({add_:function(e,t){let n=(0,o._1)(e,"a","add"),i=(0,o._1)(t,"b","add");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.mm_,u)}})},3591:(e,t,n)=>{"use strict";n.d(t,{LJ:()=>c,Q3:()=>l,Vh:()=>s,YB:()=>a,kz:()=>o,lB:()=>u,rv:()=>i,sY:()=>d});var r=n(569);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}function o(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function i(e,t){return s(e,t.map((e=>1)),t)}function u(e,t,n){r.hu(a(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},2200:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function s(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];null==s&&(s=1);let o=t[t.length-a-1];if(null==o&&(o=1),1===s)r[n-a-1]=o;else if(1===o)r[n-a-1]=s;else{if(s!==o)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-a-1]=s}}return r}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>s,getBroadcastDims:()=>r,getReductionAxes:()=>a})},2657:(e,t,n)=>{"use strict";n.d(t,{f:()=>s});var r=n(4077),a=n(569);function s(e,t="float32",n){return t=t||"float32",a.Mu(e),new r.YD(e,t,n)}},2271:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({cast_:function(e,t){const n=(0,s._1)(e,"x","cast");if(!o.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},u={dtype:t};return r.BV.runKernel(a.RFZ,i,u)}})},8723:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({clone_:function(e){const t={x:(0,s._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(a.iJz,t)}})},1661:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({complex_:function(e,t){const n=(0,s._1)(e,"real","complex"),i=(0,s._1)(t,"imag","complex");o.k5(n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const u={real:n,imag:i};return r.BV.runKernel(a.Zz9,u)}})},2582:(e,t,n)=>{"use strict";n.d(t,{I0:()=>f,Ix:()=>i,Rf:()=>a,U3:()=>g,Xw:()=>s,aO:()=>l,jT:()=>m,jw:()=>u,m:()=>x,pl:()=>o,sl:()=>y});var r=n(569);function a(e,t,n,r,a="NHWC",s){return i(e,[...t,e[3]],n,s,r,null,null,y(a))}function s(e,t,n,r,a,s,o="channelsLast"){const[u,l]=c(t);let d;if("channelsLast"===o)d=[u,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);d=[u,l,e[1],e[1]]}return i(e,d,n,r,a,s,!1,o)}function o(e,t,n,r,a,s,o="NDHWC"){const[i,l,c]=d(t);let p,h;if("NDHWC"===o)h="channelsLast",p=[i,l,c,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",p=[i,l,c,e[1],e[1]]}return u(e,p,n,r,a,!1,h,s)}function i(e,t,n,r,a,s,o=!1,i="channelsLast"){let[u,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===i)[u,d,f,m]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,m,d,f]=e}const[g,y,,x]=t,[b,v]=c(n),[w,S]=c(r),k=p(g,w),T=p(y,S),{padInfo:I,outHeight:C,outWidth:N}=function(e,t,n,r,a,s,o,i,u){let c,d,p;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=l(e,t,n));const s=e[1];return[h((e[0]-t+2*r)/n+1,a),h((s-t+2*r)/n+1,a)]}([t,n],s,r,e,i);d=a[0],p=a[1]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),i=Math.max(0,(p-1)*a+o-n),u=Math.floor(e/2),l=e-u,h=Math.floor(i/2);c={top:u,bottom:l,left:h,right:i-h,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),p=Math.ceil((n-o+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const l="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];c={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},d=h((t-s+l+f)/r+1,i),p=h((n-o+m+g)/a+1,i)}}return{padInfo:c,outHeight:d,outWidth:p}}(a,d,f,b,v,k,T,s,i),$=o?x*m:x;let E;return"channelsFirst"===i?E=[u,$,C,N]:"channelsLast"===i&&(E=[u,C,N,$]),{batchSize:u,dataFormat:i,inHeight:d,inWidth:f,inChannels:m,outHeight:C,outWidth:N,outChannels:$,padInfo:I,strideHeight:b,strideWidth:v,filterHeight:g,filterWidth:y,effectiveFilterHeight:k,effectiveFilterWidth:T,dilationHeight:w,dilationWidth:S,inShape:e,outShape:E,filterShape:t}}function u(e,t,n,r,a,s=!1,o="channelsLast",i){let[u,c,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,c,f,m,g]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,g,c,f,m]=e}const[y,x,b,,v]=t,[w,S,k]=d(n),[T,I,C]=d(r),N=p(y,T),$=p(x,I),E=p(b,C),{padInfo:_,outDepth:R,outHeight:A,outWidth:O}=function(e,t,n,r,a,s,o,i,u,c,d){let p,f,m,g;if("valid"===e&&(e=0),"number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,r,a,s){null==a&&(a=l(e,t[0],r[0]));const o=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*a>=t[n]&&(o[n]=h((e[n]-t[n]+2*a)/r[n]+1,s));return o}([t,n,r,1],[i,u,c],0,[a,s,o],e,d);f=y[0],m=y[1],g=y[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{f=Math.ceil(t/a),m=Math.ceil(n/s),g=Math.ceil(r/o);const e=(f-1)*a+i-t,l=(m-1)*s+u-n,d=(g-1)*o+c-r,h=Math.floor(e/2),y=e-h,x=Math.floor(l/2),b=l-x,v=Math.floor(d/2);p={top:x,bottom:b,left:v,right:d-v,front:h,back:y,type:"SAME"}}}return{padInfo:p,outDepth:f,outHeight:m,outWidth:g}}(a,c,f,m,w,S,k,N,$,E,i),D=s?v*g:v;let F;return"channelsFirst"===o?F=[u,D,R,A,O]:"channelsLast"===o&&(F=[u,R,A,O,D]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:f,inWidth:m,inChannels:g,outDepth:R,outHeight:A,outWidth:O,outChannels:D,padInfo:_,strideDepth:w,strideHeight:S,strideWidth:k,filterDepth:y,filterHeight:x,filterWidth:b,effectiveFilterDepth:N,effectiveFilterHeight:$,effectiveFilterWidth:E,dilationDepth:T,dilationHeight:I,dilationWidth:C,inShape:e,outShape:F,filterShape:t}}function l(e,t,n,r=1){const a=p(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function c(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"==typeof e?[e,e,e]:e}function p(e,t){return t<=1?e:e+(e-1)*(t-1)}function h(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){return c(e).every((e=>e>0))}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function x(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},1274:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var r=n(7097),a=n(9121),s=n(747),o=n(3740),i=n(9165);const u=(0,n(2668).op)({div_:function(e,t){let n=(0,o._1)(e,"a","div"),u=(0,o._1)(t,"b","div");if([n,u]=(0,s.T_)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,i.q)(n,u);const l={a:n,b:u};return r.BV.runKernel(a.oHH,l,{})}})},3233:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({elu_:function(e){const t={x:(0,s._1)(e,"x","elu","float32")};return r.BV.runKernel(a.SX0,t)}})},4006:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var r=n(7097),a=n(9121),s=n(569);function o(e,t,n){(0,s.Mu)(e);const o={shape:e,value:t,dtype:n=n||(0,s.D2)(t)};return r.BV.runKernel(a.deh,{},o)}},9165:(e,t,n)=>{"use strict";n.d(t,{q:()=>i});var r=n(7097),a=n(9121),s=n(747),o=n(3740);const i=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,o._1)(e,"a","floorDiv"),i=(0,o._1)(t,"b","floorDiv");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.jeX,u)}})},9323:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>f,QH:()=>g,pf:()=>m,uy:()=>y});var r=n(2200),a=n(3233),s=n(9133),o=n(4841),i=n(8151),u=n(7409),l=n(3582),c=n(4968),d=n(625),p=n(1901),h=n(5475);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,o.d)(e,(0,p.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const a=r.getReductionAxes(e.shape,t.shape);return a.length>0&&(n=(0,h.S)(n,a)),(0,c.X)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,a.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,i.A)(e,n);if("leakyrelu"===t)return(0,s.h)(e,r);if("sigmoid"===t)return(0,d.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},9133:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,s._1)(e,"x","leakyRelu")},o={alpha:t};return r.BV.runKernel(a.J$2,n,o)}})},632:(e,t,n)=>{"use strict";n.d(t,{g:()=>l});var r=n(7097),a=n(9121),s=n(747),o=n(3740),i=n(2200),u=n(2271);const l=(0,n(2668).op)({maximum_:function(e,t){let n=(0,o._1)(e,"a","maximum"),l=(0,o._1)(t,"b","maximum");[n,l]=(0,s.T_)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(a.BMI,c)}})},4841:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(7097),a=n(9121),s=n(747),o=n(3740);const i=(0,n(2668).op)({mul_:function(e,t){let n=(0,o._1)(e,"a","mul"),i=(0,o._1)(t,"b","mul");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.wYn,u)}})},2668:(e,t,n)=>{"use strict";n.d(t,{op:()=>o,z:()=>s});var r=n(7097),a=n(569);const s="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const i=(...e)=>{r.BV.startScope(n);try{const t=o(...e);return(0,a.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(e){throw r.BV.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},8038:(e,t,n)=>{"use strict";n.d(t,{zvA:()=>u.z,WnP:()=>a.W,Khb:()=>l,__u:()=>c,IHx:()=>d.I,QBD:()=>h,$6P:()=>f,YjB:()=>m,NqF:()=>g,vHJ:()=>y,ZRM:()=>x,VfV:()=>b,z4N:()=>v,fvJ:()=>S,C80:()=>k,wS1:()=>N,uR5:()=>$,zEQ:()=>B,tgs:()=>P,Dxk:()=>L,JY5:()=>V,p3b:()=>U,E4h:()=>M,yE8:()=>z,ycw:()=>W,anm:()=>ur,XsQ:()=>G,UFq:()=>j,f3b:()=>H.f,pju:()=>T.p,mDi:()=>X,iUl:()=>K,d9v:()=>E.d,PYB:()=>Y.P,zoF:()=>_,gME:()=>Q,Izb:()=>Z,MNy:()=>J,ZaL:()=>ee,PAt:()=>ne,Tek:()=>te,bc:()=>ae,pdZ:()=>se,$QV:()=>ie,mCk:()=>ue,f9Y:()=>le,mew:()=>yr,$Gn:()=>ce,zbp:()=>de,ppE:()=>pe,nTT:()=>he,B10:()=>fe,Ka3:()=>me,WmZ:()=>ge,hiC:()=>ye.h,NTj:()=>Se,AKD:()=>ke,rvX:()=>mr,WYO:()=>Te,pyx:()=>Ie.p,GRh:()=>gr,EDe:()=>Ce,DgJ:()=>be,qNN:()=>Ne,d2q:()=>Pe,Qqt:()=>Le,dt4:()=>Ve,t$B:()=>Ue,iyy:()=>We,kp_:()=>An,hlL:()=>q.h,GWj:()=>Ge,qPi:()=>je.q,imm:()=>r,Iqj:()=>He,dbB:()=>fr,pjt:()=>Xe,brS:()=>qe,Sxn:()=>On,asL:()=>Ke,BHj:()=>oa,V3u:()=>xr,wx0:()=>Dn,xVT:()=>Ye,UWc:()=>Qe,i2d:()=>Ze,hi7:()=>Je.h,d9m:()=>et,zN1:()=>tt,$r2:()=>ia,SX3:()=>nt,G9k:()=>rt,cM7:()=>at,Krr:()=>st,e_t:()=>lt,CmS:()=>dt,l_t:()=>pt,HvI:()=>ht,hJK:()=>ft,K5V:()=>mt,egP:()=>gt,MB5:()=>ua,eab:()=>bt,OI3:()=>R,Fp7:()=>Ee,_sB:()=>vt,YQQ:()=>wt,Ip$:()=>St,gWQ:()=>kt.g,J69:()=>Tt,ry_:()=>$t,VV$:()=>_e,LTh:()=>Et,VdP:()=>_t,wQq:()=>Rt,Gi7:()=>At,p_:()=>dr,dC7:()=>A.d,rq4:()=>Ot,SJ_:()=>Dt,W76:()=>it,KOy:()=>Me,Quu:()=>Ft,lfX:()=>Bt,iUs:()=>Ct,JpU:()=>Mt,op:()=>u.op,N2O:()=>Pt,vku:()=>Lt,pNR:()=>Vt,koy:()=>Ut,t1L:()=>zt,lGY:()=>Wt,d_R:()=>jt,sQ3:()=>Re.s,AL3:()=>Ht.A,S0v:()=>Xt.S,WVs:()=>qt,$gW:()=>Kt,VT$:()=>Yt,N89:()=>Qt,TN_:()=>Zt,wzB:()=>rn,nGf:()=>an,ruB:()=>sn,LGj:()=>on,pe5:()=>un,w6H:()=>ln,kwC:()=>cn,M25:()=>dn,UYe:()=>pn.U,btT:()=>hn.b,XLQ:()=>C.X,GYS:()=>fn,SDf:()=>mn,diP:()=>gn,sx7:()=>yn,mG2:()=>xn,QEs:()=>Bn,NMM:()=>bn,bp0:()=>vn,iD$:()=>Ae.i,snQ:()=>pr,zcT:()=>xt,U8D:()=>wn,U_I:()=>Sn,ODp:()=>kn,XD2:()=>O.X,Xxe:()=>Tn,tdS:()=>sa,O$l:()=>In,R_K:()=>Cn,tPi:()=>D,jZU:()=>Nn,SmN:()=>$n,CnO:()=>En,p0P:()=>_n,XAC:()=>Rn,Wvh:()=>ut,fBT:()=>Gt,rVs:()=>la,ers:()=>hr,uN7:()=>aa,Vl2:()=>Fn,_b3:()=>Oe._,h62:()=>De.h,$i:()=>Mn,L9e:()=>Pn,knu:()=>Ln,Nbs:()=>Vn.N,NXj:()=>Un,Z_8:()=>ca,luU:()=>ct.l,Smz:()=>Fe.S,ORZ:()=>zn,AEp:()=>F,XeE:()=>Wn.X,RRF:()=>jn,odF:()=>Hn,wOQ:()=>Xn.w,yXz:()=>qn,Bfx:()=>Kn,xZs:()=>Yn,Pg0:()=>Zn,Gg6:()=>ze,hg7:()=>Jn,p4s:()=>cr,Xu6:()=>er,Two:()=>tr,pUJ:()=>nr,HHK:()=>rr,GaM:()=>ar,VD$:()=>sr,arb:()=>ve,itS:()=>ir,lls:()=>It,P84:()=>we.P});var r={};n.r(r),n.d(r,{conv2d:()=>wr,depthwiseConv2d:()=>Tr,matMul:()=>Ir});var a=n(6235),s=n(7097),o=n(9121),i=n(3740),u=n(2668);const l=(0,u.op)({acos_:function(e){const t={x:(0,i._1)(e,"x","acos")};return s.BV.runKernel(o.VGw,t)}}),c=(0,u.op)({acosh_:function(e){const t={x:(0,i._1)(e,"x","acosh")};return s.BV.runKernel(o.SpW,t)}});var d=n(6407),p=n(569);const h=(0,u.op)({addN_:function(e){p.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),p.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,i._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!p.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return s.BV.runKernel(o.Xze,r)}}),f=(0,u.op)({all_:function(e,t=null,n=!1){const r={x:(0,i._1)(e,"x","all","bool")},a={axis:t,keepDims:n};return s.BV.runKernel(o.oT6,r,a)}}),m=(0,u.op)({any_:function(e,t=null,n=!1){const r={x:(0,i._1)(e,"x","any","bool")},a={axis:t,keepDims:n};return s.BV.runKernel(o.IKK,r,a)}}),g=(0,u.op)({argMax_:function(e,t=0){const n={x:(0,i._1)(e,"x","argMax")},r={axis:t};return s.BV.runKernel(o.sJF,n,r)}}),y=(0,u.op)({argMin_:function(e,t=0){const n={x:(0,i._1)(e,"x","argMin")},r={axis:t};return s.BV.runKernel(o.aJk,n,r)}}),x=(0,u.op)({asin_:function(e){const t={x:(0,i._1)(e,"x","asin")};return s.BV.runKernel(o.M2y,t)}}),b=(0,u.op)({asinh_:function(e){const t={x:(0,i._1)(e,"x","asinh")};return s.BV.runKernel(o.qw7,t)}}),v=(0,u.op)({atan_:function(e){const t={x:(0,i._1)(e,"x","atan")};return s.BV.runKernel(o.jMg,t)}});var w=n(747);const S=(0,u.op)({atan2_:function(e,t){let n=(0,i._1)(e,"a","atan2"),r=(0,i._1)(t,"b","atan2");[n,r]=(0,w.T_)(n,r);const a={a:n,b:r};return s.BV.runKernel(o.QCc,a)}}),k=(0,u.op)({atanh_:function(e){const t={x:(0,i._1)(e,"x","atanh")};return s.BV.runKernel(o.Oyi,t)}});var T=n(2271),I=n(2582),C=n(4968);const N=(0,u.op)({avgPool_:function(e,t,n,r,a){const u=(0,i._1)(e,"x","avgPool","float32");p.hu(I.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let l=u,c=!1;3===u.rank&&(c=!0,l=(0,C.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]])),p.hu(4===l.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`)),I.m("avgPool",r,a);const d={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let f=s.BV.runKernel(o.JhU,d,h);return f=(0,T.p)(f,u.dtype),c?(0,C.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),$=(0,u.op)({avgPool3d_:function(e,t,n,r,a,u="NDHWC"){const l=(0,i._1)(e,"x","avgPool3d","float32");let c=l,d=!1;4===l.rank&&(d=!0,c=(0,C.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),p.hu(5===c.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${c.rank}.`)),p.hu("NDHWC"===u,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${u}`)),p.hu("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),(0,I.m)("avgPool3d",r,a);const h={x:c},f={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:u};let m=s.BV.runKernel(o._k9,h,f);return m=(0,T.p)(m,c.dtype),d?(0,C.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var E=n(8723);const _=(0,u.op)({concat_:function(e,t=0){(0,p.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,i.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,E.d)(n[0]);const r=n,a={axis:t};return s.BV.runKernel(o.Eh3,r,a)}}),R=(0,u.op)({matMul_:function(e,t,n=!1,r=!1){let a=(0,i._1)(e,"a","matMul"),u=(0,i._1)(t,"b","matMul");[a,u]=(0,w.T_)(a,u);const l={a,b:u},c={transposeA:n,transposeB:r};return s.BV.runKernel(o.XLW,l,c)}});var A=n(4841),O=n(625);const D=(0,u.op)({slice_:function(e,t,n){const r=(0,i._1)(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},u={begin:t,size:n};return s.BV.runKernel(o.p2w,a,u)}}),F=(0,u.op)({tanh_:function(e){const t={x:(0,i._1)(e,"x","tanh","float32")};return s.BV.runKernel(o.MIZ,t)}}),B=(0,u.op)({basicLSTMCell_:function(e,t,n,r,a,s){const o=(0,i._1)(e,"forgetBias","basicLSTMCell"),u=(0,i._1)(t,"lstmKernel","basicLSTMCell"),l=(0,i._1)(n,"lstmBias","basicLSTMCell"),c=(0,i._1)(r,"data","basicLSTMCell"),p=(0,i._1)(a,"c","basicLSTMCell"),h=(0,i._1)(s,"h","basicLSTMCell"),f=_([c,h],1),m=R(f,u),g=(0,d.I)(m,l),y=g.shape[0],x=g.shape[1]/4,b=[y,x],v=D(g,[0,0],b),w=D(g,[0,x],b),S=D(g,[0,2*x],b),k=D(g,[0,3*x],b),T=(0,d.I)((0,A.d)((0,O.X)(v),F(w)),(0,A.d)(p,(0,O.X)((0,d.I)(o,S))));return[T,(0,A.d)(F(T),(0,O.X)(k))]}}),M=(0,u.op)({batchToSpaceND_:function(e,t,n){const r=(0,i._1)(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));p.hu(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),p.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),p.hu(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const u={x:r},l={blockShape:t,crops:n};return s.BV.runKernel(o.zws,u,l)}}),P=(0,u.op)({batchNorm_:function(e,t,n,r,a,u){null==u&&(u=.001);const l=(0,i._1)(e,"x","batchNorm"),c=(0,i._1)(t,"mean","batchNorm"),d=(0,i._1)(n,"variance","batchNorm");let h,f;null!=a&&(h=(0,i._1)(a,"scale","batchNorm")),null!=r&&(f=(0,i._1)(r,"offset","batchNorm")),p.hu(c.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p.hu(null==f||c.rank===f.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p.hu(null==h||c.rank===h.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const m={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,C.X)(e,[1,1,1,e.size]):2===e.rank?(0,C.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,C.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(l),scale:h,offset:f,mean:c,variance:d},g={varianceEpsilon:u},y=s.BV.runKernel(o.sHE,m,g);return(0,C.X)(y,l.shape)}}),L=(0,u.op)({batchNorm2d_:function(e,t,n,r,a,s){const o=(0,i._1)(e,"x","batchNorm"),u=(0,i._1)(t,"mean","batchNorm"),l=(0,i._1)(n,"variance","batchNorm");let c,d;return null!=a&&(c=(0,i._1)(a,"scale","batchNorm")),null!=r&&(d=(0,i._1)(r,"offset","batchNorm")),p.hu(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),p.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),p.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&p.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=d&&p.hu(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`)),P(o,u,l,d,c,s)}}),V=(0,u.op)({batchNorm3d_:function(e,t,n,r,a,s){const o=(0,i._1)(e,"x","batchNorm"),u=(0,i._1)(t,"mean","batchNorm"),l=(0,i._1)(n,"variance","batchNorm");let c,d;return null!=a&&(c=(0,i._1)(a,"scale","batchNorm")),null!=r&&(d=(0,i._1)(r,"offset","batchNorm")),p.hu(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),p.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),p.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&p.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=d&&p.hu(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`)),P(o,u,l,d,c,s)}}),U=(0,u.op)({batchNorm4d_:function(e,t,n,r,a,s){const o=(0,i._1)(e,"x","batchNorm"),u=(0,i._1)(t,"mean","batchNorm"),l=(0,i._1)(n,"variance","batchNorm");let c,d;return null!=a&&(c=(0,i._1)(a,"scale","batchNorm")),null!=r&&(d=(0,i._1)(r,"offset","batchNorm")),p.hu(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),p.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),p.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&p.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=d&&p.hu(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`)),P(o,u,l,d,c,s)}}),z=(0,u.op)({bincount_:function(e,t,n){const r=(0,i._1)(e,"x","bincount"),a=(0,i._1)(t,"weights","bincount");p.hu("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),p.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),p.hu(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const u={x:r,weights:a},l={size:n};return s.BV.runKernel(o.zvY,u,l)}}),W=(0,u.op)({bitwiseAnd_:function(e,t){const n=(0,i._1)(e,"x","bitwiseAnd"),r=(0,i._1)(t,"y","bitwiseAnd");if(!(0,p.cO)(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const a={a:n,b:r};return s.BV.runKernel(o.hCO,a)}}),G=(0,u.op)({broadcastArgs_:function(e,t){const n=(0,i._1)(e,"s0","broadcastArgs","int32"),r=(0,i._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return s.BV.runKernel(o.eEB,a)}}),j=(0,u.op)({broadcastTo_:function(e,t){let n=(0,i._1)(e,"broadcastTo","x");const r=n.shape;if((0,p.Mu)(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,C.X)(n,e)}const a=n.shape,u=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])u[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===u.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,E.d)(n);const l={x:n},c={reps:u};return s.BV.runKernel(o.n9L,l,c)}});var H=n(2657);const X=(0,u.op)({ceil_:function(e){const t={x:(0,i._1)(e,"x","ceil","float32")};return s.BV.runKernel(o.gJX,t)}});var q=n(4006);const K=(0,u.op)({clipByValue_:function(e,t,n){const r=(0,i._1)(e,"x","clipByValue");if(p.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return(0,q.h)(r.shape,t,r.dtype);const a={x:r},u={clipValueMin:t,clipValueMax:n};return s.BV.runKernel(o.xnO,a,u)}});var Y=n(1661);const Q=(0,u.op)({concat1d_:function(e){return _(e,0)}}),Z=(0,u.op)({concat2d_:function(e,t){return _(e,t)}}),J=(0,u.op)({concat3d_:function(e,t){return _(e,t)}}),ee=(0,u.op)({concat4d_:function(e,t){return _(e,t)}}),te=(0,u.op)({conv2d_:function(e,t,n,r,a="NHWC",u=[1,1],l){const c=(0,i._1)(e,"x","conv2d","float32"),d=(0,i._1)(t,"filter","conv2d","float32");let h=c,f=!1;3===c.rank&&(f=!0,h=(0,C.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),p.hu(4===h.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${h.rank}.`)),p.hu(4===d.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${d.rank}.`)),I.m("conv2d",r,l);const m="NHWC"===a?h.shape[3]:h.shape[1];p.hu(m===d.shape[2],(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),p.hu(I.jT(n,u),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`)),p.hu(I.U3(u),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),p.hu(I.U3(n),(()=>"Error in conv2D: Strides should be larger than 0."));const g={x:h,filter:d},y={strides:n,pad:r,dataFormat:a,dilations:u,dimRoundingMode:l},x=s.BV.runKernel(o.mhS,g,y);return f?(0,C.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),ne=(0,u.op)({conv1d_:function(e,t,n,r,a="NWC",s=1,o){const u=(0,i._1)(e,"x","conv1d"),l=(0,i._1)(t,"filter","conv1d");let c=u,d=!1;2===u.rank&&(d=!0,c=(0,C.X)(u,[1,u.shape[0],u.shape[1]])),p.hu(3===c.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`)),p.hu(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),I.m("conv1d",r,o),p.hu(c.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),p.hu(I.jT(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),p.hu(I.U3(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),p.hu(I.U3(n),(()=>"Error in conv1D: Stride should be larger than 0.")),p.hu("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const h=(0,C.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]),f=(0,C.X)(c,[c.shape[0],1,c.shape[1],c.shape[2]]),m=te(f,h,[1,n],r,"NHWC",[1,s],o);return d?(0,C.X)(m,[m.shape[2],m.shape[3]]):(0,C.X)(m,[m.shape[0],m.shape[2],m.shape[3]])}}),re=(0,u.op)({conv2DBackpropInput_:function(e,t,n,r,a,i="NHWC",u){p.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,c=t,d=!1;3===t.rank&&(d=!0,c=(0,C.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,e[0],e[1],e[2]]),p.hu(4===l.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`)),p.hu(4===c.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`)),p.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const h="NHWC"===i?l[3]:l[1],f="NHWC"===i?c.shape[3]:c.shape[1];p.hu(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),p.hu(f===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${f}) must match output depth for filter ${n.shape[3]}.`)),I.m("conv2dDerInput",a,u);const m={dy:c,filter:n},g={strides:r,pad:a,dataFormat:i,dimRoundingMode:u,inputShape:l},y=s.BV.runKernel(o.wm,m,g);return d?(0,C.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}}),ae=(0,u.op)({conv2dTranspose_:function(e,t,n,r,a,s){const o=(0,i._1)(e,"x","conv2dTranspose"),u=(0,i._1)(t,"filter","conv2dTranspose");return re(n,o,u,r,a,"NHWC",s)}}),se=(0,u.op)({conv3d_:function(e,t,n,r,a="NDHWC",u=[1,1,1]){const l=(0,i._1)(e,"x","conv3d"),c=(0,i._1)(t,"filter","conv3d");let d=l,h=!1;4===l.rank&&(h=!0,d=(0,C.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),p.hu(5===d.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${d.rank}.`)),p.hu(5===c.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${c.rank}.`)),p.hu(d.shape[4]===c.shape[3],(()=>`Error in conv3d: depth of input (${d.shape[4]}) must match input depth for filter ${c.shape[3]}.`)),p.hu((0,I.jT)(n,u),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`)),p.hu("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`)),p.hu((0,I.U3)(u),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),p.hu((0,I.U3)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f={x:d,filter:c},m={strides:n,pad:r,dataFormat:a,dilations:u},g=s.BV.runKernel(o.x12,f,m);return h?(0,C.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),oe=(0,u.op)({conv3DBackpropInput_:function(e,t,n,r,a){p.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,u=t,l=!1;4===t.rank&&(l=!0,u=(0,C.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const c=i[4],d=u.shape[4];p.hu(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),p.hu(5===u.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${u.rank}`)),p.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),p.hu(c===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[3]}.`)),p.hu(d===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[4]}.`));const h={dy:u,filter:n},f={pad:a,strides:r,inputShape:i},m=s.BV.runKernel(o.ik2,h,f);return l?(0,C.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),ie=(0,u.op)({conv3dTranspose_:function(e,t,n,r,a){const s=(0,i._1)(e,"x","conv3dTranspose"),o=(0,i._1)(t,"filter","conv3dTranspose");return oe(n,s,o,r,a)}}),ue=(0,u.op)({cos_:function(e){const t={x:(0,i._1)(e,"x","cos","float32")};return s.BV.runKernel(o.mc4,t)}}),le=(0,u.op)({cosh_:function(e){const t={x:(0,i._1)(e,"x","cosh","float32")};return s.BV.runKernel(o.TR1,t)}}),ce=(0,u.op)({cumprod_:function(e,t=0,n=!1,r=!1){const a={x:(0,i._1)(e,"x","cumprod")},u={axis:t,exclusive:n,reverse:r};return s.BV.runKernel(o.Byc,a,u)}}),de=(0,u.op)({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:(0,i._1)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:r};return s.BV.runKernel(o.iHb,a,u)}}),pe=(0,u.op)({denseBincount_:function(e,t,n,r=!1){const a=(0,i._1)(e,"x","denseBincount"),u=(0,i._1)(t,"weights","denseBincount");p.hu("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),p.hu(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),p.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),p.hu(u.size===a.size||0===u.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${u.shape}.`));const l={x:a,weights:u},c={size:n,binaryOutput:r};return s.BV.runKernel(o.QRR,l,c)}}),he=(0,u.op)({depthToSpace_:function(e,t,n="NHWC"){const r=(0,i._1)(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],u="NHWC"===n?r.shape[2]:r.shape[3],l="NHWC"===n?r.shape[3]:r.shape[1];p.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),p.hu(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),p.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),p.hu(l%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${l} for depthToSpace with input shape ${r.shape}`));const c={x:r},d={blockSize:t,dataFormat:n};return s.BV.runKernel(o.T0n,c,d)}}),fe=(0,u.op)({depthwiseConv2d_:function(e,t,n,r,a="NHWC",u=[1,1],l){const c=(0,i._1)(e,"x","depthwiseConv2d","float32"),d=(0,i._1)(t,"filter","depthwiseConv2d","float32");let h=c,f=!1;3===c.rank&&(f=!0,h=(0,C.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),p.hu(4===h.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),p.hu(4===d.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`));const m="NHWC"===a?h.shape[3]:h.shape[1];p.hu(m===d.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${m}) must match the inChannels dimension in filter ${d.shape[2]}.`)),I.m("depthwiseConv2d",r,l);const g={x:h,filter:d},y={strides:n,pad:r,dataFormat:a,dilations:u,dimRoundingMode:l},x=s.BV.runKernel(o.cie,g,y);return f?(0,C.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),me=(0,u.op)({diag_:function(e){const t={x:(0,i._1)(e,"x","diag")};return s.BV.runKernel(o.$w,t)}}),ge=(0,u.op)({dilation2d_:function(e,t,n,r,a=[1,1],u="NHWC"){const l=(0,i._1)(e,"x","dilation2d"),c=(0,i._1)(t,"filter","dilation2d");p.hu(3===l.rank||4===l.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${l.rank}.`)),p.hu(3===c.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${c.rank}.`)),p.hu("NHWC"===u,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${u}`));let d=l,h=!1;3===l.rank&&(d=(0,C.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=!0),p.hu(d.shape[3]===c.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${d.shape[3]} vs ${c.shape[2]}`));const f={x:d,filter:c},m={strides:n,pad:r,dilations:a},g=s.BV.runKernel(o.p4S,f,m);return h?(0,C.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});var ye=n(1274),xe=n(2200);const be=(0,u.op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal","string_or_numeric"),r=(0,i._1)(t,"b","equal","string_or_numeric");[n,r]=(0,w.T_)(n,r),(0,xe.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return s.BV.runKernel(o.hdR,a)}}),ve=(0,u.op)({where_:function(e,t,n){const r=(0,i._1)(t,"a","where"),a=(0,i._1)(n,"b","where"),u=(0,i._1)(e,"condition","where","bool"),l=(0,xe.assertAndGetBroadcastShape)((0,xe.assertAndGetBroadcastShape)(u.shape,r.shape),a.shape),c={condition:j(u,l),t:j(r,l),e:j(a,l)};return s.BV.runKernel(o.PhF,c)}});var we=n(6577);const Se=(0,u.op)({divNoNan_:function(e,t){let n=(0,i._1)(e,"a","div"),r=(0,i._1)(t,"b","div");[n,r]=(0,w.T_)(n,r);const a=(0,ye.h)(n,r),s=(0,we.P)(a),o=be(r,s);return ve(o,s,a)}}),ke=(0,u.op)({dot_:function(e,t){const n=(0,i._1)(e,"t1","dot"),r=(0,i._1)(t,"t2","dot");p.hu(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(p.hu(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=(0,C.X)(n,[1,-1]),t=(0,C.X)(r,[-1,1]),a=R(e,t);return(0,C.X)(a,[])}if(1===n.rank&&2===r.rank){const e=(0,C.X)(n,[1,-1]),t=(0,C.X)(r,[r.shape[0],r.shape[1]]),a=R(e,t);return(0,C.X)(a,[a.size])}if(2===n.rank&&1===r.rank){const e=(0,C.X)(r,[-1,1]),t=R(n,e);return(0,C.X)(t,[t.size])}{const e=(0,C.X)(r,[r.shape[0],r.shape[1]]);return R(n,e)}}}),Te=(0,u.op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,i._1)(e,`tensors${t}`,"einsum"))),r={equation:e};return s.BV.runKernel(o.$g6,n,r)}});var Ie=n(3233);const Ce=(0,u.op)({ensureShape_:function(e,t){const n=(0,i._1)(e,"x","ensureShape","string_or_numeric");if(!(0,p.DK)(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),Ne=(0,u.op)({erf_:function(e){let t=(0,i._1)(e,"x","erf");p.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,T.p)(t,"float32"));const n={x:t};return s.BV.runKernel(o.Omj,n)}});var $e=n(3591);const Ee=(0,u.op)({max_:function(e,t=null,n=!1){const r={x:(0,i._1)(e,"x","max")},a={reductionIndices:t,keepDims:n};return s.BV.runKernel(o.YoZ,r,a)}}),_e=(0,u.op)({min_:function(e,t=null,n=!1){const r={x:(0,i._1)(e,"x","min")},a={axis:t,keepDims:n};return s.BV.runKernel(o.c17,r,a)}});var Re=n(3453),Ae=n(9494),Oe=n(3261),De=n(248),Fe=n(5475);function Be(e,t,n=null){if(0===e.rank)return(0,a.W)(e);if(1!==e.rank&&null===n)return Be((0,C.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,Fe.S)((0,a.W)(e),n);if(t===1/0)return Ee((0,a.W)(e),n);if(t===-1/0)return _e((0,a.W)(e),n);if("euclidean"===t||2===t)return(0,Oe._)((0,Fe.S)((0,Re.s)((0,a.W)(e),(0,Ae.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Ee((0,Fe.S)((0,a.W)(e),n[0]),n[1]-1);if(t===1/0)return Ee((0,Fe.S)((0,a.W)(e),n[1]),n[0]);if(t===-1/0)return _e((0,Fe.S)((0,a.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,Oe._)((0,Fe.S)((0,De.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Me=(0,u.op)({norm_:function(e,t="euclidean",n=null,r=!1){const a=Be(e=(0,i._1)(e,"x","norm"),t,n);let s=a.shape;if(r){const t=(0,p.EC)(n,e.shape);s=$e.rv(a.shape,t)}return(0,C.X)(a,s)}}),Pe=(0,u.op)({euclideanNorm_:function(e,t=null,n=!1){return Me(e,"euclidean",t,n)}}),Le=(0,u.op)({exp_:function(e){const t={x:(0,i._1)(e,"x","exp")};return s.BV.runKernel(o.NEP,t)}}),Ve=(0,u.op)({expandDims_:function(e,t=0){const n=(0,i._1)(e,"x","expandDims","string_or_numeric");p.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return s.BV.runKernel(o.YFo,r,a)}}),Ue=(0,u.op)({expm1_:function(e){const t={x:(0,i._1)(e,"x","expm1")};return s.BV.runKernel(o.Y0y,t)}}),ze=(0,u.op)({tile_:function(e,t){const n=(0,i._1)(e,"x","tile","string_or_numeric");p.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return s.BV.runKernel(o.n9L,r,a)}}),We=(0,u.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=(0,H.f)([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const o=(0,C.X)(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return ze(Ve(o,0),[n[0],1,1]);if(2===n.length)return ze(Ve(Ve(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return ze(Ve(Ve(Ve(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Ge=(0,u.op)({floor_:function(e){const t={x:(0,i._1)(e,"x","floor","float32")};return s.BV.runKernel(o.OR,t)}});var je=n(9165);const He=(0,u.op)({gather_:function(e,t,n=0,r=0){const a={x:(0,i._1)(e,"x","gather"),indices:(0,i._1)(t,"indices","gather","int32")},u={axis:n,batchDims:r};return s.BV.runKernel(o.qi_,a,u)}}),Xe=(0,u.op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater","string_or_numeric"),r=(0,i._1)(t,"b","greater","string_or_numeric");[n,r]=(0,w.T_)(n,r),(0,xe.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return s.BV.runKernel(o.iZT,a)}}),qe=(0,u.op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual","string_or_numeric"),r=(0,i._1)(t,"b","greaterEqual","string_or_numeric");[n,r]=(0,w.T_)(n,r),(0,xe.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return s.BV.runKernel(o.Acj,a)}}),Ke=(0,u.op)({imag_:function(e){const t={input:(0,i._1)(e,"input","imag")};return s.BV.runKernel(o.J_u,t)}}),Ye=(0,u.op)({isFinite_:function(e){const t={x:(0,i._1)(e,"x","isFinite")};return s.BV.runKernel(o.avt,t)}}),Qe=(0,u.op)({isInf_:function(e){const t={x:(0,i._1)(e,"x","isInf")};return s.BV.runKernel(o.iWB,t)}}),Ze=(0,u.op)({isNaN_:function(e){const t={x:(0,i._1)(e,"x","isNaN")};return s.BV.runKernel(o.r7n,t)}});var Je=n(9133);const et=(0,u.op)({less_:function(e,t){let n=(0,i._1)(e,"a","less","string_or_numeric"),r=(0,i._1)(t,"b","less","string_or_numeric");[n,r]=(0,w.T_)(n,r),(0,xe.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return s.BV.runKernel(o.vtC,a)}}),tt=(0,u.op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual","string_or_numeric"),r=(0,i._1)(t,"b","lessEqual","string_or_numeric");[n,r]=(0,w.T_)(n,r),(0,xe.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return s.BV.runKernel(o.CAk,a)}});function nt(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return s.BV.runKernel(o.e7N,{},r)}const rt=(0,u.op)({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const u=(0,i._1)(e,"x","localResponseNormalization");p.hu(4===u.rank||3===u.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${u.rank}.`)),p.hu(p.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let l=u,c=!1;3===u.rank&&(c=!0,l=(0,C.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const d={x:l},h={depthRadius:t,bias:n,alpha:r,beta:a},f=s.BV.runKernel(o.eZ0,d,h);return c?(0,C.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),at=(0,u.op)({log_:function(e){const t={x:(0,i._1)(e,"x","log","float32")};return s.BV.runKernel(o.ZbH,t)}}),st=(0,u.op)({log1p_:function(e){const t={x:(0,i._1)(e,"x","log1p")};return s.BV.runKernel(o.kU,t)}});var ot=n(633);const it=(0,u.op)({neg_:function(e){const t={x:(0,i._1)(e,"x","neg")};return s.BV.runKernel(o.kuV,t)}}),ut=(0,u.op)({softplus_:function(e){const t={x:(0,i._1)(e,"x","softplus")};return s.BV.runKernel(o.MRv,t)}}),lt=(0,u.op)({logSigmoid_:function(e){const t=(0,i._1)(e,"x","logSigmoid");return(0,ot.cb)((e=>({value:it(ut(it(e))),gradFunc:t=>(0,A.d)(t,(0,O.X)(it(e)))})))(t)}});var ct=n(827);const dt=(0,u.op)({logSoftmax_:function(e,t=-1){const n=(0,i._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=(0,ot.cb)(((e,n)=>{const r=Ee(e,t,!0),a=(0,ct.l)(e,r),s=(0,ct.l)((0,T.p)(a,"float32"),at((0,Fe.S)(Le(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=Le(r);return(0,ct.l)(e,(0,A.d)((0,Fe.S)(e,t,!0),a))}}}));return r(n)}}),pt=(0,u.op)({logSumExp_:function(e,t=null,n=!1){const r=(0,i._1)(e,"x","logSumExp"),a=(0,p.EC)(t,r.shape),s=Ee(r,a,!0),o=(0,ct.l)(r,s),u=Le(o),l=(0,Fe.S)(u,a),c=at(l),h=(0,d.I)((0,C.X)(s,c.shape),c);if(n){const e=(0,$e.rv)(h.shape,a);return(0,C.X)(h,e)}return h}}),ht=(0,u.op)({logicalAnd_:function(e,t){const n=(0,i._1)(e,"a","logicalAnd","bool"),r=(0,i._1)(t,"b","logicalAnd","bool");(0,xe.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return s.BV.runKernel(o.PYm,a)}}),ft=(0,u.op)({logicalNot_:function(e){const t={x:(0,i._1)(e,"x","logicalNot","bool")};return s.BV.runKernel(o.VfG,t)}}),mt=(0,u.op)({logicalOr_:function(e,t){const n=(0,i._1)(e,"a","logicalOr","bool"),r=(0,i._1)(t,"b","logicalOr","bool");(0,xe.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return s.BV.runKernel(o.MZg,a)}}),gt=(0,u.op)({logicalXor_:function(e,t){const n=(0,i._1)(e,"a","logicalXor","bool"),r=(0,i._1)(t,"b","logicalXor","bool");return(0,xe.assertAndGetBroadcastShape)(n.shape,r.shape),ht(mt(e,t),ft(ht(e,t)))}}),yt=2147483648,xt=(0,u.op)({searchSorted_:function(e,t,n="left"){const r=(0,i._1)(e,"sortedSequence","searchSorted"),a=(0,i._1)(t,"values","searchSorted"),u=r.shape[r.shape.length-1],l=a.shape[a.shape.length-1],c=(0,C.X)(r,[-1,u]),d=(0,C.X)(a,[-1,l]);if(c.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(c.shape[0]!==d.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,p.NA)(d.shape)>=yt)throw new Error("values tensor size must less than 2147483648");if(c.shape[1]>=yt)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${c.shape[1]}`);const h={sortedSequence:c,values:d},f={side:n};return s.BV.runKernel(o.nr8,h,f)}});function bt(e,t){return xt(e,t,"left")}const vt=(0,u.op)({maxPool_:function(e,t,n,r,a){const u=(0,i._1)(e,"x","maxPool");let l=u,c=!1;3===u.rank&&(c=!0,l=(0,C.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]])),p.hu(4===l.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`)),p.hu(I.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),I.m("maxPool",r,a);const d={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a},f=s.BV.runKernel(o.mTV,d,h);return c?(0,C.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),wt=(0,u.op)({maxPool3d_:function(e,t=[1,1,1],n,r,a,u="NDHWC"){const l=(0,i._1)(e,"x","maxPool3d");let c=l,d=!1;4===l.rank&&(d=!0,c=(0,C.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),p.hu(5===c.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${c.rank}.`)),p.hu("NDHWC"===u,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${u}`)),(0,I.m)("maxPool3d",r,a);const h={x:c},f={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:u},m=s.BV.runKernel(o.OAf,h,f);return d?(0,C.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),St=(0,u.op)({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const u={x:(0,i._1)(e,"x","maxPoolWithArgmax")},l={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},c=s.BV.runKernel(o.vFR,u,l);return{result:c[0],indexes:c[1]}}});var kt=n(632);const Tt=(0,u.op)({mean_:function(e,t=null,n=!1){const r={x:(0,i._1)(e,"x","mean")},a={axis:t,keepDims:n};return s.BV.runKernel(o.q2K,r,a)}});function It(e,t="float32"){if((0,p.Mu)(e),"complex64"===t){const t=It(e,"float32"),n=It(e,"float32");return(0,Y.P)(t,n)}const n=(0,p.wT)((0,p.NA)(e),t);return s.BV.makeTensor(n,e,t)}function Ct(e,t="float32"){if((0,p.Mu)(e),"complex64"===t){const t=Ct(e,"float32"),n=It(e,"float32");return(0,Y.P)(t,n)}const n=(0,p.p8)((0,p.NA)(e),t);return s.BV.makeTensor(n,e,t)}var Nt=n(4077);function $t(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,i._1)(e,"x","meshgrid",e instanceof Nt.es?e.dtype:"float32");if(void 0===t)return[r];let a=(0,i._1)(t,"y","meshgrid",t instanceof Nt.es?t.dtype:"float32");const s=(0,p.NA)(r.shape),o=(0,p.NA)(a.shape);return"xy"===n?(r=(0,C.X)(r,[1,-1]),a=(0,C.X)(a,[-1,1]),[R(Ct([o,1],r.dtype),r),R(a,Ct([1,s],a.dtype))]):(r=(0,C.X)(r,[-1,1]),a=(0,C.X)(a,[1,-1]),[R(r,Ct([1,o],r.dtype)),R(Ct([s,1],a.dtype),a)])}const Et=(0,u.op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),r=(0,i._1)(t,"b","minimum");[n,r]=(0,w.T_)(n,r),"bool"===n.dtype&&(n=(0,T.p)(n,"int32"),r=(0,T.p)(r,"int32")),(0,xe.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return s.BV.runKernel(o.q8u,a)}}),_t=(0,u.op)({mirrorPad_:function(e,t,n){p.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=(0,i._1)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");p.hu(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)p.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),p.hu(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const u={paddings:t,mode:n},l={x:r};return s.BV.runKernel(o.jQs,l,u)}}),Rt=(0,u.op)({mod_:function(e,t){let n=(0,i._1)(e,"a","mod"),r=(0,i._1)(t,"b","mod");[n,r]=(0,w.T_)(n,r);const a={a:n,b:r};return s.BV.runKernel(o.Vbg,a)}}),At=(0,u.op)({moments_:function(e,t=null,n=!1){e=(0,i._1)(e,"x","moments");const r=(0,p.EC)(t,e.shape),a=Tt(e,r,n);let s=a.shape;n||(s=(0,$e.rv)(a.shape,r));const o=(0,De.h)((0,ct.l)((0,T.p)(e,"float32"),(0,C.X)(a,s)));return{mean:a,variance:Tt(o,r,n)}}}),Ot=(0,u.op)({multiRNNCell_:function(e,t,n,r){const a=(0,i._1)(t,"data","multiRNNCell"),s=(0,i.sI)(n,"c","multiRNNCell"),o=(0,i.sI)(r,"h","multiRNNCell");let u=a;const l=[];for(let t=0;t<e.length;t++){const n=e[t](u,s[t],o[t]);l.push(n[0]),l.push(n[1]),u=n[1]}const c=[],d=[];for(let e=0;e<l.length;e+=2)c.push(l[e]),d.push(l[e+1]);return[c,d]}}),Dt=(0,u.op)({multinomial_:function(e,t,n,r=!1){const a=(0,i._1)(e,"logits","multinomial"),u=a.size,l=a.rank;if(u<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${u}.`);if(l>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${l}`);n=n||Math.random();const c={logits:1===l?(0,C.X)(a,[1,-1]):a},d={numSamples:t,seed:n,normalized:r},p=s.BV.runKernel(o.NZg,c,d);return 1===l?(0,C.X)(p,[p.size]):p}}),Ft=(0,u.op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual","string_or_numeric"),r=(0,i._1)(t,"b","notEqual","string_or_numeric");[n,r]=(0,w.T_)(n,r),(0,xe.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return s.BV.runKernel(o.yQU,a)}}),Bt=(0,u.op)({oneHot_:function(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const u={indices:(0,i._1)(e,"indices","oneHot","int32")},l={dtype:a,depth:t,onValue:n,offValue:r};return s.BV.runKernel(o.we_,u,l)}}),Mt=(0,u.op)({onesLike_:function(e){const t={x:(0,i._1)(e,"x","onesLike")};return s.BV.runKernel(o.qWM,t)}}),Pt=(0,u.op)({outerProduct_:function(e,t){const n=(0,i._1)(e,"v1","outerProduct"),r=(0,i._1)(t,"v2","outerProduct");p.hu(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=(0,C.X)(n,[-1,1]),s=(0,C.X)(r,[1,-1]);return R(a,s)}}),Lt=(0,u.op)({pad_:function(e,t,n=0){const r=(0,i._1)(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},u={x:r};return s.BV.runKernel(o.lyA,u,a)}}),Vt=(0,u.op)({pad1d_:function(e,t,n=0){return(0,p.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Lt(e,[t],n)}}),Ut=(0,u.op)({pad2d_:function(e,t,n=0){return(0,p.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Lt(e,t,n)}}),zt=(0,u.op)({pad3d_:function(e,t,n=0){return(0,p.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Lt(e,t,n)}}),Wt=(0,u.op)({pad4d_:function(e,t,n=0){return(0,p.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Lt(e,t,n)}}),Gt=(0,u.op)({spaceToBatchND_:function(e,t,n){const r=(0,i._1)(e,"x","spaceToBatchND");p.hu(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),p.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),p.hu(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},u={blockShape:t,paddings:n};return s.BV.runKernel(o.TQc,a,u)}}),jt=(0,u.op)({pool_:function(e,t,n,r,a,s,o){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const u=(0,i._1)(e,"x","maxPool");let l=u,c=!1;3===u.rank&&(c=!0,l=(0,C.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]])),p.hu(I.jT(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const d=I.Xw(l.shape,t,s,a,r),h=[d.dilationHeight,d.dilationWidth];let f;f="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([d.filterHeight,d.filterWidth],h):[[0,0],[0,0]];const m=1===h[0]&&1===h[1],[g,y]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=a.map(((e,t)=>e+o[t]));return[t.map(((e,t)=>[r[t],i[t]])),t.map(((e,t)=>[0,o[t]]))]}([d.inHeight,d.inWidth],h,f),x=m?r:"valid",b=m?l:Gt(l,h,g),v=("avg"===n?()=>N(b,t,s,x,o):()=>vt(b,t,s,x,o))(),w=m?v:M(v,h,y);return c?(0,C.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});var Ht=n(8151),Xt=n(9798);const qt=(0,u.op)({prod_:function(e,t=null,n=!1){let r=(0,i._1)(e,"x","prod");"bool"===r.dtype&&(r=(0,T.p)(r,"int32"));const a={x:r},u={axis:t,keepDims:n};return s.BV.runKernel(o.DlI,a,u)}}),Kt=(0,u.op)({raggedGather_:function(e,t,n,r){const a={paramsNestedSplits:e.map(((e,t)=>(0,i._1)(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:(0,i._1)(t,"paramsDenseValues","raggedGather"),indices:(0,i._1)(n,"indices","raggedGather","int32")},u={outputRaggedRank:r},l=s.BV.runKernel(o.dDz,a,u);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}}),Yt=(0,u.op)({raggedRange_:function(e,t,n){const r=(0,i._1)(e,"starts","raggedRange"),a={starts:r,limits:(0,i._1)(t,"limits","raggedRange",r.dtype),deltas:(0,i._1)(n,"deltas","raggedRange",r.dtype)},u=s.BV.runKernel(o.CQl,a);return{rtNestedSplits:u[0],rtDenseValues:u[1]}}}),Qt=(0,u.op)({raggedTensorToTensor_:function(e,t,n,r,a){const u=(0,i._1)(e,"shape","raggedTensorToTensor","int32"),l=(0,i._1)(t,"values","raggedTensorToTensor"),c={shape:u,values:l,defaultValue:(0,i._1)(n,"defaultValue","raggedTensorToTensor",l.dtype),rowPartitionTensors:r.map(((e,t)=>(0,i._1)(e,`tensors${t}`,"raggedTensorToTensor","int32")))},d={rowPartitionTypes:a};return s.BV.runKernel(o.BiW,c,d)}}),Zt=(0,u.op)({rand_:function(e,t,n){(0,p.Mu)(e);const r=(0,p.NA)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return s.BV.makeTensor(a,e,n)}});var Jt=n(6377);class en{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=Jt.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class tn{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=Jt.alea(a.toString()),this.randn=new en(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class nn{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Jt.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const rn=(0,u.op)({randomGamma_:function(e,t,n=1,r="float32",a){if((0,p.Mu)(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new tn(t,n,r,a),o=(0,H.f)(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),an=(0,u.op)({randomNormal_:function(e,t=0,n=1,r,a){if((0,p.Mu)(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new en(t,n,r,!1,a),o=(0,H.f)(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),sn=(0,u.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return an(e,0,1,t,n)}}),on=(0,u.op)({randomUniform_:function(e,t=0,n=1,r="float32",a){(0,p.Mu)(e);const s=(0,H.f)(e,r),o=new nn(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=o.nextValue();return s.toTensor()}}),un=(0,u.op)({randomUniformInt_:function(e,t,n,r){return on(e,t,n,"int32",r)}});function ln(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return s.BV.runKernel(o.e6w,{},a)}const cn=(0,u.op)({real_:function(e){const t={input:(0,i._1)(e,"input","real")};return s.BV.runKernel(o.xJR,t)}}),dn=(0,u.op)({reciprocal_:function(e){const t={x:(0,i._1)(e,"x","reciprocal")};return s.BV.runKernel(o.$HU,t)}});var pn=n(7409),hn=n(3582);const fn=(0,u.op)({reverse_:function(e,t){const n={x:(0,i._1)(e,"x","reverse")},r={dims:t};return s.BV.runKernel(o.mKl,n,r)}}),mn=(0,u.op)({reverse1d_:function(e){const t=(0,i._1)(e,"x","reverse");return p.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),fn(t,0)}}),gn=(0,u.op)({reverse2d_:function(e,t){const n=(0,i._1)(e,"x","reverse");return p.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),fn(n,t)}}),yn=(0,u.op)({reverse3d_:function(e,t){const n=(0,i._1)(e,"x","reverse");return p.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),fn(n,t)}}),xn=(0,u.op)({reverse4d_:function(e,t){const n=(0,i._1)(e,"x","reverse");return p.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),fn(n,t)}}),bn=(0,u.op)({round_:function(e){const t={x:(0,i._1)(e,"x","round")};return s.BV.runKernel(o.e07,t)}}),vn=(0,u.op)({rsqrt_:function(e){const t={x:(0,i._1)(e,"x","rsqrt","float32")};return s.BV.runKernel(o.bV0,t)}}),wn=(0,u.op)({selu_:function(e){const t={x:(0,i._1)(e,"x","selu")};return s.BV.runKernel(o.oFR,t)}}),Sn=(0,u.op)({separableConv2d_:function(e,t,n,r,a,s=[1,1],o="NHWC"){const u=(0,i._1)(e,"x","separableConv2d"),l=(0,i._1)(t,"depthwiseFilter","separableConv2d"),c=(0,i._1)(n,"pointwiseFilter","separableConv2d");let d=u,h=!1;if(3===u.rank&&(h=!0,d=(0,C.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");p.hu(4===d.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`)),p.hu(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),p.hu(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),p.hu(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),p.hu(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const f=l.shape[2],m=l.shape[3];p.hu(c.shape[2]===f*m,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${f*m}, but got ${c.shape[2]}.`));const g=fe(d,l,r,a,o,s),y=te(g,c,1,"valid",o);return h?(0,C.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}}),kn=async function(e,t){const n=(0,i._1)(e,"x","setdiff1d"),r=(0,i._1)(t,"y","setdiff1d");p.hu(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),p.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),p.hu(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),o=new Set(s);let u=0;for(let e=0;e<a.length;e++)o.has(a[e])||u++;const l=new Nt.YD([u],n.dtype),c=new Nt.YD([u],"int32");for(let e=0,t=0;e<a.length;e++)o.has(a[e])||(l.values[t]=a[e],c.values[t]=e,t++);return[l.toTensor(),c.toTensor()]},Tn=(0,u.op)({sign_:function(e){const t={x:(0,i._1)(e,"x","sign")};return s.BV.runKernel(o.i5y,t)}}),In=(0,u.op)({sin_:function(e){const t={x:(0,i._1)(e,"x","sin","float32")};return s.BV.runKernel(o.RQH,t)}}),Cn=(0,u.op)({sinh_:function(e){const t={x:(0,i._1)(e,"x","sinh")};return s.BV.runKernel(o.wYB,t)}}),Nn=(0,u.op)({slice1d_:function(e,t,n){const r=(0,i._1)(e,"x","slice1d");return p.hu(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),D(r,[t],[n])}}),$n=(0,u.op)({slice2d_:function(e,t,n){const r=(0,i._1)(e,"x","slice2d");return p.hu(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),D(r,t,n)}}),En=(0,u.op)({slice3d_:function(e,t,n){const r=(0,i._1)(e,"x","slice3d");return p.hu(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),D(r,t,n)}}),_n=(0,u.op)({slice4d_:function(e,t,n){const r=(0,i._1)(e,"x","slice4d");return p.hu(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),D(r,t,n)}}),Rn=(0,u.op)({softmax_:function(e,t=-1){const n=(0,i._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return s.BV.runKernel(o.Gcp,r,a)}}),An=(0,u.op)({fft_:function(e){(0,p.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return s.BV.runKernel(o.vwp,t)}}),On=(0,u.op)({ifft_:function(e){(0,p.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return s.BV.runKernel(o.Qg5,t)}}),Dn=(0,u.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=(0,C.X)(e,[n,t]);r=On(a)}else{const a=[n,2*(t-1)],s=(0,C.X)(cn(e),[n,t]),o=(0,C.X)(Ke(e),[n,t]),i=fn(D(s,[0,1],[n,t-2]),1),u=(0,A.d)(fn(D(o,[0,1],[n,t-2]),1),(0,Ae.i)(-1)),l=_([s,i],1),c=_([o,u],1),d=(0,C.X)((0,Y.P)(l,c),[a[0],a[1]]);r=On(d)}if(r=cn(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=(0,C.X)(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Fn=(0,u.op)({split_:function(e,t,n=0){const r={x:(0,i._1)(e,"x","split")},a={numOrSizeSplits:t,axis:n};return s.BV.runKernel(o.L8s,r,a)}}),Bn=(0,u.op)({rfft_:function(e,t){(0,p.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=D(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=_([e,It(r)],e.shape.length-1),n=t}else a=e;const s=(0,we.P)(a),o=(0,C.X)((0,Y.P)(a,s),[r,n]),i=An(o),u=Math.floor(n/2)+1,l=cn(i),c=Ke(i),d=Fn(l,[u,n-u],l.shape.length-1),h=Fn(c,[u,n-u],c.shape.length-1),f=a.shape.slice();return f[a.shape.length-1]=u,(0,C.X)((0,Y.P)(d[0],h[0]),f)}}),Mn=(0,u.op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),r=(0,i._1)(t,"b","squaredDifference");[n,r]=(0,w.T_)(n,r),(0,xe.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return s.BV.runKernel(o._tC,a,{})}}),Pn=(0,u.op)({squeeze_:function(e,t){const n=(0,i._1)(e,"x","squeeze","string_or_numeric");return(0,C.X)(n,(0,p.bp)(n.shape,t).newShape)}}),Ln=(0,u.op)({stack_:function(e,t=0){const n=(0,i.sI)(e,"tensors","stack","string_or_numeric");p.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&p.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return s.BV.runKernel(o.QiL,r,a)}});var Vn=n(1901);const Un=(0,u.op)({stridedSlice_:function(e,t,n,r,a=0,u=0,l=0,c=0,d=0){const p={x:(0,i._1)(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:r,beginMask:a,endMask:u,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:d};return s.BV.runKernel(o.jQk,p,h)}}),zn=(0,u.op)({tan_:function(e){const t={x:(0,i._1)(e,"x","tan","float32")};return s.BV.runKernel(o.sEM,t)}});var Wn=n(701),Gn=n(7852);function jn(e,t){(0,p.Cq)(e);const n=(0,i.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,Gn.H)(e,null,n,t)}function Hn(e,t,n){if((0,p.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,i.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Gn.H)(e,t,r,n)}var Xn=n(9906);function qn(e,t,n){if((0,p.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,i.C)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,Gn.H)(e,t,r,n)}function Kn(e,t,n){if((0,p.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,i.C)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,Gn.H)(e,t,r,n)}function Yn(e,t,n){if((0,p.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,i.C)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,Gn.H)(e,t,r,n)}var Qn=n(3028);const Zn=(0,u.op)({tensorScatterUpdate_:function(e,t,n){const r=(0,i._1)(e,"tensor","tensorScatterupdate"),a=(0,i._1)(t,"indices","tensorScatterupdate","int32"),u=(0,i._1)(n,"updates","tensorScatterupdate");if(Qn.b0(u,a,r.shape),r.dtype!==u.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${u.dtype}.`);const l={tensor:r,indices:a,updates:u};return s.BV.runKernel(o.SIB,l,{})}}),Jn=(0,u.op)({topk_:function(e,t=1,n=!0){const r=(0,i._1)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const u={x:r},l={k:t,sorted:n},[c,d]=s.BV.runKernel(o.cWu,u,l);return{values:c,indices:d}}}),er=(0,u.op)({truncatedNormal_:function(e,t=0,n=1,r,a){if((0,p.Mu)(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new en(t,n,r,!0,a),o=(0,H.f)(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),tr=(0,u.op)({unique_:function(e,t=0){const n=(0,i._1)(e,"x","unique","string_or_numeric");(0,p.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[u,l]=s.BV.runKernel(o.kpP,r,a);return{values:u,indices:l}}}),nr=(0,u.op)({unsortedSegmentSum_:function(e,t,n){const r=(0,i._1)(e,"x","unsortedSegmentSum"),a=(0,i._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,p.hu)((0,p.GN)(n),(()=>"numSegments must be of dtype int"));const u={x:r,segmentIds:a},l={numSegments:n};return s.BV.runKernel(o.Qvg,u,l)}}),rr=(0,u.op)({unstack_:function(e,t=0){const n=(0,i._1)(e,"x","unstack","string_or_numeric");p.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return s.BV.runKernel(o.ToN,r,a)}});function ar(e,t){return xt(e,t,"right")}function sr(e,t=!0,n,r){return s.BV.makeVariable(e,t,n,r)}var or=n(8333);const ir=async function(e){const t=(0,i._1)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,or.Z)(t.shape,n);return e!==t&&t.dispose(),r},ur=async function(e,t,n){const r=(0,i._1)(e,"tensor","boolMask"),a=(0,i._1)(t,"mask","boolMask","bool"),s=null==n?0:n,o=a.rank,u=r.shape;p.hu(o>0,(()=>"mask cannot be scalar")),p.k5(u.slice(s,s+o),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+o;e++)l*=u[e];const c=u.slice(0,s).concat([l],u.slice(s+o)),d=(0,C.X)(r,c),h=(0,C.X)(a,[-1]),f=await ir(h),m=Pn(f,[1]),g=He(d,m,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),m.dispose(),d.dispose(),h.dispose(),f.dispose(),g};var lr=n(4368);const cr=(0,u.op)({transpose_:function(e,t,n){const r=(0,i._1)(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),p.hu(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{p.hu(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const a={x:r},u={perm:t};return"complex64"===r.dtype?(0,lr.lu)((()=>{let e=cn(r),t=Ke(r);return e=s.BV.runKernel(o.G3Y,{x:e},u),t=s.BV.runKernel(o.G3Y,{x:t},u),n&&(t=it(t)),(0,Y.P)(e,t)})):s.BV.runKernel(o.G3Y,a,u)}}),dr=(0,u.op)({movingAverage_:function(e,t,n,r,a=!0){const s=(0,i._1)(e,"v","movingAverage"),o=(0,i._1)(t,"x","movingAverage"),u=(0,i._1)(n,"decay","movingAverage");(0,w.xg)(s,o),p.hu(p.cO(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=(0,Ae.i)(1),c=(0,ct.l)(l,u);let h=(0,A.d)((0,ct.l)(o,s),c);if(a){p.hu(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,i._1)(r,"step","movingAverage");h=(0,ye.h)(h,(0,ct.l)(l,(0,Re.s)(u,e)))}return(0,d.I)(s,h)}}),pr=(0,u.op)({scatterND_:function(e,t,n){(0,p.Mu)(n);const r=(0,i._1)(e,"indices","scatterND","int32"),a=(0,i._1)(t,"updates","scatterND");Qn.b0(a,r,n);const u={indices:r,updates:a},l={shape:n};return s.BV.runKernel(o.xQA,u,l)}}),hr=(0,u.op)({sparseToDense_:function(e,t,n,r=0){(0,p.Mu)(n);const a=(0,i._1)(e,"sparseIndices","sparseToDense","int32"),u=(0,i._1)(t,"sparseValues","sparseToDense","string_or_numeric"),l=(0,i._1)(r,"defaultValue","sparseToDense",u.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,u,n,l);const c={sparseIndices:a,sparseValues:u,defaultValue:l},d={outputShape:n};return s.BV.runKernel(o.D2d,c,d)}}),fr=(0,u.op)({gatherND_:function(e,t){const n=(0,i._1)(t,"indices","gatherND","int32"),r={params:(0,i._1)(e,"x","gatherND","string_or_numeric"),indices:n};return s.BV.runKernel(o.q1x,r)}}),mr=(0,u.op)({dropout_:function(e,t,n,r){const a=(0,i._1)(e,"x","dropout");if(p.hu("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),p.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Nt.es?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(p.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,u=(0,ye.h)(Ge((0,d.I)(on(s,0,1,"float32",r),o)),o);return(0,A.d)(a,u)}});function gr(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function yr(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return jn(a,"float32")}const xr=async function(e,t,n=1){const r=(0,i._1)(e,"predictions","inTopK"),a=(0,i._1)(t,"targets","inTopK");(0,p.hu)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,p.hu)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),(0,p.k5)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];(0,p.hu)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const o=await r.data(),u=await a.data(),[l,c]=[o.length/s,s],d=(0,p.WP)("bool",l);for(let e=0;e<l;e++){const t=e*c,r=o.subarray(t,t+c),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),d[e]=0;for(let t=0;t<n;t++)if(a[t].index===u[e]){d[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),(0,Wn.X)(d,a.shape,"bool")},br=(0,u.op)({conv2DBackpropFilter_:function(e,t,n,r,a,i="NHWC",u){let l=e;3===e.rank&&(l=(0,C.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=(0,C.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),p.hu(4===l.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`)),p.hu(4===c.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`)),p.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const d="NHWC"===i?l.shape[3]:l.shape[1],h="NHWC"===i?c.shape[3]:c.shape[1];p.hu(d===n[2],(()=>`Error in conv2dDerFilter: depth of input ${d}) must match input depth in filter (${n[2]}.`)),p.hu(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),I.m("conv2dDerFilter",a,u);const f={x:l,dy:c},m={strides:r,pad:a,dataFormat:i,dimRoundingMode:u,filterShape:n};return s.BV.runKernel(o.wUP,f,m)}});var vr=n(9323);const wr=(0,u.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:u=[1,1],dimRoundingMode:l,bias:c,activation:h="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(h=h||"linear",!1===(0,vr.uy)(s.BV.state.gradientDepth,h)){p.hu("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let s=te(e,t,n,r,a,u,l);return null!=c&&(s=(0,d.I)(s,c)),(0,vr.QH)(s,h,f,m)}const g=(0,i._1)(e,"x","conv2d","float32"),y=(0,i._1)(t,"filter","conv2d","float32");let x=g,b=!1;3===g.rank&&(b=!0,x=(0,C.X)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),p.hu(4===x.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${x.rank}.`)),p.hu(4===y.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${y.rank}.`)),I.m("fused conv2d",r,l);const v="NHWC"===a?x.shape[3]:x.shape[1];p.hu(y.shape[2]===v,(()=>`Error in conv2d: depth of input (${v}) must match input depth for filter ${y.shape[2]}.`)),p.hu(I.jT(n,u),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`));const S=I.Ix(x.shape,y.shape,n,u,r,l);let k,T;if(null!=c&&(k=(0,i._1)(c,"bias","fused conv2d"),[k]=(0,w.T_)(k,g),"NHWC"===a?xe.assertAndGetBroadcastShape(S.outShape,k.shape):(p.hu(k.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${k.shape.length}.`)),p.hu(0===k.shape.length||k.shape[0]===S.outChannels||1===k.shape[0],(()=>`Error in fused conv2d: bias shape (${k.shape}) is not compatible with the number of output channels (${S.outChannels})`)))),null!=f){const e=f.shape;if(p.hu(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)p.hu(1===e[0]||e[0]===S.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${S.outChannels}).`));else if(3===e.length)try{xe.assertAndGetBroadcastShape(e,S.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${S.outShape}).`;throw Error(n)}T=(0,i._1)(f,"prelu weights","fused conv2d")}const N=(e,t)=>{p.hu("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));const[s,o,i,l]=t,c=(0,vr.Fr)(e,i,h);p.hu(I.I0(u),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${u}'`));const d=[re(o.shape,c,s,n,r),br(o,c,s.shape,n,r)];if(null!=l){const e=(0,vr.pf)(l,c);d.push(e)}return d},$={x,filter:y,bias:k,preluActivationWeights:T},E={strides:n,pad:r,dataFormat:a,dilations:u,dimRoundingMode:l,activation:h,leakyreluAlpha:m};if(null==c){const e=(0,ot.cb)(((e,t,n)=>{let r=s.BV.runKernel(o._V0,$,E);return n([t,e,r]),b&&(r=(0,C.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:N}}));return e(x,y)}{const e=(0,ot.cb)(((e,t,n,r)=>{let a=s.BV.runKernel(o._V0,$,E);return r([t,e,a,n]),b&&(a=(0,C.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:N}}));return e(x,y,k)}}}),Sr=(0,u.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,i=[1,1],u){let l=e;3===e.rank&&(l=(0,C.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=(0,C.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const d={x:l,dy:c},p={strides:r,pad:a,dimRoundingMode:u,dilations:i,filterShape:n};return s.BV.runKernel(o.sL$,d,p)}}),kr=(0,u.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,i=[1,1],u){let l=t,c=!1;3===t.rank&&(c=!0,l=(0,C.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const d={dy:l,filter:n},p={strides:r,pad:a,dimRoundingMode:u,dilations:i,inputShape:e},h=s.BV.runKernel(o.y7R,d,p);return c?(0,C.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Tr=(0,u.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:u=[1,1],dimRoundingMode:l,bias:c,activation:h="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(!1===(0,vr.uy)(s.BV.state.gradientDepth,h)){let s=fe(e,t,n,r,a,u,l);return null!=c&&(s=(0,d.I)(s,c)),(0,vr.QH)(s,h,f,m)}const g=(0,i._1)(e,"x","depthwiseConv2d","float32"),y=(0,i._1)(t,"filter","depthwiseConv2d","float32");let x=g,b=!1;3===g.rank&&(b=!0,x=(0,C.X)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),p.hu(4===x.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${x.rank}.`)),p.hu(4===y.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${y.rank}.`)),p.hu(x.shape[3]===y.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${x.shape[3]}) must match the inChannels dimension in filter ${y.shape[2]}.`)),null==u&&(u=[1,1]),p.hu(I.jT(n,u),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`)),I.m("fused depthwiseConv2d",r,l);const v=I.Ix(x.shape,y.shape,n,u,r,l,!0);let S,k;null!=c&&(S=(0,i._1)(c,"bias","fused conv2d"),[S]=(0,w.T_)(S,g),xe.assertAndGetBroadcastShape(v.outShape,S.shape)),null!=f&&(k=(0,i._1)(f,"prelu weights","fused depthwiseConv2d"));const T=(e,t)=>{p.hu(I.I0(u),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${u}'`));const[a,s,o,i]=t,c=(0,vr.Fr)(e,o,h),d=kr(s.shape,c,a,n,r,u,l),f=Sr(s,c,a.shape,n,r,u,l);return null!=i?[d,f,(0,vr.pf)(S,c)]:[d,f]},N={x,filter:y,bias:S,preluActivationWeights:k},$={strides:n,pad:r,dataFormat:a,dilations:u,dimRoundingMode:l,activation:h,leakyreluAlpha:m};if(null==c){const e=(0,ot.cb)(((e,t,n)=>{let r=s.BV.runKernel(o.luS,N,$);return n([t,e,r]),b&&(r=(0,C.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:T}}));return e(x,y)}{const e=(0,ot.cb)(((e,t,n,r)=>{let a=s.BV.runKernel(o.luS,N,$);return r([t,e,a,n]),b&&(a=(0,C.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:T}}));return e(x,y,S)}}}),Ir=(0,u.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c=.2}){if(!1===(0,vr.uy)(s.BV.state.gradientDepth,u)){let s=R(e,t,n,r);return null!=a&&(s=(0,d.I)(s,a)),(0,vr.QH)(s,u,l,c)}let h=(0,i._1)(e,"a","fused matMul"),f=(0,i._1)(t,"b","fused matMul");[h,f]=(0,w.T_)(h,f);const m=n?h.shape[h.rank-2]:h.shape[h.rank-1],g=r?f.shape[f.rank-1]:f.shape[f.rank-2],y=n?h.shape[h.rank-1]:h.shape[h.rank-2],x=r?f.shape[f.rank-2]:f.shape[f.rank-1],b=h.shape.slice(0,-2),v=f.shape.slice(0,-2),S=p.NA(b),k=p.NA(v);p.hu(m===g,(()=>`Error in fused matMul: inner shapes (${m}) and (${g}) of Tensors with shapes ${h.shape} and ${f.shape} and transposeA=${n} and transposeB=${r} must match.`));const T=xe.assertAndGetBroadcastShape(h.shape.slice(0,-2),f.shape.slice(0,-2)).concat([y,x]),I=n?(0,C.X)(h,[S,m,y]):(0,C.X)(h,[S,y,m]),N=r?(0,C.X)(f,[k,x,g]):(0,C.X)(f,[k,g,x]);let $,E;null!=a&&($=(0,i._1)(a,"bias","fused matMul"),[$]=(0,w.T_)($,h),xe.assertAndGetBroadcastShape(T,$.shape)),null!=l&&(E=(0,i._1)(l,"prelu weights","fused matMul"));const _=(e,t)=>{const[s,o,i,l]=t,c=(0,vr.Fr)((0,C.X)(e,i.shape),i,u);let d,p;return n||r?!n&&r?(d=R(c,o,!1,!1),p=R(c,s,!0,!1)):n&&!r?(d=R(o,c,!1,!0),p=R(s,c,!1,!1)):(d=R(o,c,!0,!0),p=R(c,s,!0,!0)):(d=R(c,o,!1,!0),p=R(s,c,!0,!1)),null!=a?[d,p,(0,vr.pf)(l,c)]:[d,p]},A={a:I,b:N,bias:$,preluActivationWeights:E},O={transposeA:n,transposeB:r,activation:u,leakyreluAlpha:c};if(null==a){const e=(0,ot.cb)(((e,t,n)=>{const r=s.BV.runKernel(o.usg,A,O);return n([e,t,r]),{value:(0,C.X)(r,T),gradFunc:_}}));return e(I,N)}{const e=(0,ot.cb)(((e,t,n,r)=>{const a=s.BV.runKernel(o.usg,A,O);return r([e,t,a,n]),{value:(0,C.X)(a,T),gradFunc:_}}));return e(I,N,$)}}}),Cr=(0,u.op)({hammingWindow_:function(e){return yr(e,.54,.46)}}),Nr=(0,u.op)({hannWindow_:function(e){return yr(e,.5,.5)}}),$r=(0,u.op)({frame_:function(e,t,n,r=!1,a=0){let s=0;const o=[];for(;s+t<=e.size;)o.push(D(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=_([D(e,s,t-r),(0,q.h)([r],a)]);o.push(i),s+=n}return 0===o.length?Hn([],[0,t]):(0,C.X)(_(o),[o.length,t])}}),Er=(0,u.op)({stft_:function(e,t,n,r,a=Nr){null==r&&(r=gr(t));const s=$r(e,t,n),o=(0,A.d)(s,a(t));return Bn(o,r)}}),_r=(0,u.op)({cropAndResize_:function(e,t,n,r,a="bilinear",u=0){const l=(0,i._1)(e,"image","cropAndResize"),c=(0,i._1)(t,"boxes","cropAndResize","float32"),d=(0,i._1)(n,"boxInd","cropAndResize","int32"),h=c.shape[0];p.hu(4===l.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${l.rank}.`)),p.hu(2===c.rank&&4===c.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${h},4] but had shape ${c.shape}.`)),p.hu(1===d.rank&&d.shape[0]===h,(()=>`Error in cropAndResize: boxInd must be have size [${h}] but had shape ${c.shape}.`)),p.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),p.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),p.hu("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const f={image:l,boxes:c,boxInd:d},m={method:a,extrapolationValue:u,cropSize:r};return s.BV.runKernel(o.VcC,f,m)}}),Rr=(0,u.op)({flipLeftRight_:function(e){const t=(0,i._1)(e,"image","flipLeftRight","float32");p.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return s.BV.runKernel(o.Uyb,n,{})}}),Ar=(0,u.op)({grayscaleToRGB_:function(e){const t=(0,i._1)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];p.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),p.hu(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,ze(t,a)}}),Or=(0,u.op)({rgbToGrayscale_:function(e){const t=(0,i._1)(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];p.hu(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),p.hu(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const a=t.dtype,s=(0,T.p)(t,"float32"),o=jn([.2989,.587,.114]);let u;switch(t.rank){case 2:u=Te("ij,j->i",s,o);break;case 3:u=Te("ijk,k->ij",s,o);break;case 4:u=Te("ijkl,l->ijk",s,o);break;case 5:u=Te("ijklm,m->ijkl",s,o);break;case 6:u=Te("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return u=Ve(u,-1),(0,T.p)(u,a)}}),Dr=(0,u.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=(0,i._1)(e,"image","rotateWithOffset","float32");p.hu(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const u={image:a},l={radians:t,fillValue:n,center:r};return s.BV.runKernel(o.b9H,u,l)}});function Fr(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),p.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),p.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),p.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),p.hu(1===t.rank,(()=>"scores must be a 1D tensor")),p.hu(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),p.hu(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const Br=(0,u.op)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const u=(0,i._1)(e,"boxes","nonMaxSuppression","float32"),l=(0,i._1)(t,"scores","nonMaxSuppression","float32"),c=Fr(u,l,n,r,a),d={maxOutputSize:n=c.maxOutputSize,iouThreshold:r=c.iouThreshold,scoreThreshold:a=c.scoreThreshold};return s.BV.runKernel(o.uv1,{boxes:u,scores:l},d)}});var Mr=n(3337);const Pr=(0,u.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,u=0){const l=(0,i._1)(e,"boxes","nonMaxSuppression"),c=(0,i._1)(t,"scores","nonMaxSuppression"),d=Fr(l,c,n,r,a,u),p={boxes:l,scores:c},h={maxOutputSize:n=d.maxOutputSize,iouThreshold:r=d.iouThreshold,scoreThreshold:a=d.scoreThreshold,softNmsSigma:u=d.softNmsSigma},f=s.BV.runKernel(o.W0H,p,h);return{selectedIndices:f[0],selectedScores:f[1]}}}),Lr=(0,u.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,u=!1){const l=(0,i._1)(e,"boxes","nonMaxSuppression"),c=(0,i._1)(t,"scores","nonMaxSuppression"),d=Fr(l,c,n,r,a,null),p={boxes:l,scores:c},h={maxOutputSize:d.maxOutputSize,iouThreshold:d.iouThreshold,scoreThreshold:d.scoreThreshold,padToMaxOutputSize:u},f=s.BV.runKernel(o.cye,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}}),Vr=(0,u.op)({resizeBilinear_:function(e,t,n=!1,r=!1){const a=(0,i._1)(e,"images","resizeBilinear");p.hu(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),p.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),p.hu(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let u=a,l=!1;3===a.rank&&(l=!0,u=(0,C.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,c={images:u},d={alignCorners:n,halfPixelCenters:r,size:t},h=s.BV.runKernel(o._Yw,c,d);return l?(0,C.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Ur=(0,u.op)({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=(0,i._1)(e,"images","resizeNearestNeighbor");p.hu(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),p.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),p.hu("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),p.hu(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let u=a,l=!1;3===a.rank&&(l=!0,u=(0,C.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,c={images:u},d={alignCorners:n,halfPixelCenters:r,size:t},h=s.BV.runKernel(o.dpD,c,d);return l?(0,C.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),zr=(0,u.op)({threshold_:function(e,t="binary",n=!1,r=.5){const a=(0,i._1)(e,"image","threshold"),s=a.shape[0]*a.shape[1];let o,u,l,c,h=(0,A.d)(jn([r]),255);if(p.hu(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),p.hu(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),p.hu("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),p.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[o,u,l]=Fn(a,[1,1,1],-1);const e=(0,A.d)(o,.2989),t=(0,A.d)(u,.587),n=(0,A.d)(l,.114);c=(0,d.I)((0,d.I)(e,t),n)}else c=e;"otsu"===t&&(h=function(e,t){let n,r,a,s,o,i,u=jn([-1]),l=jn([0]),c=jn([0]);for(let p=0;p<e.size-1;p++){n=D(e,0,p+1),r=D(e,p+1),o=(0,ye.h)((0,Fe.S)(n),t),i=(0,ye.h)((0,Fe.S)(r),t);const h=(0,Fe.S)((0,A.d)(n,ln(0,n.size)));a=(0,ye.h)(h,(0,Fe.S)(n));const f=(0,q.h)(r.shape,n.size),m=(0,d.I)(ln(0,r.size),f),g=(0,A.d)(r,m);s=(0,ye.h)((0,Fe.S)(g),(0,Fe.S)(r));const y=(0,ct.l)(a,s),x=(0,ct.l)(a,s),b=(0,A.d)(o,i);c=(0,A.d)((0,A.d)(b,y),x);const v=Xe(c,l);l=ve(v,c,l),u=ve(v,jn([p]),u)}return u}(z((0,T.p)(bn(c),"int32"),(0,Wn.X)([]),256),s));const f=n?tt(c,h):Xe(c,h);return(0,T.p)((0,A.d)(f,255),"int32")}}),Wr=(0,u.op)({transform_:function(e,t,n="nearest",r="constant",a=0,u){const l=(0,i._1)(e,"image","transform","float32"),c=(0,i._1)(t,"transforms","transform","float32");p.hu(4===l.rank,(()=>`Error in transform: image must be rank 4,but got rank ${l.rank}.`)),p.hu(2===c.rank&&(c.shape[0]===l.shape[0]||1===c.shape[0])&&8===c.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),p.hu(null==u||2===u.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${u}.`));const d={image:l,transforms:c},h={interpolation:n,fillMode:r,fillValue:a,outputShape:u};return s.BV.runKernel(o.wx7,d,h)}}),Gr=(0,u.op)({bandPart_:function(e,t,n){const r=(0,i._1)(e,"a","bandPart");(0,p.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,o]=r.shape.slice(-2);let u,l;"number"==typeof t?((0,p.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,p.hu)(t<=s,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`)),u=(0,i._1)(t<0?s:t,"numLower","bandPart")):((0,p.hu)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),u=ve(et(t,0),s,Et(t,s))),"number"==typeof n?((0,p.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),(0,p.hu)(n<=o,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`)),l=(0,i._1)(n<0?o:n,"numUpper","bandPart")):((0,p.hu)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=ve(et(n,0),o,Et(n,o)));const c=(0,C.X)(ln(0,s,1,"int32"),[-1,1]),d=ln(0,o,1,"int32"),h=(0,ct.l)(c,d),f=ht(tt(h,u),qe(h,it(l))),m=It([s,o],r.dtype);return(0,C.X)(Ln(rr((0,C.X)(r,[-1,s,o])).map((e=>ve(f,e,m)))),a)}}),jr=(0,u.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,p.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,p.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Fn(e,e.shape[0],0).map((e=>Pn(e,[0])));(0,p.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(s.BV.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=(0,A.d)((0,Fe.S)((0,A.d)(n[r],e)),n[r]);e=(0,ct.l)(e,t)}return(0,ye.h)(e,Me(e,"euclidean"))})));return t?Ln(n,0):n}});function Hr(e,t=!1){return s.BV.tidy((()=>{(0,p.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=We(n),o=(0,E.d)(e);const i=Hn([[1]],[1,1]);let u=(0,E.d)(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=o,l=u,c=a;[u,o,a]=s.BV.tidy((()=>{const t=D(o,[e,e],[n-e,1]),s=Me(t),l=D(o,[e,e],[1,1]),c=ve(Xe(l,0),Hn([[-1]]),Hn([[1]])),d=(0,ct.l)(l,(0,A.d)(c,s)),p=(0,ye.h)(t,d);u=1===p.shape[0]?(0,E.d)(i):_([i,D(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=it((0,ye.h)(R(c,d),s)),f=D(o,[e,0],[n-e,r]),m=(0,A.d)(h,u),g=cr(u);if(0===e)o=(0,ct.l)(f,R(m,R(g,f)));else{const t=(0,ct.l)(f,R(m,R(g,f)));o=_([D(o,[0,0],[e,r]),t],0)}const y=cr(m),x=D(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=(0,ct.l)(x,R(R(x,u),y));else{const t=(0,ct.l)(x,R(R(x,u),y));a=_([D(a,[0,0],[n,e]),t],1)}return[u,o,a]})),(0,lr.B9)([t,l,c])}return!t&&n>r&&(a=D(a,[0,0],[n,r]),o=D(o,[0,0],[r,r])),[a,o]}))}const Xr=(0,u.op)({qr_:function(e,t=!1){if((0,p.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Hr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=rr((0,C.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=Hr(e,t);a.push(n),s.push(r)})),[(0,C.X)(Ln(a,0),e.shape),(0,C.X)(Ln(s,0),e.shape)]}}});var qr;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(qr||(qr={}));const Kr=(0,u.op)({computeWeightedLoss_:function(e,t,n=qr.SUM_BY_NONZERO_WEIGHTS){const r=(0,i._1)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=(0,i._1)(t,"weights","computeWeightedLoss"));const s=null==a?r:(0,A.d)(r,a);if(n===qr.NONE)return s;if(n===qr.SUM)return(0,Fe.S)(s);if(n===qr.MEAN){if(null==a)return Tt(s);{const e=r.size/a.size,t=(0,ye.h)((0,Fe.S)(s),(0,Fe.S)(a));return e>1?(0,ye.h)(t,(0,Ae.i)(e)):t}}if(n===qr.SUM_BY_NONZERO_WEIGHTS){if(null==a)return(0,ye.h)((0,Fe.S)(s),(0,Ae.i)(r.size));{const e=(0,A.d)(a,Ct(r.shape)),t=(0,T.p)((0,Fe.S)(Ft(e,(0,Ae.i)(0))),"float32");return(0,ye.h)((0,Fe.S)(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),Yr=(0,u.op)({absoluteDifference_:function(e,t,n,r=qr.SUM_BY_NONZERO_WEIGHTS){const s=(0,i._1)(e,"labels","absoluteDifference"),o=(0,i._1)(t,"predictions","absoluteDifference");let u=null;null!=n&&(u=(0,i._1)(n,"weights","absoluteDifference")),(0,p.k5)(s.shape,o.shape,"Error in absoluteDifference: ");const l=(0,a.W)((0,ct.l)(s,o));return Kr(l,u,r)}}),Qr=(0,u.op)({cosineDistance_:function(e,t,n,r,a=qr.SUM_BY_NONZERO_WEIGHTS){const s=(0,i._1)(e,"labels","cosineDistance"),o=(0,i._1)(t,"predictions","cosineDistance");let u=null;null!=r&&(u=(0,i._1)(r,"weights","cosineDistance")),(0,p.k5)(s.shape,o.shape,"Error in cosineDistance: ");const l=(0,Ae.i)(1),c=(0,ct.l)(l,(0,Fe.S)((0,A.d)(s,o),n,!0));return Kr(c,u,a)}}),Zr=(0,u.op)({hingeLoss_:function(e,t,n,r=qr.SUM_BY_NONZERO_WEIGHTS){let a=(0,i._1)(e,"labels","hingeLoss");const s=(0,i._1)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,i._1)(n,"weights","hingeLoss")),(0,p.k5)(a.shape,s.shape,"Error in hingeLoss: ");const u=(0,Ae.i)(1);a=(0,ct.l)((0,A.d)((0,Ae.i)(2),a),u);const l=(0,pn.U)((0,ct.l)(u,(0,A.d)(a,s)));return Kr(l,o,r)}}),Jr=(0,u.op)({huberLoss_:function(e,t,n,r=1,s=qr.SUM_BY_NONZERO_WEIGHTS){const o=(0,i._1)(e,"labels","huberLoss"),u=(0,i._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,i._1)(n,"weights","huberLoss")),(0,p.k5)(o.shape,u.shape,"Error in huberLoss: ");const c=(0,Ae.i)(r),h=(0,a.W)((0,ct.l)(u,o)),f=Et(h,c),m=(0,ct.l)(h,f),g=(0,d.I)((0,A.d)((0,Ae.i)(.5),(0,De.h)(f)),(0,A.d)(c,m));return Kr(g,l,s)}}),ea=(0,u.op)({logLoss_:function(e,t,n,r=1e-7,a=qr.SUM_BY_NONZERO_WEIGHTS){const s=(0,i._1)(e,"labels","logLoss"),o=(0,i._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,i._1)(n,"weights","logLoss")),(0,p.k5)(s.shape,o.shape,"Error in logLoss: ");const l=(0,Ae.i)(1),c=(0,Ae.i)(r),h=it((0,A.d)(s,at((0,d.I)(o,c)))),f=(0,A.d)((0,ct.l)(l,s),at((0,d.I)((0,ct.l)(l,o),c))),m=(0,ct.l)(h,f);return Kr(m,u,a)}}),ta=(0,u.op)({meanSquaredError_:function(e,t,n,r=qr.SUM_BY_NONZERO_WEIGHTS){const a=(0,i._1)(e,"labels","meanSquaredError"),s=(0,i._1)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,i._1)(n,"weights","meanSquaredError")),(0,p.k5)(a.shape,s.shape,"Error in meanSquaredError: ");const u=Mn(a,s);return Kr(u,o,r)}}),na=(0,u.op)({sigmoidCrossEntropy_:function(e,t,n,r=0,s=qr.SUM_BY_NONZERO_WEIGHTS){let o=(0,i._1)(e,"multiClassLabels","sigmoidCrossEntropy");const u=(0,i._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,i._1)(n,"weights","sigmoidCrossEntropy")),(0,p.k5)(o.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=(0,Ae.i)(r),t=(0,Ae.i)(1),n=(0,Ae.i)(.5);o=(0,d.I)((0,A.d)(o,(0,ct.l)(t,e)),(0,A.d)(n,e))}const c=function(e,t){const n=(0,i._1)(e,"labels","sigmoidCrossEntropyWithLogits"),r=(0,i._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,p.k5)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,pn.U)(r),o=(0,A.d)(r,n),u=st(Le(it((0,a.W)(r))));return(0,d.I)((0,ct.l)(s,o),u)}(o,u);return Kr(c,l,s)}}),ra=(0,u.op)({softmaxCrossEntropy_:function(e,t,n,r=0,a=qr.SUM_BY_NONZERO_WEIGHTS){let s=(0,i._1)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,i._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,i._1)(n,"weights","softmaxCrossEntropy")),(0,p.k5)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,Ae.i)(r),t=(0,Ae.i)(1),n=(0,Ae.i)(s.shape[1]);s=(0,d.I)((0,A.d)(s,(0,ct.l)(t,e)),(0,ye.h)(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(0,ot.cb)(((e,t,r)=>{const a=pt(t,[n],!0),s=(0,ct.l)((0,T.p)(t,"float32"),a);r([e,s]);const o=it((0,A.d)(s,e));return{value:(0,Fe.S)(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=(0,$e.rv)(e.shape,[n]);return[(0,A.d)((0,C.X)(e,s),(0,ct.l)((0,T.p)(r,"float32"),Le(a))),(0,A.d)((0,C.X)(e,s),(0,ct.l)(Le(a),(0,T.p)(r,"float32")))]}}}));return r(e,t)}(s,o);return Kr(l,u,a)}}),aa={fft:An,ifft:On,rfft:Bn,irfft:Dn},sa={hammingWindow:Cr,hannWindow:Nr,frame:$r,stft:Er},oa={flipLeftRight:Rr,grayscaleToRGB:Ar,resizeNearestNeighbor:Ur,resizeBilinear:Vr,rgbToGrayscale:Or,rotateWithOffset:Dr,cropAndResize:_r,nonMaxSuppression:Br,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,i._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,i._1)(t,"scores","nonMaxSuppressionAsync"),u=Fr(s,o,n,r,a);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold;const l=await Promise.all([s.data(),o.data()]),c=l[0],d=l[1],{selectedIndices:p}=(0,Mr.GP)(c,d,n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),jn(p,"int32")},nonMaxSuppressionWithScore:Pr,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=(0,i._1)(e,"boxes","nonMaxSuppressionAsync"),u=(0,i._1)(t,"scores","nonMaxSuppressionAsync"),l=Fr(o,u,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;const c=await Promise.all([o.data(),u.data()]),d=c[0],p=c[1],{selectedIndices:h,selectedScores:f}=(0,Mr.pA)(d,p,n,r,a,s);return o!==e&&o.dispose(),u!==t&&u.dispose(),{selectedIndices:jn(h,"int32"),selectedScores:jn(f)}},nonMaxSuppressionPadded:Lr,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=(0,i._1)(e,"boxes","nonMaxSuppressionAsync"),u=(0,i._1)(t,"scores","nonMaxSuppressionAsync"),l=Fr(o,u,n,r,a,null),c=l.maxOutputSize,d=l.iouThreshold,p=l.scoreThreshold,[h,f]=await Promise.all([o.data(),u.data()]),{selectedIndices:m,validOutputs:g}=(0,Mr.qP)(h,f,c,d,p,s);return o!==e&&o.dispose(),u!==t&&u.dispose(),{selectedIndices:jn(m,"int32"),validOutputs:(0,Ae.i)(g,"int32")}},threshold:zr,transform:Wr},ia={bandPart:Gr,gramSchmidt:jr,qr:Xr},ua={absoluteDifference:Yr,computeWeightedLoss:Kr,cosineDistance:Qr,hingeLoss:Zr,huberLoss:Jr,logLoss:ea,meanSquaredError:ta,sigmoidCrossEntropy:na,softmaxCrossEntropy:ra},la={sparseFillEmptyRows:(0,u.op)({sparseFillEmptyRows_:function(e,t,n,r){const a=(0,i._1)(e,"indices","sparseFillEmptyRows","int32"),u=(0,i._1)(t,"values","sparseFillEmptyRows"),l=(0,i._1)(n,"denseShape","sparseFillEmptyRows","int32"),c=(0,i._1)(r,"defaultValue","sparseFillEmptyRows",u.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==u.rank)throw new Error(`Values should be Tensor1D but received shape ${u.shape}`);if(1!==l.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${l.shape}`);if(0!==c.rank)throw new Error(`Default value should be a scalar but received shape ${c.shape}`);const d={indices:a,values:u,denseShape:l,defaultValue:c},p=s.BV.runKernel(o.O3z,d);return{outputIndices:p[0],outputValues:p[1],emptyRowIndicator:p[2],reverseIndexMap:p[3]}}}),sparseReshape:(0,u.op)({sparseReshape_:function(e,t,n){const r=(0,i._1)(e,"inputIndices","sparseReshape","int32"),a=(0,i._1)(t,"inputShape","sparseReshape","int32"),u=(0,i._1)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==u.rank)throw new Error(`New shape should be Tensor1D but received shape ${u.shape}`);const l={inputIndices:r,inputShape:a,newShape:u},c=s.BV.runKernel(o.nhH,l);return{outputIndices:c[0],outputShape:c[1]}}}),sparseSegmentMean:(0,u.op)({sparseSegmentMean_:function(e,t,n){const r=(0,i._1)(e,"data","sparseSegmentMean"),a=(0,i._1)(t,"indices","sparseSegmentMean","int32"),u=(0,i._1)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==u.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${u.shape}`);const l={data:r,indices:a,segmentIds:u};return s.BV.runKernel(o.w3H,l)}}),sparseSegmentSum:(0,u.op)({sparseSegmentSum_:function(e,t,n){const r=(0,i._1)(e,"data","sparseSegmentSum"),a=(0,i._1)(t,"indices","sparseSegmentSum","int32"),u=(0,i._1)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==u.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${u.shape}`);const l={data:r,indices:a,segmentIds:u};return s.BV.runKernel(o.ZjV,l)}})},ca={stringNGrams:(0,u.op)({stringNGrams_:function(e,t,n,r,a,u,l,c){const d=(0,i._1)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error(`Data must be a vector, saw: ${d.shape}`);const p=(0,i._1)(t,"dataSplits","stringNGrams");if("int32"!==p.dtype)throw new Error("Data splits must be of datatype int32");const h={separator:n,nGramWidths:r,leftPad:a,rightPad:u,padWidth:l,preserveShortSequences:c},f={data:d,dataSplits:p},m=s.BV.runKernel(o._JP,f,h);return{nGrams:m[0],nGramsSplits:m[1]}}}),stringSplit:(0,u.op)({stringSplit_:function(e,t,n=!0){const r=(0,i._1)(e,"input","stringSplit","string"),a=(0,i._1)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const u={skipEmpty:n},l={input:r,delimiter:a},c=s.BV.runKernel(o.s1s,l,u);return{indices:c[0],values:c[1],shape:c[2]}}}),stringToHashBucketFast:(0,u.op)({stringToHashBucketFast_:function(e,t){const n=(0,i._1)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return s.BV.runKernel(o.XkS,a,r)}}),staticRegexReplace:(0,u.op)({staticRegexReplace_:function(e,t,n,r=!0){const a=(0,i._1)(e,"input","staticRegexReplace","string"),u={pattern:t,rewrite:n,replaceGlobal:r};return s.BV.runKernel(o.e0R,{x:a},u)}})}},3453:(e,t,n)=>{"use strict";n.d(t,{s:()=>i});var r=n(7097),a=n(9121),s=n(747),o=n(3740);const i=(0,n(2668).op)({pow_:function(e,t){let n=(0,o._1)(e,"base","pow"),i=(0,o._1)(t,"exp","pow");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.pe_,u)}})},8151:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,s._1)(e,"x","prelu"),alpha:(0,s._1)(t,"alpha","prelu")};return r.BV.runKernel(a.o0g,n)}})},9798:(e,t,n)=>{"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,{S:()=>r})},7409:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({relu_:function(e){const t={x:(0,s._1)(e,"x","relu")};return r.BV.runKernel(a.qkr,t)}})},3582:(e,t,n)=>{"use strict";n.d(t,{b:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({relu6_:function(e){const t={x:(0,s._1)(e,"x","relu6")};return r.BV.runKernel(a.SbG,t)}})},4968:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,s._1)(e,"x","reshape","string_or_numeric")},o={shape:t};return r.BV.runKernel(a.HZH,n,o)}})},9494:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var r=n(9122),a=n(7852);function s(e,t){if(((0,r.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,a.H)(e,[],[],t)}},3028:(e,t,n)=>{"use strict";n.d(t,{SU:()=>o,b0:()=>s,l5:()=>a});var r=n(569);function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(n,t,e)}function o(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,o=n.length;let i=1;for(let e=s;e<o;++e)i*=n[e];const u=s<1?1:s;return{sliceRank:s,numUpdates:(0,r.NA)(t.shape)/u,sliceSize:i,strides:[...(0,r.e3)(n.slice(0,s)),1],outputSize:(0,r.NA)(n)}}},625:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,s._1)(e,"x","sigmoid","float32")};return r.BV.runKernel(a.a5O,t)}})},3261:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,s._1)(e,"x","sqrt","float32")};return r.BV.runKernel(a.FKq,t)}})},248:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(7097),a=n(3740);const s=(0,n(2668).op)({square_:function(e){const t=(0,a._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},1901:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,s._1)(e,"x","step")},o={alpha:t};return r.BV.runKernel(a.h8e,n,o)}})},827:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(7097),a=n(9121),s=n(747),o=n(3740);const i=(0,n(2668).op)({sub_:function(e,t){let n=(0,o._1)(e,"a","sub"),i=(0,o._1)(t,"b","sub");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.Tr8,u)}})},5475:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(2271);const i=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let i=(0,s._1)(e,"x","sum");"bool"===i.dtype&&(i=(0,o.p)(i,"int32"));const u={x:i},l={axis:t,keepDims:n};return r.BV.runKernel(a.GBy,u,l)}})},701:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var r=n(3740),a=n(7852);function s(e,t,n){const s=(0,r.C)(e,n);return(0,a.H)(e,t,s,n)}},9906:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(3740),a=n(569),s=n(7852);function o(e,t,n){if((0,a.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const o=(0,r.C)(e,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.H)(e,t,o,n)}},7852:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(7097),a=n(1221),s=n(569),o=n(9122);function i(e,t,n,i){if(null==i)i=(0,s.D2)(e);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,a.$F)(e)||(0,a.Oq)(e)){if("float32"!==i&&"int32"!==i)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${i}.`);return r.BV.backend.createTensorFromGPUData(e,t||n,i)}if(!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.Mu)(t);const e=(0,s.NA)(t),r=(0,s.NA)(n);(0,s.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==(0,s.NA)(t.slice(e));(0,s.hu)(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0),r.BV.makeTensor(e,t,i)}},6577:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,s._1)(e,"x","zerosLike")};return r.BV.runKernel(a.RuY,t)}})},9742:(e,t,n)=>{"use strict";function r(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{j:()=>r})},4077:(e,t,n)=>{"use strict";n.d(t,{es:()=>w,YD:()=>f,_w:()=>k,t3:()=>S,FZ:()=>v,Vp:()=>b,Vi:()=>x});var r=n(5938),a=n(569);const s=20,o=3,i=7;function u(e,t,n,r){const s=(0,a.e3)(t),o=function(e,t,n,r){const s=(0,a.NA)(t),o=r[r.length-1],i=new Array(o).fill(0),u=t.length,c="complex64"===n?p(e):e;if(u>1)for(let e=0;e<s/o;e++){const t=e*o;for(let e=0;e<o;e++)i[e]=Math.max(i[e],l(c[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,u=d(e,t,n,s,o),c=["Tensor"];return r&&(c.push(`  dtype: ${n}`),c.push(`  rank: ${i}`),c.push(`  shape: [${t}]`),c.push("  values:")),c.push(u.map((e=>"    "+e)).join("\n")),c.join("\n")}function l(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(i))} + ${parseFloat(e[1].toFixed(i))}j`:(0,a.HD)(e)?`'${e}'`:"bool"===n?c(e):parseFloat(e.toFixed(i)).toString(),(0,a.oj)(r,t)}function c(e){return 0===e?"false":"true"}function d(e,t,n,r,a,i=!0){const u="complex64"===n?2:1,h=t[0],f=t.length;if(0===f)return"complex64"===n?[l(p(e)[0],0,n)]:"bool"===n?[c(e[0])]:[e[0].toString()];if(1===f){if(h>s){const t=o*u;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((h-o)*u,h*u));return"complex64"===n&&(r=p(r),s=p(s)),["["+r.map(((e,t)=>l(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>l(e,a[h-o+t],n))).join(", ")+"]"]}return["["+("complex64"===n?p(e):Array.from(e)).map(((e,t)=>l(e,a[t],n))).join(", ")+"]"]}const m=t.slice(1),g=r.slice(1),y=r[0]*u,x=[];if(h>s){for(let t=0;t<o;t++){const r=t*y,s=r+y;x.push(...d(e.slice(r,s),m,n,g,a,!1))}x.push("...");for(let t=h-o;t<h;t++){const r=t*y,s=r+y;x.push(...d(e.slice(r,s),m,n,g,a,t===h-1))}}else for(let t=0;t<h;t++){const r=t*y,s=r+y;x.push(...d(e.slice(r,s),m,n,g,a,t===h-1))}const b=2===f?",":"";x[0]="["+(h>0?x[0]+b:"");for(let e=1;e<x.length-1;e++)x[e]=" "+x[e]+b;let v=",\n";for(let e=2;e<f;e++)v+="\n";return x[x.length-1]=" "+x[x.length-1]+"]"+(i?"":v),x}function p(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var h=n(9122);class f{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.NA(e),null!=n){const e=n.length;a.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.rQ(t,this.size),this.strides=(0,a.e3)(e)}set(e,...t){0===t.length&&(t=[0]),a.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return m().makeTensor(this.values,this.shape,this.dtype)}}let m=null,g=null,y=null;function x(e){m=e}function b(e){g=e}function v(e){y=e}class w{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.NA(e),this.strides=(0,a.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return g.buffer(this.shape,this.dtype,e)}bufferSync(){return g.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,a.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,a.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=m().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>h.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),m().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=m().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>h.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await m().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),m().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return g.print(this,e)}clone(){return this.throwIfDisposed(),g.clone(this)}toString(e=!1){return u(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),g.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),m().makeVariable(this,e,t,n)}}function S(){return(0,r.R)("Tensor",(()=>w))}Object.defineProperty(w,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),S();class k extends w{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);m().disposeTensor(this),this.dataId=e.dataId,m().incRef(this,null)}dispose(){m().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(k,Symbol.hasInstance,{value:e=>e instanceof w&&null!=e.assign&&e.assign instanceof Function})},747:(e,t,n)=>{"use strict";n.d(t,{T_:()=>o,Vu:()=>u,xg:()=>i});var r=n(4077),a=n(1221),s=n(569);function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,a.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,s.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e){const t=[];return l(e,t,new Set),t}function l(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),l(r,t,n))}}},3740:(e,t,n)=>{"use strict";n.d(t,{C:()=>l,_1:()=>p,sI:()=>h});var r=n(7097),a=n(2885),s=n(4077),o=n(1221),i=n(9122),u=n(569);function l(e,t){let n=e;if((0,i.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,o.Oq)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,o.$F)(e))return[e.buffer.size/(null==t?4:(0,u.bT)(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,i.isTypedArray)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,a.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.isTypedArray)(e))return void(0,u.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,u.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,u.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)c(e[t],r,n.concat(t))}function d(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function p(e,t,n,a="numeric"){if(e instanceof(0,s.t3)())return d(a,e.dtype,t,n),e;let o=(0,u.D2)(e);if("string"!==o&&["bool","int32","float32"].indexOf(a)>=0&&(o=a),d(a,o,t,n),null==e||!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const c=l(e,o);(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const p="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0);return r.BV.makeTensor(p,c,o)}function h(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>p(e,`${t}[${a}]`,n,r)))}},1221:(e,t,n)=>{"use strict";var r,a,s,o,i;n.d(t,{$F:()=>p,Oq:()=>d,x8:()=>l,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const u={float32:o,int32:a,bool:s,complex64:i};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}function d(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function p(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},9122:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>s.cO,arraysEqualWithNull:()=>s.DK,assert:()=>s.hu,assertNonNegativeIntegerDimensions:()=>s.Mu,assertNonNull:()=>s.Cq,assertShapesMatch:()=>s.k5,bytesFromStringArray:()=>s.Ub,bytesPerElement:()=>s.bT,checkConversionForErrors:()=>s.D5,clamp:()=>s.uZ,computeStrides:()=>s.e3,convertBackendValuesAndArrayBuffer:()=>s.KS,createScalarValue:()=>v,createShuffledIndices:()=>s.U$,decodeString:()=>I,distSquared:()=>s.E7,encodeString:()=>T,fetch:()=>k,fingerPrint64:()=>b,flatten:()=>N,getArrayFromDType:()=>s.rQ,getTypedArrayFromDType:()=>s.WP,hasEncodingLoss:()=>s.QB,hexToLong:()=>u,indexToLoc:()=>s.NE,inferDtype:()=>s.D2,inferFromImplicitShape:()=>s.JZ,isBoolean:()=>s.jn,isFunction:()=>s.mf,isInt:()=>s.GN,isNumber:()=>s.hj,isPromise:()=>s.tI,isScalarShape:()=>s.xH,isString:()=>s.HD,isTypedArray:()=>C,isValidDtype:()=>s.LP,locToIndex:()=>s.qy,makeOnesTypedArray:()=>s.p8,makeZerosNestedTypedArray:()=>s.l6,makeZerosTypedArray:()=>s.wT,nearestDivisor:()=>s.jP,nearestLargerEven:()=>s.nY,now:()=>S,parseAxisParam:()=>s.EC,randUniform:()=>s.bj,repeatedTry:()=>s.WD,rightPad:()=>s.oj,shuffle:()=>s.TV,shuffleCombo:()=>s.d7,sizeFromShape:()=>s.NA,sizeToSquarishShape:()=>s.YP,squeezeShape:()=>s.bp,sum:()=>s.Sm,swap:()=>s.LF,tanh:()=>s.AE,toNestedArray:()=>s.GX,toTypedArray:()=>w});var r=n(2885),a=n(9742),s=n(569),o=n(3720);const i=n.n(o)()||o;function u(e){return i.fromString(e,!0,16)}const l=u("c3a5c85c97cb3127"),c=u("b492b66fbe98f273"),d=u("9ae16a3b2f90404f");function p(e){return e.xor(e.shru(47))}function h(e,t,n){const r=e.slice(t,t+n);return i.fromBytes(Array.from(r),!0,!0)}function f(e,t){return h(e,t,8)}function m(e,t){return h(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function y(e,t,n=u("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function x(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=g(s.add(a).add(r),21);const o=a;return a=(a=a.add(t)).add(n),s=s.add(g(a,44)),[a.add(r),s.add(o)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,r)}function b(e,t=e.length){const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=d.add(2*t),r=f(e,0).add(d),a=f(e,t-8);return y(g(a,37).mul(n).add(r),g(r,25).add(a).mul(n),n)}if(t>=4){const n=d.add(2*t);return y(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return p(d.mul(n).xor(l.mul(r))).mul(d)}return d}(e,t):function(e,t=e.length){const n=d.add(2*t),r=f(e,0).mul(c),a=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d);return y(g(r.add(a),43).add(g(s,30)).add(o),r.add(g(a.add(d),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=d.add(2*t),r=f(e,0).mul(d),a=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d),i=g(r.add(a),43).add(g(s,30)).add(o),u=y(i,r.add(g(a.add(d),18)).add(s),n),l=f(e,16).mul(n),c=f(e,24),p=i.add(f(e,t-32)).mul(n),h=u.add(f(e,t-24)).mul(n);return y(g(l.add(c),43).add(g(p,30)).add(h),l.add(g(c.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(c).add(113),s=p(a.mul(d).add(113)).mul(d),o=[i.UZERO,i.UZERO],u=[i.UZERO,i.UZERO];r=r.mul(d).add(f(e,0));let h=0;const b=64*(t-1>>6),v=b+(t-1&63)-63;do{r=g(r.add(a).add(o[0]).add(f(e,h+8)),37).mul(c),a=g(a.add(o[1]).add(f(e,h+48)),42).mul(c),r=r.xor(u[1]),a=a.add(o[0]).add(f(e,h+40)),s=g(s.add(u[0]),33).mul(c),o=x(e,h,o[1].mul(c),r.add(u[0])),u=x(e,h+32,s.add(u[1]),a.add(f(e,h+16))),[s,r]=[r,s],h+=64}while(h!==b);const w=c.add(s.and(255).shl(1));return h=v,u[0]=u[0].add(t-1&63),o[0]=o[0].add(u[0]),u[0]=u[0].add(o[0]),r=g(r.add(a).add(o[0]).add(f(e,h+8)),37).mul(w),a=g(a.add(o[1]).add(f(e,h+48)),42).mul(w),r=r.xor(u[1].mul(9)),a=a.add(o[0].mul(9).add(f(e,h+40))),s=g(s.add(u[0]),33).mul(w),o=x(e,h,o[1].mul(w),r.add(u[0])),u=x(e,h+32,s.add(u[1]),a.add(f(e,h+16))),[s,r]=[r,s],y(y(o[0],u[0],w).add(p(a).mul(l)).add(s),y(o[1],u[1],w).add(r),w)}function v(e,t){return"string"===t?T(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=N(e)),(0,r.OB)().getBool("DEBUG")&&s.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function S(){return(0,r.OB)().platform.now()}function k(e,t){return(0,r.OB)().platform.fetch(e,t)}function T(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}function C(e){return null!=(0,r.OB)().platform.isTypedArray?(0,r.OB)().platform.isTypedArray(e):(0,a.j)(e)}function N(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||s.tI(e)||null==e||C(e)&&n)t.push(e);else if(Array.isArray(e)||C(e))for(let r=0;r<e.length;++r)N(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)N(e[a],t,n)}return t}},569:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,i(e,n,r),i(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2==0?e:e+1}function i(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function p(e,t,n=""){d(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function h(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function x(e){return e%1==0}function b(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function S(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e,t=(e=>0),n,r){return new Promise(((a,s)=>{let o=0;const i=()=>{if(e())return void a();o++;const u=t(o);null!=n&&o>=n?s():null!=r?r(i,u):setTimeout(i,u)};i()}))}function T(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function I(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>x(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function C(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:I(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[o]||s[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function N(e,t){return $(e,t)}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function E(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function _(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function R(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function A(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function O(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function D(e){return"string"==typeof e||e instanceof String}function F(e){return"boolean"==typeof e}function B(e){return"number"==typeof e}function M(e){return Array.isArray(e)?M(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":B(e)?"float32":D(e)?"string":F(e)?"bool":"float32"}function P(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function U(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=U(e+t*i,o,n,r)}return a}function z(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return U(0,e,t,n)}function W(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function G(e,t){const n=j(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function j(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return z(e,new Float32Array(n));if("int32"===t)return z(e,new Int32Array(n));if("bool"===t)return z(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function X(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Y(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{AE:()=>b,Cq:()=>h,D2:()=>M,D5:()=>E,DK:()=>g,E7:()=>c,EC:()=>I,GN:()=>x,GX:()=>z,HD:()=>D,JZ:()=>T,KS:()=>W,LF:()=>i,LP:()=>_,Mu:()=>X,NA:()=>f,NE:()=>K,QB:()=>R,Sm:()=>u,TV:()=>r,U$:()=>w,Ub:()=>O,WD:()=>k,WP:()=>N,YP:()=>v,bT:()=>A,bj:()=>l,bp:()=>C,cO:()=>y,d7:()=>a,e3:()=>V,hj:()=>B,hu:()=>d,jP:()=>L,jn:()=>F,k5:()=>p,l6:()=>H,mf:()=>P,nY:()=>o,oj:()=>S,p8:()=>G,qy:()=>q,rQ:()=>$,tI:()=>Y,uZ:()=>s,wT:()=>j,xH:()=>m})},3720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function o(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),o&&(a[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=h)return S}else{if(e<=-f)return k;if(e+1>=f)return w}return e<0?i(-e,t).neg():u(e%p|0,e/p|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=o,n.fromNumber=i,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=i(l(n,8)),s=g,o=0;o<e.length;o+=8){var u=Math.min(8,e.length-o),d=parseInt(e.substring(o,o+u),n);if(u<8){var p=i(l(n,u));s=s.mul(p).add(i(d))}else s=(s=s.mul(a)).add(i(d))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?i(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=d;var p=4294967296,h=p*p,f=h/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var x=o(1);n.ONE=x;var b=o(1,!0);n.UONE=b;var v=o(-1);n.NEG_ONE=v;var w=u(-1,2147483647,!1);n.MAX_VALUE=w;var S=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=S;var k=u(0,-2147483648,!1);n.MIN_VALUE=k;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},T.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(k)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=i(l(e,6),this.unsigned),s=this,o="";;){var u=s.div(a),c=(s.sub(u.mul(a)).toInt()>>>0).toString(e);if((s=u).isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(k)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1==(1&this.low)},T.isEven=function(){return 0==(1&this.low)},T.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(k)?k:this.not().add(x)},T.neg=T.negate,T.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,c=0,p=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,p+=(h+=a+l)>>>16,c+=(p+=n+i)>>>16,c+=t+o,u((h&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},T.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=d(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(k))return e.isOdd()?k:g;if(e.eq(k))return this.isOdd()?k:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,o=65535&this.low,l=e.high>>>16,c=65535&e.high,p=e.low>>>16,h=65535&e.low,f=0,y=0,x=0,b=0;return x+=(b+=o*h)>>>16,y+=(x+=s*h)>>>16,x&=65535,y+=(x+=o*p)>>>16,f+=(y+=a*h)>>>16,y&=65535,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=o*c)>>>16,f+=n*h+a*p+s*c+o*l,u((x&=65535)<<16|(b&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return b;s=y}else{if(this.eq(k))return e.eq(x)||e.eq(v)?k:e.eq(k)?x:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?x:v:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(k))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),c=o<=48?1:l(2,o-48),p=i(n),h=p.mul(e);h.isNegative()||h.gt(a);)h=(p=i(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=x),s=s.add(p),a=a.sub(h)}return s},T.div=T.divide,T.modulo=function(e){return r(e)||(e=d(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return u(~this.low,~this.high,this.unsigned)},T.and=function(e){return r(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return r(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return r(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},6377:(e,t,n)=>{var r=n(4832),a=n(8652),s=n(801),o=n(2030),i=n(3618),u=n(9049),l=n(1971);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},4832:function(e,t,n){var r;!function(e,a,s){function o(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1971:function(e,t,n){var r;!function(a,s,o){var i,u=256,l=o.pow(u,6),c=o.pow(2,52),d=2*c,p=u-1;function h(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(a.crypto||a.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=a.navigator,n=t&&t.plugins;return[+new Date,a,n,a.screen,x(s)]}}():e,3),r),h=new f(r),b=function(){for(var e=h.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|h.g(4)},b.quick=function(){return h.g(4)/4294967296},b.double=b,y(x(h.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(o.random=e,t):e})(b,p,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<u;)o[a]=a++;for(a=0;a<u;a++)o[a]=o[s=p&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=p&a+1],n=n*u+o[p&(o[a]=o[s=p&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),s),e.exports){e.exports=h;try{i=n(5042)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},5410:()=>{},8628:()=>{},5042:()=>{}},s={};function o(e){var t=s[e];if(void 0!==t)return t.exports;var n=s[e]={id:e,loaded:!1,exports:{}};return a[e].call(n.exports,n,n.exports,o),n.loaded=!0,n.exports}o.amdD=function(){throw new Error("define cannot be used indirect")},o.amdO={},e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",n="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",r=e=>{e&&e.d<1&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},o.a=(a,s,o)=>{var i;o&&((i=[]).d=-1);var u,l,c,d=new Set,p=a.exports,h=new Promise(((e,t)=>{c=t,l=e}));h[t]=p,h[e]=e=>(i&&e(i),d.forEach(e),h.catch((e=>{}))),a.exports=h,s((a=>{var s;u=(a=>a.map((a=>{if(null!==a&&"object"==typeof a){if(a[e])return a;if(a.then){var s=[];s.d=0,a.then((e=>{o[t]=e,r(s)}),(e=>{o[n]=e,r(s)}));var o={};return o[e]=e=>e(s),o}}var i={};return i[e]=e=>{},i[t]=a,i})))(a);var o=()=>u.map((e=>{if(e[n])throw e[n];return e[t]})),l=new Promise((t=>{(s=()=>t(o)).r=0;var n=e=>e!==i&&!d.has(e)&&(d.add(e),e&&!e.d&&(s.r++,e.push(s)));u.map((t=>t[e](n)))}));return s.r?l:o()}),(e=>(e?c(h[n]=e):l(p),r(i)))),i&&i.d<0&&(i.d=0)},o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),o(2220)})();